class o{static applyCSSVars(e,t,n){const i=u=>u.href?u.href.indexOf(window.location.origin)===0:!0;Array.from(e.styleSheets).filter(i).forEach(u=>{Array.from(u.cssRules).filter(r=>r instanceof CSSStyleRule).forEach(r=>{Array.from(r.style).forEach(p=>{p.startsWith("--")&&o.applyIfExists(t,n,p)})})})}static applyVarsTextInput(e,t){t&&(o.applyIfExists(e,t,"--ez-text-input__input--background-color"),o.applyIfExists(e,t,"--ez-text-input__input--border-color"),o.applyIfExists(e,t,"--ez-text-input--height"),o.applyIfExists(e,t,"--ez-text-input__input--disabled--background-color"),o.applyIfExists(e,t,"--ez-text-input__input--disabled--color"),o.applyIfExists(e,t,"--ez-text-input--height--slim"),o.applyIfExists(e,t,"--ez-text-input--border-radius"),o.applyIfExists(e,t,"--ez-text-input__input--focus--border-color"),o.applyIfExists(e,t,"--ez-text-input__icon--width"),o.applyIfExists(e,t,"--ez-text-input__input--focus--icon-color"),o.applyIfExists(e,t,"--ez-text-input__margin-bottom"))}static applyVarsButton(e,t){t&&["--ez-button--min-width","--ez-button--height","--ez-button__icon--width","--ez-button__inline__icon--padding","--ez-button--padding-top","--ez-button--padding-bottom","--ez-button--padding-right","--ez-button--padding-left","--ez-button--color","--ez-button--font-size","--ez-button--font-family","--ez-button--font-weight","--ez-button--background-color","--ez-button--border-radius","--ez-button--border","--ez-button--hover-color","--ez-button--hover--background-color","--ez-button--disabled-color","--ez-button--disabled--background-color","--ez-button--focus--border","--ez-button--focus--box-shadow","--ez-button--active-color","--ez-button--active--background-color","--ez-button--link-color","--ez-button--link--hover-color","--ez-button--link--small--font-size","--ez-button--link--medium--font-size","--ez-button--link--large--font-size"].forEach(n=>{o.applyIfExists(e,t,n)})}static applyVarsGrid(e,t){t&&["--ez-grid--min-height","--snk-grid-min-height"].forEach(n=>{const i=getComputedStyle(e).getPropertyValue(n);i!=null&&t.style.setProperty(n,i)})}static applyIfExists(e,t,n){const i=getComputedStyle(e).getPropertyValue(n);i&&t.style.setProperty(n,i)}}export{o as C};

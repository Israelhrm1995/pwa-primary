{"version":3,"file":"ConfigStorage-cf578768-CIb4C9-y.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/ConfigStorage-cf578768.js"],"sourcesContent":["import { R as ResourceFetcher, F as FormConfigFetcher } from './form-config-fetcher-e623539b.js';\nimport { D as DataFetcher, d as dist } from './DataFetcher-db08cad0.js';\nimport { F as FilterItemType } from './filter-item-type.enum-d45e026f.js';\nimport { ObjectUtils } from '@sankhyalabs/core';\n\nclass GridConfigFetcher extends ResourceFetcher {\n  constructor() {\n    super(...arguments);\n    this.GRID_CONFIG_VERSION = \"V3:\";\n  }\n  async getDefaultConfig(resourceId) {\n    var _a, _b;\n    const payload = { 'requestBody': { 'gridConfig': { 'configName': `GrdCfgHtml5:${resourceId}` } } };\n    const response = await DataFetcher.get().callServiceBroker('GridConfig.restoreGridConfigFromJson', JSON.stringify(payload));\n    const columns = (_b = (_a = response === null || response === void 0 ? void 0 : response.gridConfig) === null || _a === void 0 ? void 0 : _a.field) !== null && _b !== void 0 ? _b : [];\n    return { columns };\n  }\n  getConfig(gridName, resourceID) {\n    const completePath = this.getPath(resourceID, gridName);\n    return new Promise((resolve, reject) => {\n      this.loadResource(completePath)\n        .then(loadedResource => {\n        let config = undefined;\n        if (loadedResource) {\n          config = JSON.parse(loadedResource);\n        }\n        resolve(config);\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  saveConfig(config, gridName, resourceID) {\n    const completePath = this.getPath(resourceID, gridName);\n    return new Promise((resolve, reject) => {\n      this.saveResource(config, completePath)\n        .then((resp) => {\n        resolve(JSON.parse(resp.resource));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  getPath(resourceID, name) {\n    if (name) {\n      return `cfg://grid/${this.GRID_CONFIG_VERSION}${resourceID}/${name}`;\n    }\n    return `cfg://grid/${this.GRID_CONFIG_VERSION}${resourceID}`;\n  }\n}\n\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n    t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n        t[p[i]] = s[p[i]];\n    }\n  return t;\n};\nfunction normalizeValue(value, type) {\n  if (value == undefined) {\n    return value;\n  }\n  if (value instanceof Date) {\n    return value.toISOString();\n  }\n  if (typeof value === \"object\") {\n    if (value instanceof Array) {\n      return value.map(item => {\n        if (FilterItemType.MULTI_LIST === type) {\n          const values = __rest(item, [\"label\"]);\n          return normalizeValue(values);\n        }\n        return normalizeValue(item);\n      });\n    }\n    else {\n      const normalized = Object.assign({}, value);\n      Object.keys(value).forEach(prop => {\n        if (value[prop] !== undefined) {\n          normalized[prop] = normalizeValue(value[prop], type);\n        }\n        else {\n          delete normalized[prop];\n        }\n      });\n      return normalized;\n    }\n  }\n  return value;\n}\nclass FilterBarConfigFetcher extends ResourceFetcher {\n  normalize(items) {\n    return items.map(item => {\n      const { id, value, fixed, visible, type, groupedItems } = item;\n      const stateItem = { id };\n      if (value) {\n        stateItem[\"value\"] = normalizeValue(value, type);\n      }\n      if (fixed) {\n        stateItem[\"fixed\"] = fixed;\n      }\n      if (groupedItems) {\n        if (groupedItems.length === 0) {\n          return;\n        }\n        if (groupedItems.filter(item => item.visible).length > 0) {\n          stateItem[\"visible\"] = true;\n        }\n        stateItem[\"groupedItems\"] = this.normalize(groupedItems);\n      }\n      else {\n        if (visible) {\n          stateItem[\"visible\"] = true;\n        }\n      }\n      return stateItem;\n    }).filter(item => item != undefined);\n  }\n  saveConfig(items, resourceID, configName) {\n    return this.saveResource(this.normalize(items), this.getPath(resourceID, configName));\n  }\n  getConfig(resourceID, configName, urlParams) {\n    return new Promise((accept, reject) => {\n      this.loadResource(this.getPath(resourceID, configName, urlParams))\n        .then((configAsString) => {\n        let fieldsList;\n        if (configAsString) {\n          const filterBarConfig = JSON.parse(configAsString);\n          fieldsList = this.buildFieldList(filterBarConfig.items);\n        }\n        accept(fieldsList || []);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  buildFieldList(items) {\n    return items.map(item => {\n      var _a, _b;\n      if (item.type === FilterItemType.MULTI_LIST) {\n        const multiListValue = item.value;\n        /**\n         * Existe um bug no HTML5 onde ele salva a configuração do filtro na FilterBar como objeto em vez de array\n         * Esse cenário ocorre quando há apenas um item na configuração do filtro\n         */\n        let multilistValueArray = (_b = (_a = multiListValue === null || multiListValue === void 0 ? void 0 : multiListValue.elements) !== null && _a !== void 0 ? _a : multiListValue === null || multiListValue === void 0 ? void 0 : multiListValue.members) !== null && _b !== void 0 ? _b : multiListValue;\n        // Precisamos verificar se o objeto existe ou está unfefined\n        multilistValueArray = multilistValueArray !== null && multilistValueArray !== void 0 ? multilistValueArray : [];\n        multilistValueArray = Array.isArray(multilistValueArray) ? multilistValueArray : [multilistValueArray];\n        // Existem cenários onde o HTML5 não salva o Id do filtro, apenas seu label e value\n        multilistValueArray = multilistValueArray.map(itemRaw => {\n          return Object.assign(Object.assign({}, itemRaw), { id: (itemRaw.id !== undefined) ? itemRaw.id : itemRaw.value });\n        });\n        item.value = ObjectUtils.copy(multilistValueArray);\n      }\n      return item;\n    });\n  }\n  getPath(resourceID, name, urlParams) {\n    let path = `cfg://filter/FilterBarState:${resourceID}`;\n    if (name) {\n      path += `.${name}`;\n    }\n    if (urlParams) {\n      path += this.buildQueryString(urlParams);\n    }\n    return path;\n  }\n  buildQueryString(urlParams) {\n    let queryString = '?';\n    for (let key in urlParams) {\n      if (!urlParams.hasOwnProperty(key)) {\n        continue;\n      }\n      if (queryString.length > 1) {\n        queryString += '&';\n      }\n      queryString += key + '=' + urlParams[key];\n    }\n    return queryString;\n  }\n}\n\nclass PersonalizedFilterFetcher {\n  constructor() {\n    this.DEFAULT_RESOURCE = '_default';\n    this.templateByQuery = new Map();\n    this.buildTemplates();\n  }\n  resolveURI(resourceID, configName, isDefault) {\n    let uri = \"filter-assistent-config://\" + resourceID;\n    if (configName) {\n      uri += \".\" + configName;\n    }\n    if (isDefault) {\n      uri += this.DEFAULT_RESOURCE;\n    }\n    return uri;\n  }\n  resolveLegacyConfigName(legacyConfigName, isDefault) {\n    if (!legacyConfigName) {\n      return '';\n    }\n    let legacyConfig = `?legacyResourceID=${legacyConfigName}`;\n    if (isDefault) {\n      legacyConfig += this.DEFAULT_RESOURCE;\n    }\n    return legacyConfig;\n  }\n  buildTemplates() {\n    this.templateByQuery.set(\"fetchFilterFields\", dist.gql `\n    query($name: String!) {\n      $queryAlias$: fetchFilterFields(name: $name){\n        currentLink {\n          description\n          uri\n        }\n        links {\n          description\n          uri\n          fieldCount\n        }\n        fields {\n          name\n          description\n          uri\n          onlyDate\n          dataType\n          userInterface\n          entityName\n          properties {\n            name\n            value\n          }\n        }\n      }\n    }\n    `);\n    this.templateByQuery.set(\"fetchFilterAssistent\", dist.gql `\n    query($name: String!) {\n      $queryAlias$: fetchFilterAssistent(name: $name) {\n        id\n        name\n        active\n        expression\n        warningMessage\n        assistent\n      }\n    }`);\n    this.templateByQuery.set(\"savePersonalizedFilter\", dist.gql `\n    mutation($name: String!, $filterAssistent: InputFilterAssistent!)  {\n      $queryAlias$: savePersonalizedFilter(name: $name, filterAssistent: $filterAssistent) {\n        id\n        name\n      }\n    }`);\n    this.templateByQuery.set(\"deletePersonalizedFilter\", dist.gql `\n    mutation($name: String!, $filterId: String!) {\n      $queryAlias$: deletePersonalizedFilter(name: $name, filterId: $filterId) {\n        id\n        name\n      }\n    }`);\n    this.templateByQuery.set(\"validateExpression\", dist.gql `\n    query($dataUnitName: String!, $expression: String!) {\n      $queryAlias$: validateExpression(dataUnitName: $dataUnitName, expression: $expression) {\n        valid\n        message\n      }\n    }`);\n  }\n  async loadDefaultFilter(resourceID, filterID, configName, legacyConfigName) {\n    return this.loadPersonalizedFilter(resourceID, filterID, configName, legacyConfigName, true);\n  }\n  async loadPersonalizedFilter(resourceID, filterID, configName, legacyConfigName, isDefault) {\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name: this.resolveURI(resourceID, configName, isDefault) + \"/\" + filterID + this.resolveLegacyConfigName(legacyConfigName, isDefault) },\n        query: this.templateByQuery.get(\"fetchFilterAssistent\"),\n      })\n        .then((resp) => {\n        resp.assistent = JSON.parse(resp.assistent);\n        resolve(resp);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  async saveDefaultFilter(personalizedFilter, resourceID, configName) {\n    return this.savePersonalizedFilter(personalizedFilter, resourceID, configName, true);\n  }\n  async savePersonalizedFilter(personalizedFilter, resourceID, configName, isDefault) {\n    if (!personalizedFilter || Object.keys(personalizedFilter).length == 0) {\n      return Promise.reject(new Error(\"personalizedFilter não pode ser vazio\"));\n    }\n    let personalizedFilterParsed = JSON.parse(JSON.stringify(personalizedFilter));\n    personalizedFilterParsed.assistent = JSON.stringify(personalizedFilterParsed.assistent);\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name: this.resolveURI(resourceID, configName, isDefault), filterAssistent: personalizedFilterParsed },\n        query: this.templateByQuery.get(\"savePersonalizedFilter\"),\n      })\n        .then((resp) => {\n        resolve(resp);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  removeDefaultFilter(personalizedFilter, resourceID, configName) {\n    return this.removePersonalizedFilter(personalizedFilter, resourceID, configName, true);\n  }\n  async removePersonalizedFilter(personalizedFilter, resourceID, configName, isDefault) {\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name: this.resolveURI(resourceID, configName, isDefault), filterId: personalizedFilter.id },\n        query: this.templateByQuery.get(\"deletePersonalizedFilter\"),\n      })\n        .then((resp) => {\n        resolve(resp);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  async validatePersonalizedFilter(dataUnitName, expression) {\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { dataUnitName: dataUnitName, expression: expression },\n        query: this.templateByQuery.get(\"validateExpression\"),\n      })\n        .then((resp) => {\n        resolve(resp);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  loadFields(uri) {\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name: uri },\n        query: this.templateByQuery.get(\"fetchFilterFields\"),\n      })\n        .then((resp) => {\n        var _a;\n        let fields = resp.fields;\n        for (const field of fields) {\n          if (Array.isArray(field.properties) && field.properties.length > 0) {\n            const propertiesConvertedObject = field.properties.reduce((accumulator, prop) => {\n              accumulator[prop.name] = prop.value;\n              return accumulator;\n            }, {});\n            field.properties = propertiesConvertedObject;\n          }\n          if ((_a = field === null || field === void 0 ? void 0 : field.properties) === null || _a === void 0 ? void 0 : _a.options) {\n            field.properties.options = JSON.parse(field.properties.options);\n          }\n        }\n        resolve(Object.assign(Object.assign({}, resp), { fields: fields }));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n}\n\nvar CONFIG_SOURCE;\n(function (CONFIG_SOURCE) {\n  CONFIG_SOURCE[\"form\"] = \"form\";\n  CONFIG_SOURCE[\"grid\"] = \"grid\";\n  CONFIG_SOURCE[\"filterBar\"] = \"filterBar\";\n})(CONFIG_SOURCE || (CONFIG_SOURCE = {}));\nclass ConfigStorage {\n  static addFilterBarLegacyConfig(configName, legacyConfigName) {\n    this.validateResourceId(legacyConfigName);\n    this.filterBarLegacyConfig.set(configName, legacyConfigName);\n  }\n  static addFormLegacyConfig(configName, legacyConfigName) {\n    this.validateResourceId(legacyConfigName);\n    this.formLegacyConfig.set(configName, legacyConfigName);\n  }\n  static addGridLegacyConfig(configName, legacyConfigName) {\n    this.validateResourceId(legacyConfigName);\n    this.gridLegacyConfig.set(configName, legacyConfigName);\n  }\n  static preload(resourceID, configName, legacyConfigs) {\n    if (configName && (legacyConfigs === null || legacyConfigs === void 0 ? void 0 : legacyConfigs.gridLegacyConfig)) {\n      ConfigStorage.addGridLegacyConfig(configName, legacyConfigs.gridLegacyConfig);\n    }\n    if (configName && (legacyConfigs === null || legacyConfigs === void 0 ? void 0 : legacyConfigs.formLegacyConfig)) {\n      ConfigStorage.addFormLegacyConfig(configName, legacyConfigs.formLegacyConfig);\n    }\n    ConfigStorage.loadFormConfig(configName, resourceID);\n    ConfigStorage.loadGridConfig(configName, resourceID);\n  }\n  static async loadFilterBarConfig(name, resourceID, urlParams) {\n    urlParams = this.handleLegacyConfig(name, CONFIG_SOURCE.filterBar, urlParams);\n    const cacheID = ConfigStorage.buildCacheID(name, CONFIG_SOURCE.filterBar, resourceID);\n    if (!ConfigStorage.configById.has(cacheID)) {\n      ConfigStorage.configById.set(cacheID, ConfigStorage.filterBarConfigFetcher.getConfig(resourceID, name, urlParams));\n    }\n    return ConfigStorage.configById.get(cacheID);\n  }\n  static async loadFormConfig(name, resourceID) {\n    name = this.handleLegacyConfigAsString(name, CONFIG_SOURCE.form);\n    const cacheID = ConfigStorage.buildCacheID(name, CONFIG_SOURCE.form, resourceID);\n    if (!ConfigStorage.configById.has(cacheID)) {\n      ConfigStorage.configById.set(cacheID, ConfigStorage.formConfigFetcher.loadFormConfig(name, resourceID));\n    }\n    return ConfigStorage.configById.get(cacheID);\n  }\n  static async loadGridConfig(name, resourceID) {\n    name = this.handleLegacyConfigAsString(name, CONFIG_SOURCE.grid);\n    const cacheID = ConfigStorage.buildCacheID(name, CONFIG_SOURCE.grid, resourceID);\n    if (!ConfigStorage.configById.has(cacheID)) {\n      ConfigStorage.configById.set(cacheID, ConfigStorage.gridConfigFetcher.getConfig(name, resourceID));\n    }\n    return ConfigStorage.configById.get(cacheID);\n  }\n  static async saveFilterBarConfig(config, name, resourceID) {\n    await this.deleteFilterBarConfigCache(name, resourceID);\n    return this.filterBarConfigFetcher.saveConfig(config, resourceID, name);\n  }\n  static async saveFormConfig(config, name, resourceID) {\n    name = this.handleLegacyConfigAsString(name, CONFIG_SOURCE.form);\n    await this.deleteFormConfigCache(name, resourceID);\n    return this.formConfigFetcher.saveConfig(config, name, resourceID);\n  }\n  static async saveCardState(config, name, resourceID) {\n    return this.formConfigFetcher.saveCardState(config, name, resourceID);\n  }\n  static async getDefaultGridConfig(resourceId) {\n    return await this.gridConfigFetcher.getDefaultConfig(resourceId);\n  }\n  static async saveGridConfig(config, name, resourceID) {\n    if (config == undefined) {\n      return;\n    }\n    name = this.handleLegacyConfigAsString(name, CONFIG_SOURCE.grid);\n    await this.deleteGridConfigCache(name, resourceID);\n    return this.gridConfigFetcher.saveConfig(config, name, resourceID);\n  }\n  static async loadDefaultFilter(filterId, resourceID, configName) {\n    const legacyConfigName = this.filterBarLegacyConfig.get(configName);\n    return this.personalizedFilterFetcher.loadDefaultFilter(resourceID, filterId, configName, legacyConfigName);\n  }\n  static async loadPersonalizedFilter(filterId, resourceID, configName) {\n    const legacyConfigName = this.filterBarLegacyConfig.get(configName);\n    return this.personalizedFilterFetcher.loadPersonalizedFilter(resourceID, filterId, configName, legacyConfigName);\n  }\n  static async savePersonalizedFilter(personalizedFilter, resourceID, configName) {\n    //Ao criar ou alterar um filtro personalizado,\n    //precisamos remover o cache do status da filterbar.\n    await this.deleteFilterBarConfigCache(configName, resourceID);\n    return this.personalizedFilterFetcher.savePersonalizedFilter(personalizedFilter, resourceID, configName);\n  }\n  static async saveDefaultFilter(personalizedFilter, resourceID, configName) {\n    await this.deleteFilterBarConfigCache(configName, resourceID);\n    return this.personalizedFilterFetcher.saveDefaultFilter(personalizedFilter, resourceID, configName);\n  }\n  static async removeDefaultFilter(personalizedFilter, resourceID, configName) {\n    return this.personalizedFilterFetcher.removeDefaultFilter(personalizedFilter, resourceID, configName);\n  }\n  static async removePersonalizedFilter(personalizedFilter, resourceID, configName) {\n    return this.personalizedFilterFetcher.removePersonalizedFilter(personalizedFilter, resourceID, configName);\n  }\n  static async validatePersonalizedFilter(dataUnitName, expression) {\n    return this.personalizedFilterFetcher.validatePersonalizedFilter(dataUnitName, expression);\n  }\n  static async deleteGridConfigCache(name, resourceID) {\n    await this.deleteConfigCache(name, resourceID, CONFIG_SOURCE.grid);\n  }\n  static async deleteFormConfigCache(name, resourceID) {\n    await this.deleteConfigCache(name, resourceID, CONFIG_SOURCE.form);\n  }\n  static async deleteFilterBarConfigCache(name, resourceID) {\n    await this.deleteConfigCache(name, resourceID, CONFIG_SOURCE.filterBar);\n  }\n  static validateResourceId(resourceId) {\n    if (!resourceId)\n      throw Error(this.LEGACY_CONFIG_NAME_ERROR_MESSAGE);\n  }\n  static handleLegacyConfig(configName, configSource, urlParams) {\n    let legacyConfigName;\n    switch (configSource) {\n      case CONFIG_SOURCE.filterBar:\n        legacyConfigName = this.filterBarLegacyConfig.get(configName);\n        break;\n      case CONFIG_SOURCE.grid:\n        legacyConfigName = this.gridLegacyConfig.get(configName);\n        break;\n      case CONFIG_SOURCE.form:\n        legacyConfigName = this.formLegacyConfig.get(configName);\n    }\n    const params = urlParams ? Object.assign({}, urlParams) : {};\n    if (legacyConfigName) {\n      params['legacyResourceID'] = legacyConfigName;\n    }\n    return params;\n  }\n  static handleLegacyConfigAsString(name, source) {\n    const params = this.handleLegacyConfig(name, source);\n    const legacyResourceID = params['legacyResourceID'];\n    if (legacyResourceID) {\n      name = name + `?legacyResourceID=${legacyResourceID}`;\n    }\n    return name;\n  }\n  static async deleteConfigCache(name, resourceID, source) {\n    const cacheID = ConfigStorage.buildCacheID(name, source, resourceID);\n    this.configById.delete(cacheID);\n  }\n  static buildCacheID(name, source, resourceID) {\n    if (name == undefined) {\n      return `req_${source}_${resourceID}`;\n    }\n    return `req_${source}_${name}_${resourceID}`;\n  }\n}\nConfigStorage.LEGACY_CONFIG_NAME_ERROR_MESSAGE = \"LegacyConfigName precisa ser informado.\";\nConfigStorage.filterBarLegacyConfig = new Map();\nConfigStorage.formLegacyConfig = new Map();\nConfigStorage.gridLegacyConfig = new Map();\nConfigStorage.configById = new Map();\nConfigStorage.filterBarConfigFetcher = new FilterBarConfigFetcher();\nConfigStorage.formConfigFetcher = new FormConfigFetcher();\nConfigStorage.gridConfigFetcher = new GridConfigFetcher();\nConfigStorage.personalizedFilterFetcher = new PersonalizedFilterFetcher();\n\nexport { ConfigStorage as C, PersonalizedFilterFetcher as P };\n"],"names":["GridConfigFetcher","ResourceFetcher","resourceId","_a","_b","payload","response","DataFetcher","gridName","resourceID","completePath","resolve","reject","loadedResource","config","error","resp","name","__rest","s","e","t","p","i","normalizeValue","value","type","item","FilterItemType","values","normalized","prop","FilterBarConfigFetcher","items","id","fixed","visible","groupedItems","stateItem","configName","urlParams","accept","configAsString","fieldsList","filterBarConfig","multiListValue","multilistValueArray","itemRaw","ObjectUtils","path","queryString","key","PersonalizedFilterFetcher","isDefault","uri","legacyConfigName","legacyConfig","dist","filterID","personalizedFilter","personalizedFilterParsed","dataUnitName","expression","fields","field","propertiesConvertedObject","accumulator","CONFIG_SOURCE","ConfigStorage","legacyConfigs","cacheID","filterId","configSource","params","source","legacyResourceID","FormConfigFetcher"],"mappings":"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","x_google_ignoreList":[0]}
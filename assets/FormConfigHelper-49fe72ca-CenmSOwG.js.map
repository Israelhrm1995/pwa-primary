{"version":3,"file":"FormConfigHelper-49fe72ca-CenmSOwG.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/FormConfigHelper-49fe72ca.js"],"sourcesContent":["import { UserInterface, DataType } from '@sankhyalabs/core';\nimport { a as TAB_NAMES, G as GROUP_NAMES, D as DEFAULT_TYPE } from './constants-7b422de0.js';\n\nconst iconMap = new Map([\n  [UserInterface.DATE, 'calendar'],\n  [UserInterface.DATETIME, 'calendar-clock'],\n  [UserInterface.ELAPSEDTIME, 'timer-outline'],\n  [UserInterface.TIME, 'timer-outline'],\n  [UserInterface.DECIMALNUMBER, 'number'],\n  [UserInterface.INTEGERNUMBER, 'number'],\n  [UserInterface.FILE, 'zip'],\n  [UserInterface.IMAGE, 'pdf'],\n  [UserInterface.HTML, 'tag_code'],\n  [UserInterface.SEARCH, 'search'],\n  [UserInterface.SEARCHPLUS, 'search'],\n  [UserInterface.OPTIONSELECTOR, 'list'],\n  [UserInterface.CHECKBOX, 'list'],\n  [UserInterface.SWITCH, 'boolean'],\n  [UserInterface.PASSWORD, 'eye-off'],\n]);\nconst ID_AVAILABLE_FIELDS = 'container-available-fields';\nvar SORTABLE_PATH;\n(function (SORTABLE_PATH) {\n  SORTABLE_PATH[\"FROM\"] = \"from\";\n  SORTABLE_PATH[\"TO\"] = \"to\";\n})(SORTABLE_PATH || (SORTABLE_PATH = {}));\nfunction getFieldsStructure(evt, path, group, tab) {\n  var _a;\n  const htmlStructure = (_a = evt === null || evt === void 0 ? void 0 : evt[path]) === null || _a === void 0 ? void 0 : _a.children;\n  if (!htmlStructure)\n    return [];\n  return Array.from(htmlStructure).map(({ fieldConfig }) => {\n    return Object.assign(Object.assign({}, fieldConfig), { group, tab });\n  });\n}\nfunction updateTabInFieldsFromGroupList(guideGroups, updatedName) {\n  return guideGroups.map(group => {\n    return Object.assign(Object.assign({}, group), { fields: group.fields.map(field => (Object.assign(Object.assign({}, field), { tab: updatedName }))) });\n  });\n}\nfunction getValidatedFieldValue(fieldValue, dataUnit, fieldName) {\n  var _a;\n  if (fieldValue == undefined || !dataUnit || !fieldName)\n    return;\n  const dataType = (_a = dataUnit.getField(fieldName)) === null || _a === void 0 ? void 0 : _a.dataType;\n  if (dataType == undefined)\n    return;\n  if ((fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.waitmessage) !== undefined)\n    return undefined;\n  const isNonObjectValue = dataType !== DataType.OBJECT &&\n    dataType !== DataType.DATE &&\n    typeof fieldValue === 'object';\n  const processedValue = isNonObjectValue ? fieldValue.value : fieldValue;\n  return dataType === DataType.OBJECT\n    ? JSON.stringify(processedValue)\n    : processedValue;\n}\nfunction getEnabledByProperty(attribName, propertyName, fieldDescriptor) {\n  if (!fieldDescriptor)\n    return true;\n  const fieldProperties = fieldDescriptor.properties || {};\n  const fromAttribName = fieldDescriptor[attribName] !== true;\n  return fieldProperties.hasOwnProperty(propertyName)\n    ? fieldProperties[propertyName] !== 'S'\n    : fromAttribName;\n}\nfunction getValueByProperty(property, fieldDescriptor, defaultValue) {\n  if (fieldDescriptor && fieldDescriptor[property] === true) {\n    return true;\n  }\n  return defaultValue;\n}\nfunction getIconName(userInterface) {\n  return iconMap.get(userInterface) || 'text';\n}\nfunction buildNewGuideName(guidesList) {\n  var _a, _b;\n  const qtdWithNewGuideName = (_b = (_a = guidesList.filter(g => g.name.includes(TAB_NAMES.newGuide))) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n  return qtdWithNewGuideName === 0\n    ? TAB_NAMES.newGuide\n    : `${TAB_NAMES.newGuide} (${qtdWithNewGuideName})`;\n}\nfunction getFieldsToSave(guidesMap) {\n  const fieldsToSave = [];\n  guidesMap.forEach(groups => {\n    groups.forEach(({ fields }) => {\n      fields === null || fields === void 0 ? void 0 : fields.forEach((fieldConfig) => {\n        fieldsToSave.push(buildFieldToSave(fieldConfig));\n      });\n    });\n  });\n  return fieldsToSave;\n}\nfunction buildGuidesMap(rawFields, tabs, dataUnit, generalTab) {\n  const fields = handleFieldsTabNames(rawFields);\n  const guidesMap = initGuidesMap(tabs);\n  if (!(fields === null || fields === void 0 ? void 0 : fields.length))\n    return;\n  for (let guideName of guidesMap.keys()) {\n    const fieldsFromGuide = getFieldsFromGuide(fields, guideName, generalTab);\n    const fieldsByGroupMap = getGroupsFromGuide(fieldsFromGuide, dataUnit, generalTab);\n    const groupsList = parserGroupMapIntoList(fieldsByGroupMap);\n    guidesMap.set(guideName, groupsList);\n  }\n  return guidesMap;\n}\nfunction buildGuides(config, mainArea) {\n  let tabs = config.tabs ? [...config.tabs] : buildTabsFromFields(config === null || config === void 0 ? void 0 : config.fields);\n  tabs = getPossibleGuides(tabs);\n  tabs = initializeTabsNames(tabs);\n  return handleMainTab(tabs, mainArea);\n}\nfunction handleFieldsTabNames(allFields) {\n  // Campos que não fazem parte de nenhuma aba ou da aba \"Geral\", devem ser movidos para a aba __main.\n  return allFields.map(field => {\n    const tabName = field.tab;\n    return Object.assign(Object.assign({}, field), { tab: (!tabName || tabName === TAB_NAMES.general) ? TAB_NAMES.main : field.tab });\n  });\n}\nfunction initializeTabsNames(tabs) {\n  return tabs.map((tab) => {\n    return Object.assign(Object.assign({}, tab), { name: tab.name ? tab.name : tab.label });\n  });\n}\nfunction handleMainTab(tabs, mainTabName) {\n  const mainTab = { name: TAB_NAMES.main, label: mainTabName, visible: true };\n  const hasTabMain = tabs.some((tab) => tab.name === TAB_NAMES.main);\n  if (hasTabMain) {\n    tabs = tabs.map(tab => tab.name === TAB_NAMES.main ? mainTab : tab);\n  }\n  else {\n    tabs.unshift(mainTab);\n  }\n  return tabs;\n}\nfunction getPossibleGuides(tabs) {\n  //O usuário não pode criar uma guia com o nome \"Geral\".\n  // Nesses casos, precisamos mover os campos dessa guia, para a guia __main.\n  return [...tabs.filter(tab => tab.label !== TAB_NAMES.general)];\n}\nfunction initGuidesMap(tabs) {\n  const map = new Map();\n  let possibleGuides = getPossibleGuides(tabs);\n  possibleGuides.forEach(tab => {\n    map.set(tab.name, []);\n  });\n  return map;\n}\nfunction handleFieldLabel(field, fieldDescriptor) {\n  if (!field.label) {\n    field.label = fieldDescriptor.label;\n  }\n}\nfunction handleFieldTab(field, generalTabName) {\n  if (!field.tab) {\n    field.tab = generalTabName;\n  }\n}\nfunction handleFieldGroup(field) {\n  if (!field.group) {\n    field.group = GROUP_NAMES.noGroup;\n  }\n}\nfunction isVisibleOnConfig(fieldDescriptor) {\n  var _a;\n  /**\n   * Quando um campo é ocultado pelo dev, mas queremos manter ele na config precisamos fazer essa tratativa.\n   */\n  return ((_a = fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.properties) === null || _a === void 0 ? void 0 : _a.visibleOnConfig) === true && (fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.visible) === false;\n}\nfunction getGroupsFromGuide(fieldsFromGuide, dataUnit, generalTabName) {\n  const groupsMap = new Map();\n  groupsMap.set(GROUP_NAMES.noGroup, []);\n  for (let field of fieldsFromGuide) {\n    const fieldDescriptor = dataUnit.getField(field.name);\n    if (!(fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.visible) && !isVisibleOnConfig(fieldDescriptor))\n      continue;\n    handleFieldLabel(field, fieldDescriptor);\n    handleFieldTab(field, generalTabName);\n    handleFieldGroup(field);\n    if (groupsMap.has(field.group)) {\n      groupsMap.get(field.group).push(field);\n    }\n    else {\n      groupsMap.set(field.group, [field]);\n    }\n  }\n  return groupsMap;\n}\nfunction getFieldsFromGuide(fields, guideName, generalTabName) {\n  return fields.filter(field => {\n    const fieldTab = getTabName(field.tab, generalTabName);\n    return fieldTab === guideName;\n  });\n}\nfunction getTabName(tab, generalTabName) {\n  var _a;\n  if (typeof tab === 'string')\n    return tab;\n  return (_a = tab === null || tab === void 0 ? void 0 : tab.label) !== null && _a !== void 0 ? _a : generalTabName;\n}\nfunction parserGroupMapIntoList(groupsMap) {\n  const groupsList = [];\n  for (let groupName of groupsMap.keys()) {\n    groupsList.push({ name: groupName, fields: groupsMap.get(groupName) });\n  }\n  return groupsList;\n}\nfunction canAddTab(tab, guideList) {\n  return tab && !(guideList.map(g => g.name).includes(tab));\n}\nfunction buildTabsFromFields(fields) {\n  const guideList = [];\n  let order = 1;\n  fields === null || fields === void 0 ? void 0 : fields.forEach((field) => {\n    const tab = field.tab;\n    if (canAddTab(tab, guideList)) {\n      guideList.push({ name: tab, label: tab, visible: true, order });\n      order = order + 1;\n    }\n  });\n  return guideList;\n}\nfunction buildFieldToSave(fieldConfig) {\n  const fieldToSave = {\n    cleanOnCopy: fieldConfig.cleanOnCopy || false,\n    group: fieldConfig.group === GROUP_NAMES.noGroup ? undefined : fieldConfig.group,\n    label: fieldConfig.label,\n    name: fieldConfig.name,\n    required: fieldConfig.required,\n    readOnly: fieldConfig.readOnly,\n    tab: fieldConfig.tab,\n  };\n  if (fieldConfig.defaultValue != undefined) {\n    if (fieldConfig.defaultValue.type == undefined) {\n      fieldToSave.defaultValue = {\n        type: DEFAULT_TYPE.fixed,\n        value: fieldConfig.defaultValue,\n      };\n    }\n    else {\n      fieldToSave.defaultValue = fieldConfig.defaultValue;\n    }\n  }\n  return fieldToSave;\n}\n\nexport { ID_AVAILABLE_FIELDS as I, SORTABLE_PATH as S, buildGuidesMap as a, buildGuides as b, buildNewGuideName as c, getFieldsStructure as d, getValidatedFieldValue as e, getEnabledByProperty as f, getFieldsToSave as g, getValueByProperty as h, getIconName as i, updateTabInFieldsFromGroupList as u };\n"],"names":["iconMap","UserInterface","ID_AVAILABLE_FIELDS","SORTABLE_PATH","getFieldsStructure","evt","path","group","tab","_a","htmlStructure","fieldConfig","updateTabInFieldsFromGroupList","guideGroups","updatedName","field","getValidatedFieldValue","fieldValue","dataUnit","fieldName","dataType","processedValue","DataType","getEnabledByProperty","attribName","propertyName","fieldDescriptor","fieldProperties","fromAttribName","getValueByProperty","property","defaultValue","getIconName","userInterface","buildNewGuideName","guidesList","_b","qtdWithNewGuideName","g","TAB_NAMES","getFieldsToSave","guidesMap","fieldsToSave","groups","fields","buildFieldToSave","buildGuidesMap","rawFields","tabs","generalTab","handleFieldsTabNames","initGuidesMap","guideName","fieldsFromGuide","getFieldsFromGuide","fieldsByGroupMap","getGroupsFromGuide","groupsList","parserGroupMapIntoList","buildGuides","config","mainArea","buildTabsFromFields","getPossibleGuides","initializeTabsNames","handleMainTab","allFields","tabName","mainTabName","mainTab","map","handleFieldLabel","handleFieldTab","generalTabName","handleFieldGroup","GROUP_NAMES","isVisibleOnConfig","groupsMap","getTabName","groupName","canAddTab","guideList","order","fieldToSave","DEFAULT_TYPE"],"mappings":"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","x_google_ignoreList":[0]}
{"version":3,"file":"FormMetadata-GNw8SuGx.js","sources":["../../node_modules/@sankhyalabs/ezui/dist/collection/utils/interfaces/AbstractFieldMetadata.js","../../node_modules/@sankhyalabs/ezui/dist/collection/utils/form/FormMetadata.js"],"sourcesContent":["import { UserInterface } from \"@sankhyalabs/core\";\nexport const buildFieldMetadata = (descriptor, config) => {\n  let { name, label, group } = Object.assign({}, config);\n  let { readOnly, required } = Object.assign({}, config);\n  let props;\n  let userInterface;\n  if (descriptor) {\n    label = label || descriptor.label;\n    name = name || descriptor.name;\n    required = descriptor.required || (config === null || config === void 0 ? void 0 : config.required);\n    readOnly = descriptor.readOnly || (config === null || config === void 0 ? void 0 : config.readOnly);\n    props = descriptor.properties;\n    userInterface = descriptor.userInterface;\n  }\n  return {\n    name, label, group,\n    readOnly, required,\n    props,\n    userInterface: userInterface || UserInterface.SHORTTEXT,\n  };\n};\n","import { DateUtils } from \"@sankhyalabs/core\";\nimport { buildFieldMetadata } from \"../interfaces/AbstractFieldMetadata\";\nconst DETAIL_PATTERN = /child\\[([^\\]]+)\\]/;\nconst REGEX_DEFAULT_VAR_KEY = /\\$\\{.+\\}/;\nexport class FormMetadata {\n  constructor() {\n    this._sheets = new Map();\n    this._requiredFields = [];\n    this._cleanOnCopyFields = [];\n    this._defaultValues = {};\n  }\n  static getDetailName(name) {\n    const result = DETAIL_PATTERN.exec(name);\n    return result ? result[1] : undefined;\n  }\n  getSheet(name) {\n    return this._sheets.get(name);\n  }\n  getAllSheets() {\n    return this._sheets;\n  }\n  addSheet(sheet) {\n    this._sheets.set(sheet.name, sheet);\n  }\n  addRequiredFields(fields) {\n    this._requiredFields = this._requiredFields.concat(fields);\n  }\n  getRequiredFields() {\n    return this._requiredFields;\n  }\n  addCleanOnCopyFields(fields) {\n    this._cleanOnCopyFields = this._cleanOnCopyFields.concat(fields);\n  }\n  getCleanOnCopyFields() {\n    return this._cleanOnCopyFields;\n  }\n  addDefaultValues(defaultValues) {\n    return this._defaultValues = Object.assign(Object.assign({}, this._defaultValues), defaultValues);\n  }\n  getDefaultValues() {\n    const result = {};\n    Object.entries(this._defaultValues).forEach(([key, value]) => {\n      if (typeof value === \"string\") {\n        const result = REGEX_DEFAULT_VAR_KEY.exec(value);\n        if (result) {\n          value = this.getDefaultVar(result[0]);\n        }\n      }\n      result[key] = value;\n    });\n    return result;\n  }\n  getDefaultVar(name) {\n    if (name === \"${data}\") {\n      return DateUtils.getToday();\n    }\n    if (name === \"${datahora}\") {\n      return DateUtils.getToday(true);\n    }\n    return this._defaultVars ? this._defaultVars.get(name) : undefined;\n  }\n  setDefaultVars(vars) {\n    this._defaultVars = vars;\n  }\n}\nexport const buildFormConfigFromDataUnit = (dataUnit) => {\n  const unitMD = dataUnit.metadata;\n  let fields;\n  if (unitMD) {\n    fields = unitMD.fields\n      .filter(descriptor => descriptor.visible !== false)\n      .map(descriptor => { return { name: descriptor.name, defaultValue: descriptor.defaultValue }; });\n  }\n  const config = { emptyConfig: false, fields };\n  return config;\n};\nexport const buildFormMetadata = (config, dataUnit, includeDetails = false) => {\n  var _a, _b;\n  if (config == undefined || (config === null || config === void 0 ? void 0 : config.emptyConfig) === true) {\n    config = buildFormConfigFromDataUnit(dataUnit);\n  }\n  const sheets = new Map();\n  const hiddenTabs = new Map();\n  const requiredFields = [];\n  const cleanOnCopyFields = [];\n  const defaultValues = {};\n  (_a = config === null || config === void 0 ? void 0 : config.tabs) === null || _a === void 0 ? void 0 : _a.forEach((tab) => {\n    if (!hiddenTabs.has(tab.label) && tab.visible === false) {\n      hiddenTabs.set(tab.label, tab);\n    }\n  });\n  (_b = config === null || config === void 0 ? void 0 : config.fields) === null || _b === void 0 ? void 0 : _b.forEach((field) => {\n    var _a, _b, _c;\n    if (field.visible !== false) {\n      const tabConfig = getTabConfig(field.tab || \"__main\", sheets);\n      if (hiddenTabs.has(tabConfig.label)) {\n        return;\n      }\n      const descriptor = dataUnit.getField(field.name);\n      const fieldVisible = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.visible) == undefined || (descriptor === null || descriptor === void 0 ? void 0 : descriptor.visible) === true;\n      if (descriptor && fieldVisible && tabConfig.visible) {\n        if (!sheets.has(tabConfig)) {\n          sheets.set(tabConfig, []);\n        }\n        const formField = buildFieldMetadata(descriptor, field);\n        sheets.get(tabConfig).push(formField);\n        if (formField.required) {\n          requiredFields.push(field.name);\n        }\n        const cleanOnCopy = field.cleanOnCopy == undefined ? (_a = descriptor.properties) === null || _a === void 0 ? void 0 : _a.cleanOnCopy : field.cleanOnCopy;\n        if (cleanOnCopy || ((_b = descriptor.properties) === null || _b === void 0 ? void 0 : _b.cleanOnCopy)) {\n          cleanOnCopyFields.push(field.name);\n        }\n        let defaultValue = field.defaultValue == undefined ? (_c = descriptor.properties) === null || _c === void 0 ? void 0 : _c.defaultValue : field.defaultValue;\n        if (defaultValue && defaultValue.value != undefined) {\n          const { type, value } = defaultValue;\n          if (type) {\n            if (type === \"V\") {\n              defaultValue = value;\n            }\n            else {\n              try {\n                const parsed = JSON.parse(value);\n                if (parsed && \"value\" in parsed) {\n                  defaultValue = parsed;\n                }\n                else {\n                  defaultValue = value;\n                }\n              }\n              catch (_d) { }\n            }\n          }\n          defaultValues[field.name] = defaultValue;\n        }\n      }\n    }\n  });\n  const metadata = new FormMetadata();\n  metadata.setDefaultVars(config.defaultVars);\n  if (includeDetails) {\n    const unitMD = dataUnit.metadata;\n    if (unitMD != undefined && unitMD.children != undefined) {\n      unitMD.children.forEach(child => {\n        const { label, name, fields } = buildDetailSheet(child);\n        sheets.set({ name, label }, fields);\n      });\n    }\n  }\n  Array.from(sheets.entries())\n    .sort(sortTabs)\n    .forEach(([key, fields]) => {\n    metadata.addSheet({\n      label: (key.label === \"__main\") ? \"Principal\" : key.label,\n      name: key.name || key.label,\n      fields\n    });\n  });\n  metadata.addRequiredFields(requiredFields);\n  metadata.addCleanOnCopyFields(cleanOnCopyFields);\n  metadata.addDefaultValues(defaultValues);\n  return metadata;\n};\nconst getTabConfig = (tab, sheets) => {\n  const tabConfig = (typeof tab === \"string\" ? Array.from(sheets.keys()).find(t => t.label === tab) : tab);\n  return tabConfig || { label: tab, visible: true };\n};\nconst sortTabs = (a, b) => {\n  return a[0].label == '__main' ? -1 : (a[0].order || 10000) - (b[0].order || 10000);\n};\nconst buildDetailSheet = (child) => {\n  return {\n    name: `child[${child.name}]`,\n    label: child.label,\n    fields: []\n  };\n};\n"],"names":["buildFieldMetadata","descriptor","config","name","label","group","readOnly","required","props","userInterface","UserInterface","DETAIL_PATTERN","REGEX_DEFAULT_VAR_KEY","FormMetadata","result","sheet","fields","defaultValues","key","value","DateUtils","vars","buildFormConfigFromDataUnit","dataUnit","unitMD","buildFormMetadata","includeDetails","_a","_b","sheets","hiddenTabs","requiredFields","cleanOnCopyFields","tab","field","_c","tabConfig","getTabConfig","fieldVisible","formField","defaultValue","type","parsed","metadata","child","buildDetailSheet","sortTabs","t","a","b"],"mappings":"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","x_google_ignoreList":[0,1]}
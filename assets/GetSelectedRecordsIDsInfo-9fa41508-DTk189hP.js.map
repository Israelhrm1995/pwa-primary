{"version":3,"file":"GetSelectedRecordsIDsInfo-9fa41508-DTk189hP.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/GetSelectedRecordsIDsInfo-9fa41508.js"],"sourcesContent":["import { JSUtils, DataType } from '@sankhyalabs/core';\n\nfunction getSelectedRecordsIDsInfo(dataUnit) {\n  const selectionInfo = dataUnit === null || dataUnit === void 0 ? void 0 : dataUnit.getSelectionInfo();\n  if (selectionInfo === null || selectionInfo === void 0 ? void 0 : selectionInfo.isAllRecords()) {\n    return [];\n  }\n  const selectedRecordsIDsInfo = [];\n  const selectedRecords = selectionInfo === null || selectionInfo === void 0 ? void 0 : selectionInfo.records;\n  if ((selectedRecords === null || selectedRecords === void 0 ? void 0 : selectedRecords.length) > 0) {\n    selectedRecords.forEach(({ __record__id__ }) => {\n      if (!dataUnit.isNewRecord(__record__id__)) {\n        /*\n          Esse if foi necessário para tratar corretamente o ID\n          do record quando está sendo utilizado no modo standAlone\n          isso não faz a exportação da grid funcionar no modo standAlone\n          mas deixa de causar erro nas oprações de CRUD.\n        */\n        if (!JSUtils.isBase64(__record__id__)) {\n          selectedRecordsIDsInfo.push({\n            name: \"__record__id__\",\n            type: DataType.TEXT,\n            value: __record__id__\n          });\n          return;\n        }\n        const revertBase64ToObject = JSON.parse(window.atob(__record__id__));\n        Object.entries(revertBase64ToObject).forEach(([name, value]) => {\n          const metadataField = dataUnit === null || dataUnit === void 0 ? void 0 : dataUnit.getField(name);\n          if (metadataField == undefined) {\n            return;\n          }\n          selectedRecordsIDsInfo.push(Object.assign({ name, type: metadataField.dataType }, value));\n        });\n      }\n    });\n  }\n  return selectedRecordsIDsInfo;\n}\n\nexport { getSelectedRecordsIDsInfo as g };\n"],"names":["getSelectedRecordsIDsInfo","dataUnit","selectionInfo","selectedRecordsIDsInfo","selectedRecords","__record__id__","JSUtils","DataType","revertBase64ToObject","name","value","metadataField"],"mappings":"+CAEA,SAASA,EAA0BC,EAAU,CAC3C,MAAMC,EAAgBD,GAAa,KAA8B,OAASA,EAAS,iBAAkB,EACrG,GAAIC,GAAkB,MAA4CA,EAAc,eAC9E,MAAO,CAAE,EAEX,MAAMC,EAAyB,CAAE,EAC3BC,EAAkBF,GAAkB,KAAmC,OAASA,EAAc,QACpG,OAAKE,GAAoB,KAAqC,OAASA,EAAgB,QAAU,GAC/FA,EAAgB,QAAQ,CAAC,CAAE,eAAAC,KAAqB,CAC9C,GAAI,CAACJ,EAAS,YAAYI,CAAc,EAAG,CAOzC,GAAI,CAACC,EAAQ,SAASD,CAAc,EAAG,CACrCF,EAAuB,KAAK,CAC1B,KAAM,iBACN,KAAMI,EAAS,KACf,MAAOF,CACnB,CAAW,EACD,MACV,CACQ,MAAMG,EAAuB,KAAK,MAAM,OAAO,KAAKH,CAAc,CAAC,EACnE,OAAO,QAAQG,CAAoB,EAAE,QAAQ,CAAC,CAACC,EAAMC,CAAK,IAAM,CAC9D,MAAMC,EAAgBV,GAAa,KAA8B,OAASA,EAAS,SAASQ,CAAI,EAC5FE,GAAiB,MAGrBR,EAAuB,KAAK,OAAO,OAAO,CAAE,KAAAM,EAAM,KAAME,EAAc,UAAYD,CAAK,CAAC,CAClG,CAAS,CACT,CACA,CAAK,EAEIP,CACT","x_google_ignoreList":[0]}
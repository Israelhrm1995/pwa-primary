{"version":3,"file":"PersonalizedFilterUtils-2db38ff2-DFX-27dU.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/PersonalizedFilterUtils-2db38ff2.js"],"sourcesContent":["import { DataType, NumberUtils, DateUtils, UserInterface } from '@sankhyalabs/core';\nimport { F as FilterItemType } from './filter-item-type.enum-d45e026f.js';\nimport { F as FilterOperand } from './index-8acbae97.js';\n\nclass PersonalizedFilterUtils {\n  /**\n   * Cria uma expressão de filtro a partir de um IExpressionItem.\n   * @param expressionItem - Objeto com os parâmetros necessários para montar a expressão.\n   * @returns Retorna a expressão de filtro.\n   */\n  static buildFilterExpression(expressionItem) {\n    var _a;\n    if (expressionItem == undefined) {\n      return;\n    }\n    let value = (_a = this.buildVariableParameterValue(expressionItem)) !== null && _a !== void 0 ? _a : undefined;\n    let expression = expressionItem.expression || \"\";\n    let commas = \"'\";\n    if (expressionItem.paramVariable) {\n      commas = \"\";\n    }\n    switch (expressionItem.operand) {\n      case \"IN\":\n        expression += ` ${FilterOperand[expressionItem.operand]} (${value})`;\n        break;\n      case \"NULL\":\n      case \"NOT_NULL\":\n        expression += ` IS ${FilterOperand[expressionItem.operand]}`;\n        break;\n      case \"LIKE\":\n        expression += ` LIKE '%${value}%'`;\n        break;\n      case \"START_WITH\":\n        expression += ` LIKE '${value}%'`;\n        break;\n      case \"FINISHED_WITH\":\n        expression += ` LIKE '%${value}'`;\n        break;\n      default:\n        if (expressionItem.operand) {\n          expression += ` ${FilterOperand[expressionItem.operand]}`;\n        }\n        if (['string', 'number'].includes(typeof value)) {\n          value = isNaN(value) ? `${commas}${value}${commas}` : value;\n          expression += ` ${value}`;\n        }\n    }\n    return expression;\n  }\n  /**\n   * Obtém o valor do parâmetro a partir de um IExpressionItem.\n   * @param expressionItem - Objeto com os parâmetros necessários para montar a expressão.\n   * @returns Retorna o valor do parâmetro.\n   */\n  static buildVariableParameterValue(expressionItem) {\n    var _a;\n    if (expressionItem == undefined)\n      return;\n    if (expressionItem.paramVariable) {\n      return this.proccessVarialbeParameter(expressionItem);\n    }\n    if (expressionItem.operand !== FilterOperand.NULL && expressionItem.operand !== \"NOT_NULL\") {\n      let value = expressionItem.value;\n      const type = expressionItem.type;\n      /*\n       Precisamos validar o expressionItem.userInterface além do expressionItem.type\n       pois para filtros herdados do HTML5 não temos o tipo OBJECT, fazendo com que a expressão\n       fique inválida para campos do tipo pesquisa.\n      */\n      if (UserInterface.SEARCH === expressionItem.userInterface || expressionItem.userInterface === UserInterface.OPTIONSELECTOR || DataType.OBJECT == type) {\n        value = (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n      }\n      if (DataType.NUMBER == type && value != undefined) {\n        value = NumberUtils.stringToNumber(value);\n        this.checkIsValidNumber(value);\n      }\n      else if (DataType.DATE == type) {\n        value = this.convertDataValue(value);\n      }\n      else if (DataType.BOOLEAN == type) {\n        value = value ? \"S\" : \"N\";\n      }\n      return value;\n    }\n    return expressionItem.operand;\n  }\n  static checkIsValidNumber(value) {\n    if (isNaN(value)) {\n      throw new Error('O valor informado não é um número válido.');\n    }\n  }\n  static proccessVarialbeParameter(expressionItem) {\n    if (expressionItem.systemConfig != undefined) {\n      const systemConfig = expressionItem.systemConfig;\n      return `?:{entidade=${systemConfig.entity || \"\"};campo=${systemConfig.fieldName || \"\"}}`;\n    }\n    if (expressionItem.userConfig != undefined) {\n      const userConfig = expressionItem.userConfig;\n      return `?:{desc=${userConfig.description || \"\"};tipo=${userConfig.type || \"\"}}`;\n    }\n    return `?:{entidade=${expressionItem.entityName || \"\"};campo=${expressionItem.fieldName || \"\"}}`;\n  }\n  static convertDataValue(value) {\n    if (typeof value == 'string') {\n      value = new Date(value);\n    }\n    return DateUtils.formatDate(value);\n  }\n  /*\n  * Cria uma expressão de filtro para um grupo de itens.\n  */\n  static buildGroupExpression(expressionGroup) {\n    var _a, _b;\n    if (!((_a = expressionGroup === null || expressionGroup === void 0 ? void 0 : expressionGroup.items) === null || _a === void 0 ? void 0 : _a.length))\n      return \"\";\n    const itemExpressions = expressionGroup.items.map((item) => this.buildFilterExpression(item)).join(` ${expressionGroup.operand} `);\n    if (((_b = expressionGroup === null || expressionGroup === void 0 ? void 0 : expressionGroup.childrenGroups) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n      const childGroupExpressions = expressionGroup.childrenGroups.map((children) => this.buildGroupExpression(children)).join(` ${expressionGroup.operand} `);\n      return `(${itemExpressions} ${expressionGroup.operand} (${childGroupExpressions}))`;\n    }\n    return `(${itemExpressions})`;\n  }\n  /*\n  * Valida se os campos das expressão estão válidas para serem criada ou editada.\n  */\n  static validateFields(expressionGroup) {\n    const allItems = this.buildPlainExpressionItems(expressionGroup);\n    for (const item of allItems) {\n      const isValidItem = this.validateExpressionItem(item);\n      if (!isValidItem) {\n        return false;\n      }\n    }\n    return true;\n  }\n  static buildPlainExpressionItems(expressionGroup) {\n    const { items = [], childrenGroups = [] } = expressionGroup || {};\n    const getItemsFromChildren = (childrenGroup) => {\n      return childrenGroup.reduce((listAcc, children) => {\n        var _a;\n        if (children.items)\n          listAcc = listAcc.concat(children.items);\n        if ((_a = children.childrenGroups) === null || _a === void 0 ? void 0 : _a.length) {\n          listAcc = listAcc.concat(getItemsFromChildren(children.childrenGroups));\n        }\n        return listAcc;\n      }, []);\n    };\n    return items.concat(getItemsFromChildren(childrenGroups));\n  }\n  static validateExpressionItem(expressionItem) {\n    const requiredFields = {\n      fieldName: (value) => !!value,\n      value: (value, byPassValue) => {\n        if (byPassValue)\n          return true;\n        return value != undefined;\n      },\n      operand: (value) => !!value\n    };\n    const isAllValidFields = Object.entries(requiredFields).every(entries => {\n      const [fieldName, validate] = entries;\n      const byPassValue = expressionItem.paramVariable || expressionItem.userInterface === 'SWITCH' || [\"NULL\", \"NOT_NULL\"].includes(expressionItem.operand);\n      return validate(expressionItem[fieldName], byPassValue);\n    });\n    return isAllValidFields;\n  }\n  static getNormalizedValue(params, value) {\n    return params.reduce((arrayValues, currentParam, index) => {\n      if (currentParam.dataType === DataType.BOOLEAN && (arrayValues == undefined || arrayValues[index] == undefined)) {\n        arrayValues = !!arrayValues && !Array.isArray(arrayValues) ? [arrayValues] : arrayValues || [];\n        arrayValues[index] = false;\n      }\n      return arrayValues;\n    }, value);\n  }\n  /*\n  * Valida se os filtros personalizados com campo variável são válido.\n  */\n  static validateVariableValues(config, editorValue) {\n    if (!config)\n      return true;\n    let valuesArray = editorValue || config.value;\n    let isValid = true;\n    if (config.type === FilterItemType.PERSONALIZED) {\n      const activeFilters = (config.groupedItems || []).filter(item => item.visible);\n      const allFilterWithVariableParams = activeFilters.filter(activeFilter => { var _a, _b, _c; return !!((_c = (_b = (_a = activeFilter.props) === null || _a === void 0 ? void 0 : _a.personalizedFilter) === null || _b === void 0 ? void 0 : _b.parameters) === null || _c === void 0 ? void 0 : _c.length); });\n      const allParamsWithValues = allFilterWithVariableParams.flatMap(filter => { var _a; return (_a = filter.props.personalizedFilter) === null || _a === void 0 ? void 0 : _a.parameters; });\n      const valuesFromParams = allFilterWithVariableParams.flatMap((filter) => {\n        return filter.props.personalizedFilter.parameters.flatMap((param, index) => {\n          if (!filter.value) {\n            return null;\n          }\n          if (filter.value[index] === undefined && param.dataType === DataType.BOOLEAN) {\n            return false;\n          }\n          return filter.value[index];\n        });\n      });\n      valuesArray = this.getNormalizedValue(allParamsWithValues, valuesArray);\n      isValid = allParamsWithValues.length === valuesFromParams.length && valuesFromParams.every(value => value != null);\n    }\n    return isValid;\n  }\n  /*\n  * Constroi uma lista parâmetros para todos os itens de grupos e subgrupos que são\n  * do tipo variavel;\n  */\n  static buildVariableParameters(expressionGroup) {\n    const allItems = this.buildPlainExpressionItems(expressionGroup);\n    const allParams = [];\n    for (const item of allItems) {\n      if (!item.paramVariable) {\n        continue;\n      }\n      allParams.push({\n        entityName: item.entityName,\n        fieldName: item.fieldName\n      });\n    }\n    return allParams;\n  }\n}\n\nexport { PersonalizedFilterUtils as P };\n"],"names":["PersonalizedFilterUtils","expressionItem","_a","value","expression","commas","FilterOperand","type","UserInterface","DataType","NumberUtils","systemConfig","userConfig","DateUtils","expressionGroup","_b","itemExpressions","item","childGroupExpressions","children","allItems","items","childrenGroups","getItemsFromChildren","childrenGroup","listAcc","byPassValue","entries","fieldName","validate","params","arrayValues","currentParam","index","config","editorValue","valuesArray","isValid","FilterItemType","allFilterWithVariableParams","activeFilter","_c","allParamsWithValues","filter","valuesFromParams","param","allParams"],"mappings":"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","x_google_ignoreList":[0]}
{"version":3,"file":"dataUnitInMemoryLoader-BjgoPaoq.js","sources":["../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@sankhyalabs/core/dist/utils/NumberUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/ObjectUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/ArrayUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/JSUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/StringUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/MaskFormatter.js","../../node_modules/@sankhyalabs/core/dist/ui/FloatingManager.js","../../node_modules/@sankhyalabs/core/dist/utils/DateUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/TimeFormatter.js","../../node_modules/@sankhyalabs/core/dist/http/RequestMetadata.js","../../node_modules/@sankhyalabs/core/dist/dataunit/metadata/UnitMetadata.js","../../node_modules/@sankhyalabs/core/dist/dataunit/formatting/PrettyFormatter.js","../../node_modules/@sankhyalabs/core/dist/dataunit/metadata/DataType.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/action/DataUnitAction.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/StateManager.js","../../node_modules/@sankhyalabs/core/dist/exceptions/ErrorException.js","../../node_modules/@sankhyalabs/core/dist/exceptions/WaitingChangeException.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/AddedRecordsSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/RemovedRecordsSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/RecordsSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/SnapshotSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/LoadingControlSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/SelectionSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/WaitingChangesSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/ChangesSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/UnitMetadataSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/HistReducer.js","../../node_modules/@sankhyalabs/core/dist/dataunit/DataUnitStorage.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/InvalidFieldsSlice.js","../../node_modules/@sankhyalabs/core/dist/dataunit/state/slice/LoadingProperties.js","../../node_modules/@sankhyalabs/core/dist/dataunit/sorting/FieldComparator.js","../../node_modules/@sankhyalabs/core/dist/utils/SortingUtils.js","../../node_modules/@sankhyalabs/core/dist/exceptions/ServiceCanceledException.js","../../node_modules/@sankhyalabs/core/dist/exceptions/SilentException.js","../../node_modules/@sankhyalabs/core/dist/dataunit/DataUnit.js","../../node_modules/@sankhyalabs/core/dist/utils/ElementIDUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/OnboardingUtils.js","../../node_modules/@sankhyalabs/core/node_modules/idb/build/index.js","../../node_modules/@sankhyalabs/core/dist/utils/KeyboardManager/keyCodes/with-events.js","../../node_modules/@sankhyalabs/core/dist/utils/KeyboardManager/keyCodes/dead.js","../../node_modules/@sankhyalabs/core/dist/utils/KeyboardManager/keyCodes/meta.js","../../node_modules/@sankhyalabs/core/dist/utils/KeyboardManager/keyCodes/special-characters.js","../../node_modules/@sankhyalabs/core/dist/utils/KeyboardManager/keyCodes/index.js","../../node_modules/@sankhyalabs/core/dist/utils/CacheManager/interfaces/index.js","../../node_modules/@sankhyalabs/core/dist/utils/CacheManager/index.js","../../node_modules/@sankhyalabs/core/dist/utils/ServiceUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/OverflowWatcher/types/overflow-direction.js","../../node_modules/@sankhyalabs/core/dist/utils/LockManager.js","../../node_modules/@sankhyalabs/core/dist/dataunit/loader/DataUnitInMemoryLoaderConfig.js","../../node_modules/@sankhyalabs/core/dist/utils/ColumnFilterManager.js","../../node_modules/@sankhyalabs/core/dist/dataunit/loader/utils/dataUnitLoaderUtils.js","../../node_modules/@sankhyalabs/core/dist/dataunit/loader/dataUnitInMemoryLoader.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { StringUtils } from \"./StringUtils.js\";\nconst NUMBERINPUTS_REGEX_SCIENTIFIC_PARTS = /^([+-])?(\\d+).?(\\d*)[eE]([-+]?\\d+)$/;\n/**\n * `NumberUtils`: Utilizado para manipulação de numerais.\n */\nexport class NumberUtils {\n    /**\n    * Realiza o arredondamento de casas decimais de um numero.\n    *\n    * @param value - Numeral a ser arredondado.\n    * @param decimals - Quantidade de casas decimais ussada no arredondamento.\n    *\n    * @returns - O próprio numeral arredondado com a quantidade de casas decimais do argumento decimals.\n    *\n    * @example\n    * Informo: (100.12)       |   100.12\n    * Informo: (100,12)       |   NaN\n    \n    * Informo: (\"100.12\", 1)  |   100.1\n    * Informo: (\"100.12\", 2)  |   100.12\n    * Informo: (\"100.12\", 3)  |   100.12\n    \n    * Informo: (\"100.15\", 1)  |   100.2\n    * Informo: (\"100.15\", 2)  |   100.15\n    * Informo: (\"100.15\", 3)  |   100.15\n    \n    * Informo: (\"100.16\", 1)  |   100.2\n    * Informo: (\"100.16\", 2)  |   100.16\n    * Informo: (\"100.16\", 3)  |   100.16\n    */\n    static round(value, decimals = 2) {\n        const multiplier = Math.pow(10, decimals);\n        return Math.round(value * multiplier) / multiplier;\n    }\n    /**\n    * Determina a ordem de umeros.\n    *\n    * @param a - Primeio número para comparação.\n    * @param b - Segundo número para comparação.\n    * @returns - Um numeral negativo se o primeiro argumento é menor que o segundo, zero se os dois são iguais e um numeral positivo quando o primeiro é maior que o segundo.\n    */\n    static compare(a, b) {\n        if (a === undefined) {\n            return b === undefined ? 0 : 1;\n        }\n        else if (b === undefined) {\n            return -1;\n        }\n        if (a === null) {\n            return b === null ? 0 : 1;\n        }\n        else if (b === null) {\n            return -1;\n        }\n        return a > b ? 1 : (a < b ? -1 : 0);\n    }\n}\n/**\n* Converte o dado numérico de string para number.\n*\n* @param value Numeral em formato de string a ser convertido (Importante: formato PT-BR ou já em formato numérico: ######.##).\n* @returns - Numeral passado.\n* @example\n* @\"100,12\"     |       100.12\n* @\"100.12\"     |       100.12\n* @\"-100,12\"    |       -100.12\n* @\"R$100,12\"   |       100.12\n* @\"-R$100,12\"  |       -100.12\n* @\"string\"     |       NaN\n*/\nNumberUtils.stringToNumber = (value) => {\n    if (value === '' || value === null || value === undefined) {\n        return NaN;\n    }\n    if (value) {\n        value = value.toString();\n        const negative = (value.charAt(0) === '-');\n        if (!NUMBERINPUTS_REGEX_SCIENTIFIC_PARTS.test(value)) {\n            value = value.replace(/[^\\d.,]/g, '');\n        }\n        else {\n            value = value.replace(/^-/g, '');\n        }\n        //In case of simple string such as: \"@@@@@@@\"\n        if (value === '') {\n            return Number(NaN);\n        }\n        const indexV = value.indexOf(',');\n        const indexP = value.indexOf('.');\n        if (indexP > indexV) {\n            value = value.replace(',', '');\n        }\n        else if (indexP < indexV) {\n            value = value.replace(/\\./g, '@').replace(',', '.').replace(/@/g, '');\n        }\n        if (negative) {\n            value = '-' + value;\n        }\n    }\n    return Number(value);\n};\n/**\n* Formata o numeral com a precisão informada.\n*\n* @param value - Numeral em formato de string a ser convertido (Importante: formato PT-BR ou já em formato numérico - sem separador de milhares: ######.##).\n* @param precision - Quantidade de casas decimais.\n* @param prettyPrecision - Quantidade de zeros nos decimais.\n* @param defaultValue - Valor padrão caso o value não seja um valor numérico válido.\n*\n* @returns - Numeral em formato de String formatado em PT-BR.\n* @example\n* Informado: ('10,9845444', 3, 3) | Retorna: '10,985'\n* Informado: (undefined, 3, 3) | Retorna: NaN\n* Informado: (undefined, 3, 3, '0,00') | Retorna: 0,00\n*/\nNumberUtils.format = (value, precision, prettyPrecision = NaN, defaultValue = NaN.toString()) => {\n    if (value === '' || value === undefined || value === \"NaN\") {\n        return defaultValue;\n    }\n    const newValue = NumberUtils.stringToNumber(value);\n    if (isNaN(newValue)) {\n        return defaultValue;\n    }\n    //Validation \"precision\":\n    // Case1: precision < 0 => does not use precision\n    // Case2: presicion not int => does not use precision\n    if (precision < 0 || Math.abs(Math.round(precision * 1) / 1) !== precision) {\n        //Once stringToNumber returns number format, we need to change to pt-br\n        return NumberUtils.changeFormat(newValue.toString());\n    }\n    //Validation \"prettyPrecision\"\n    let prettyPrecisionInternal = 0;\n    // Case1: prettyPrecision < 0 => prettyPrecision does not change de format that means: prettyPrecisionInternal = precision;\n    // Case2: prettyPrecision not int => prettyPrecision does not change de format that means: prettyPrecisionInternal = precision;\n    if (isNaN(prettyPrecision) || Math.abs(Math.round(prettyPrecision * 1) / 1) !== prettyPrecision) {\n        prettyPrecisionInternal = precision;\n    }\n    else {\n        prettyPrecisionInternal = prettyPrecision;\n    }\n    let newValueStr;\n    newValueStr = (Math.round(newValue * Math.pow(10, precision)) / Math.pow(10, precision)).toLocaleString('pt-br', { minimumFractionDigits: precision });\n    //prettyPrecision\n    const varSettingPP = precision - prettyPrecisionInternal;\n    if (varSettingPP > 0) {\n        for (let i = 0; i < varSettingPP; i++) {\n            if (newValueStr.substring(newValueStr.length - 1) == \"0\" && precision > 0) {\n                newValueStr = newValueStr.substring(0, newValueStr.length - 1);\n            }\n        }\n    }\n    //in Case \".\" or \",\" in the end of the string\n    if (newValueStr.substring(newValueStr.length - 1) == \".\" || newValueStr.substring(newValueStr.length - 1) == \",\") {\n        newValueStr = newValueStr.substring(0, newValueStr.length - 1);\n    }\n    return newValueStr;\n};\n/**\n* Formata o numeral com a precisão informada e o valor default 0,00 caso o value não seja um numero valido.\n*\n* @param value - Numeral em formato de string a ser convertido (Importante: formato PT-BR ou já em formato numérico - sem separador de milhares: ######.##).\n* @param precision - Quantidade de casas decimais.\n* @param prettyPrecision - Quantidade de zeros nos decimais.\n*\n* @returns - Numeral em formato de String formatado em PT-BR.\n* @example\n* Informado: ('10,9845444', 3, 3) | Retorna: '10,985'\n* Informado: (undefined, 3, 3) | Retorna: 0,00\n*/\nNumberUtils.safeFormat = (value, precision, prettyPrecision = NaN) => {\n    return NumberUtils.format(value, precision, prettyPrecision, \"0,00\");\n};\n/**\n* Retira os separadores de milhar de um numeral em formato de string.\n*\n* @param value - Numeral em formato de string a ser convertido.\n* @param formatnumber - Formatação de ENTRADA e SAÍDA do utilitário: pt-BR=\"###.###,##\" en-US=\"###,###.##\"; Default: \"pt-BR\".\n*\n* @returns - Numeral em formato de string formatado apenas com separador decimal.\n* @example\n* Informado: '95.12' | Retorna: '9512'\n*/\nNumberUtils.keepOnlyDecimalSeparator = (value, formatnumber = 'pt-BR') => {\n    //Formatting formatnumber to be able to get lowercases\n    formatnumber = formatnumber.toUpperCase();\n    //Formatting value following formatnumber parameter\n    //keep only decimal character in order to correct format the string\n    //This transformation is due the \"stringtoNumber\" method is a general method that tries to convert all formated strings\n    if (formatnumber === 'EN-US') {\n        value = value.replace(/,/g, '');\n    }\n    else {\n        value = value.replace(/\\./g, '');\n    }\n    return value;\n};\n/**\n* Troca o formato do numeral(string) de \"PT-BR\" para \"EN-US\" e vice-versa.\n*\n* @param value - Numeral em formato de string a ser convertido.\n*\n* @returns - Numeral em formato de string formatado de \"PT-BR\" para \"EN-US\" e vice-versa.\n* @example\n* Informo: \"15,55\"     | Obtenho: \"15.55\"\n* @example\n* Informo: \"27.99\"     | Obtenho: \"27,99\"\n*/\nNumberUtils.changeFormat = (value) => {\n    //Formatting output following formatnumber\n    return value.replace(/\\./g, '_').replace(/,/g, '.').replace(/_/g, ',');\n};\n/**\n* Obtém o valor ou o valor padrão, caso o valor seja inválido(NaN/undefined).\n*\n* @param value - Valor a ser validado.\n* @param defaultValue - Valor padrão a ser retornado caso o value seja inválido.\n*\n* @returns - O próprio numeral passado ou zero.\n*\n* @example\n* Informo: value: 30, defaultValue: 0     | Obtenho: 30\n* @example\n* Informo: value: \"30\", defaultValue: 0   | Obtenho: 30\n* @example\n* Informo: value: \"30abc\", defaultValue: 0   | Obtenho: 0\n*/\nNumberUtils.getValueOrDefault = (value, defaultValue) => {\n    value = StringUtils.isEmpty(value) ? undefined : value;\n    value = Number(value);\n    if (isNaN(value)) {\n        return Number(defaultValue);\n    }\n    return value;\n};\n/**\n* Obtém o valor ou zero, caso o valor seja inválido(NaN/undefined).\n*\n* @param value - Numeral a ser validado.\n*\n* @returns - O próprio numeral passado. Caso esse seja inválido retorna zero.\n*/\nNumberUtils.getValueOrZero = (value) => {\n    return NumberUtils.getValueOrDefault(value, 0);\n};\n//# sourceMappingURL=NumberUtils.js.map","/**\n * `ObjectUtils`: Utilizado para manipulação de objetos.\n */\nexport default class ObjectUtils {\n    /**\n     * Faz a cópia do objeto.\n     *\n     * @param data - Objeto a ser copiado.\n     * @returns - A cópia do objeto válido.\n     */\n    static copy(data) {\n        return this.stringToObject(this.objectToString(data));\n    }\n    /**\n     * Converte um objeto em string/JSON.\n     *\n     * @param data - Objeto a ser convertido.\n     * @returns - Uma string JSON.\n     *\n     * @example\n     * @Informado: ```{nome : \"Sankhya\", cidade: \"Uberlandia\"}``` | Obtenho: ```\"{\"nome\" : \"Sankhya\", \"cidade\":\"Uberlandia\"}\"```\n     */\n    static objectToString(data) {\n        return JSON.stringify(data);\n    }\n    /**\n     * Converte uma string/JSON em objeto.\n     *\n     * @param data - String a ser convertida.\n     * @returns - Um objeto válido.\n     *\n     * @example\n     * Informado: ```\"{\"nome\" : \"Sankhya\", \"cidade\":\"Uberlandia\"}\"``` | Obtenho: ```{nome : \"Sankhya\", cidade: \"Uberlandia\"}```\n     */\n    static stringToObject(data) {\n        return JSON.parse(data);\n    }\n    /**\n     * Faz a ordenação de um objeto por uma propriedade.\n     *\n     * @param data - Objeto a ser ordenado.\n     * @param property - Nome da propriedade a ser ordenada.\n     * @returns - O objeto ordenado pela propriedade.\n     */\n    static sortByProperty(data, property) {\n        return Object.keys(data)\n            .sort(function (keyA, keyB) {\n            const x = data[keyA][property];\n            const y = data[keyB][property];\n            return x < y ? -1 : x > y ? 1 : 0;\n        }).reduce((obj, key) => {\n            obj[key] = data[key];\n            return obj;\n        }, {});\n    }\n    /**\n     * Remove atributos nulos e indefinidos de um objeto.\n     *\n     * @param data - Objeto a ser filtrado.\n     * @returns - O objeto com as propriedades válidas.\n     */\n    static removeEmptyValues(obj) {\n        return Object.fromEntries(Object.entries(obj)\n            .filter(([, v]) => v != null)\n            .map(([k, v]) => [k, v === Object(v) ? ObjectUtils.removeEmptyValues(v) : v]));\n    }\n    /**\n     * Compara se um objeto é igual a outro objeto.\n     *\n     * @param obj1 - Objeto a ser comparado.\n     * @param obj2 - Objeto a ser comparado.\n     * @returns - Se o objeto 1 é igual ao objeto 2.\n     */\n    static equals(obj1, obj2) {\n        return ObjectUtils.objectToString(obj1) === ObjectUtils.objectToString(obj2);\n    }\n    /**\n     * Compara se o valor de dois items são equivalentes.\n     * Comparando tanto o valor do item em si, quanto sua propriedade \"value\"\n     *\n     * @param obj1 - Objeto a ser comparado.\n     * @param obj2 - Objeto a ser comparado.\n     * @param propToCompare - propriedade que deve ser comparada.\n     * @returns - Se o objeto 1 é equivalente ao objeto 2.\n     *\n     * * @example\n     * hasEquivalentProps('123', {value: '123', label: teste}, 'value') | Retorna: true\n     * @example\n     * hasEquivalentProps('xpto', {value: '123', label: teste}, 'propName') | Retorna: false\n     */\n    static hasEquivalentProps(obj1, obj2, propToCompare = \"value\") {\n        return this.getComparableProp(obj1, propToCompare) == this.getComparableProp(obj2, propToCompare);\n    }\n    static getComparableProp(value, propToCompare = \"value\") {\n        if (typeof value === 'object' && value !== null && propToCompare in value) {\n            return value[propToCompare];\n        }\n        return value;\n    }\n    /**\n    * Verifica se o objeto está vazio (sem atributos).\n    *\n    * @param obj - Objeto a ser verificado.\n    * @returns - True caso o objeto esteja vazio.\n    */\n    static isEmpty(obj) {\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n    /**\n     * Verifica se o objeto está vazio (sem atributos) e retorna true caso seja undefined ou null.\n     *\n     * @param obj - Objeto a ser verificado.\n     * @returns - True caso o objeto esteja vazio.\n     */\n    static isEmptySafetyCheck(obj) {\n        if (obj === null || obj === undefined)\n            return true;\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n    /**\n     * Verifica se o objeto NÃO está vazio (sem atributos).\n     *\n     * @param obj - Objeto a ser verificado.\n     * @returns - True caso o objeto NÃO esteja vazio\n     */\n    static isNotEmpty(obj) {\n        return !this.isEmpty(obj);\n    }\n    /**\n     * Verifica se o objeto NÃO está vazio (sem atributos) e retorna false caso objeto seja null ou undefined.\n     *\n     * @param obj - Objeto a ser verificado.\n     * @returns - True caso o objeto NÃO esteja vazio\n     */\n    static isNotEmptySafetyCheck(obj) {\n        return !this.isEmptySafetyCheck(obj);\n    }\n    /**\n     * Busca a propriedade de um objeto baseado em seu caminho.\n     *\n     * @param obj - Objeto a ser verificado.\n     * @param keyPath - Caminho da propriedade a ser buscada.\n     * @returns - O valor da propriedade caso ela exista.\n     */\n    static getProp(obj, keyPath) {\n        return keyPath.split('.').reduce((previous, current) => previous === null || previous === void 0 ? void 0 : previous[current], obj);\n    }\n}\n//# sourceMappingURL=ObjectUtils.js.map","import { StringUtils } from \"./StringUtils.js\";\nimport { NumberUtils } from './NumberUtils.js';\nimport ObjectUtils from \"./ObjectUtils.js\";\n/**\n * `ArrayUtils`: Utilitário com a responsabilidade de manipular Arrays.\n */\nexport default class ArrayUtils {\n    /**\n     * Filtra um array a partir de um critério textual.\n     *\n     * @param argument - Texto a ser usado no filtro.\n     * @param originalArray - Array no formato original.\n     * @param alphabeticalSorting - Determina se o resultado deve ser ordenado ou mantido na ordem original. Por padrão ordena.\n     * @param fieldName - Caso o objeto deva ser filtrado por um campo diferente de \"label\", pode-se usar esse parâmetro.\n     * @returns - Um array filtrado e ordenado conforme necessidade..\n     */\n    static applyStringFilter(argument, originalArray, alphabeticalSorting = true, fieldName = \"label\") {\n        if (!argument) {\n            return originalArray;\n        }\n        const normalizedArgument = ArrayUtils.normalizeSearchString(argument);\n        const filteredArray = originalArray.filter(item => {\n            const itemValue = ArrayUtils.normalizeSearchString(item[fieldName]);\n            return itemValue.includes(normalizedArgument);\n        });\n        return alphabeticalSorting ? ArrayUtils.sortAlphabetically(filteredArray, fieldName) : filteredArray;\n    }\n    /**\n     * Converte texto para caixa alta e substitui caracteres acentuados.\n     *\n     * @param original - Texto a ser convertido.\n     * @returns - Texto com as letras acentuadas sem os acentos e em caixa alta.\n     */\n    static normalizeSearchString(original) {\n        return StringUtils.replaceAccentuatedCharsKeepSymbols(String(original).toUpperCase());\n    }\n    /**\n     * Ordena valores de um array alfabeticamente.\n     *\n     * @param originalArray - Array a ser ordenado.\n     * @returns - Array ordenado alfabeticamente..\n     */\n    static sortAlphabetically(originalArray, fieldName = \"label\") {\n        return originalArray.sort((fieldA, fieldB) => {\n            const valueStringA = fieldA[fieldName];\n            const valueStringB = fieldB[fieldName];\n            const valueIntA = NumberUtils.stringToNumber(valueStringA);\n            const valueIntB = NumberUtils.stringToNumber(valueStringB);\n            if (isNaN(valueIntA) || isNaN(valueIntB)) {\n                return StringUtils.compare(valueStringA, valueStringB);\n            }\n            else {\n                return NumberUtils.compare(valueIntA, valueIntB);\n            }\n        });\n    }\n    /**\n     * Ordena valores de um array alfabeticamente.\n     *\n     * @param arr - Array a ser ordenado.\n     * @returns - Array ordenado alfabeticamente..\n     */\n    static find(arr, checkerFn) {\n        if (arr) {\n            for (let i = 0, length = arr.length; i < length; i++) {\n                if (checkerFn(arr[i], i, arr)) {\n                    return arr[i];\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Retorna o objeto se for encontrado no array, ou -1 se não for encontrado.\n     *\n     * @param arr - Array onde está o objeto.\n     * @param obj - Objeto a ser procurado.\n     * @returns - Array ordenado alfabeticamente..\n     */\n    static indexOf(arr, obj) {\n        let index = -1;\n        if (Array.isArray(arr)) {\n            ArrayUtils.find(arr, (item, i) => {\n                index = i;\n                return ObjectUtils.equals(obj, item);\n            });\n        }\n        return index;\n    }\n    /**\n     * Remove um item de array de acordo com o index.\n     *\n     * @param array - Array onde está o item.\n     * @param index - Index do item a ser removido.\n     * @returns - Array sem o item do index informado.\n     */\n    static removeAtIndex(array, index) {\n        if (index >= 0 && index < array.length) {\n            return array.splice(index, 1)[0];\n        }\n    }\n    /**\n     * Remove um objeto do array.\n     *\n     * @param array - Array onde está o objeto.\n     * @param obj - Objeto a ser removido.\n     * @returns - Array sem o Objeto informado.\n     */\n    static removeReference(array, obj) {\n        let index = ArrayUtils.indexOf(array, obj);\n        return ArrayUtils.removeAtIndex(array, index);\n    }\n    /**\n     * Remove um objeto do array.\n     *\n     * @param array - Array onde está o objeto.\n     * @param obj - Objeto a ser removido.\n     * @returns - Array sem o Objeto informado.\n     */\n    static isIn(arr, obj) {\n        return ArrayUtils.indexOf(arr, obj) > -1;\n    }\n}\n//# sourceMappingURL=ArrayUtils.js.map","import { v4 as uuid } from \"uuid\";\n/**\n * Classe com utiliários comuns para funções genéricas em JavaScript.\n */\nexport class JSUtils {\n    static isHiddenElement(element) {\n        const rect = element.getBoundingClientRect();\n        return !(rect.top > 0 || rect.left > 0 || rect.right > 0);\n    }\n    /**\n     * Método responsável em criar um timer para processar uma determinada função.\n     *\n     * @param callback - Função de callback para processar após o timer.\n     * @param timeout - Valor dos milissegundos desejados para processar a função (o padrão é 300).\n     *\n     * @returns - Retorna um método com controle de timer para processar a função de callback.\n     */\n    static debounce(callback, timeout = 300) {\n        let timer;\n        return (...args) => {\n            clearTimeout(timer);\n            timer = setTimeout(() => { callback.apply(this, args); }, timeout);\n        };\n    }\n    /**\n     * Método responsável por executar uma função e ignorar as outras posteriores até o tempo especificado.\n     *\n     * @param {Function} callback - Função a ser invocada\n     * @param {number} timeout - Quantidade de tempo para aguardar antes de invocar novamente\n     * @param {any} context - O contexto atual\n     * @return {VoidFunction} A função com o debounce\n     */\n    static debounceLeading(callback, timeout = 300, context) {\n        let timer;\n        return (...args) => {\n            if (!timer) {\n                callback.apply((context || this), args);\n            }\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                timer = undefined;\n            }, timeout);\n        };\n    }\n    /**\n     * Método responsável em validar se um elemento HTML está com o ellipsis ativo.\n     *\n     * @param element - Elemento HTML que será verificado.\n     *\n     * @returns - Retorna um valor booleando informando se o elemento está com o ellipsis ativo.\n     */\n    static isEllipsisActive(element) {\n        if (element == undefined) {\n            return false;\n        }\n        if (element.clientWidth < element.scrollWidth) {\n            const style = element.currentStyle || window.getComputedStyle(element);\n            return (style === null || style === void 0 ? void 0 : style.textOverflow) === 'ellipsis';\n        }\n        return false;\n    }\n    /**\n     * Método que verifica se uma string está encodada com base64.\n     *\n     * @param str - String que será verificada.\n     *\n     * @returns - Retorna um valor booleando informando se a string está encodada com base64.\n     */\n    static isBase64(str) {\n        str = (str || '').replaceAll(\"\\n\", \"\");\n        if (str === '' || str.trim() === '') {\n            return false;\n        }\n        try {\n            return window.btoa(window.atob(str)) == str;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    /**\n     * Método responsável em gerar um UUID.\n     *\n     * @returns - Retorna um UUID.\n    */\n    static generateUUID() {\n        return uuid();\n    }\n    /**\n     * Substitui caracteres para suas entidades HTML.\n     *\n     * @param source - String a ter os caracteres substituidos.\n     * @returns - Retorna um UUID.\n    */\n    static replaceHtmlEntities(source) {\n        if (source == undefined) {\n            return source;\n        }\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;');\n    }\n}\n//# sourceMappingURL=JSUtils.js.map","import { v4 as uuid } from \"uuid\";\nimport ArrayUtils from \"./ArrayUtils.js\";\nimport { JSUtils } from \"./JSUtils.js\";\n/**\n * `StringUtils`: Utilizado para manipulação de Strings.\n */\nexport class StringUtils {\n    /**\n     * Retorna se a string está vazia.\n     * Valores null e undefined são considerados como vazio.\n     *\n     * @param value - String para ser validada.\n     * @returns - Verdadeiro caso a string não contenha informação.\n     *\n    */\n    static isEmpty(value) {\n        if (value == undefined || value === null) {\n            return true;\n        }\n        value = value.toString();\n        value = value.trim();\n        if (value.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Verifica se argumento informado é do tipo string\n     * @param text\n     */\n    static isString(text) {\n        return typeof text === 'string' || text instanceof String;\n    }\n    /**\n     * Remove acentos de vogais maiúsculas\n     *\n     * @param text  String para ser transformada.\n     * @example entrada: \"ÁÊÇÒ\" // retorno: \"AECO\"\n    */\n    static replaceAccentuatedCharsUpper(text) {\n        if (!this.isString(text)) {\n            return text;\n        }\n        return text.replace(/[ÀÁÂÃÄÅÆ]/g, 'A')\n            .replace(/[ÈÉÊË]/g, 'E')\n            .replace(/[ÌÍÎÏ]/g, 'I')\n            .replace(/[ÒÓÔÕÖØ]/g, 'O')\n            .replace(/[ÙÚÛÜ]/g, 'U')\n            .replace(/[ÝŸ]/g, 'Y')\n            .replace(/[Ñ]/g, 'N')\n            .replace(/[Ç]/g, 'C');\n    }\n    /**\n     * Converte todas as entidades HTML de um texto\n     *\n     * @param text  String para ser transformada.\n     * @example entrada: \"&lt;Teste&gt;\" // retorno: \"<Teste>\"\n    */\n    static decodeHtmlEntities(text) {\n        if (!text) {\n            return text;\n        }\n        const entities = [\n            ['amp', '&'],\n            ['apos', '\\''],\n            ['#x27', '\\''],\n            ['#x2F', '/'],\n            ['#39', '\\''],\n            ['#47', '/'],\n            ['lt', '<'],\n            ['gt', '>'],\n            ['nbsp', ' '],\n            ['quot', '\"']\n        ];\n        for (const entity of entities) {\n            text = text.replace(new RegExp(`&${entity[0]};`), entity[1]);\n        }\n        return text;\n    }\n    /**\n     * Remove acentos de vogais minúsculas.\n     *\n     * @param text  String para ser transformada.\n     * @example entrada: \"áêçò\" // retorno: \"aeco\"\n    */\n    static replaceAccentuatedCharsLower(text) {\n        if (!this.isString(text)) {\n            return text;\n        }\n        return text.replace(/[àáâãäåæ]/g, 'a')\n            .replace(/[èéêë]/g, 'e')\n            .replace(/[ìíîï]/g, 'i')\n            .replace(/[òóôõöø]/g, 'o')\n            .replace(/[ùúûü]/g, 'u')\n            .replace(/[ýÿ]/g, 'y')\n            .replace(/[ñ]/g, 'n')\n            .replace(/[ç]/g, 'c');\n    }\n    /**\n     * Remove acentuação de vogais e de caracteres especiais que não sejam letras ou numeral.\n     *\n     * @param text                  String para ser transformada.\n     * @param removeSpecialChars    Remove outros caracteres especiais que não sejam letras e números.\n     * @example\n     * entrada: \"á@Êç#Ò\", false // retorno: \"a@Ec#O\"\n     * entrada: \"á@Êç#Ò\", true // retorno: \"aEcO\"\n    */\n    static replaceAccentuatedChars(text, removeSpecialChars = true) {\n        if (!this.isString(text)) {\n            return text;\n        }\n        text = StringUtils.replaceAccentuatedCharsLower(text);\n        text = StringUtils.replaceAccentuatedCharsUpper(text);\n        if (removeSpecialChars) {\n            text = text.replace(/[^a-z0-9]/gi, \"\");\n        }\n        return text;\n    }\n    /**\n    * Remove acentos de vogais, substitui Ç por c e retorna a string em caixa alta mantendo espaços e símbolos.\n    * @param text - Texto para ser transformado.\n    * @returns - Texto sem acentuação e caixa alta, mantendo espaços e símbolos.\n    */\n    static replaceAccentuatedCharsKeepSymbols(text) {\n        if (!this.isString(text)) {\n            return text;\n        }\n        return text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toUpperCase();\n    }\n    /**\n     * Calcula um código hash para uma string.\n     * @param value String que será gerado o hash code.\n     * @returns - Um hash calculado com base no valor informado.\n     * @example\n     * Informado: '123456' | Retorna: 1450575459\n    */\n    static hashCode(value) {\n        let hash = 0, i, chr;\n        if (value.length === 0)\n            return hash.toString();\n        for (i = 0; i < value.length; i++) {\n            chr = value.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash.toString();\n    }\n    /**\n     * Converte um texto do tipo string para um booleano.\n     *\n     * @param value Valor a ser convertido.\n     * @param defaultValue Valor padrão.\n     * @returns - Texto convertido.\n     * @example\n     * Informado: 'true'  | Retorna: true\n     * Informado: 'false' | Retorna: false\n    */\n    static getBooleanValue(value, defaultValue = false) {\n        if ([true, \"true\", \"S\"].includes(value)) {\n            return true;\n        }\n        else if ([false, \"false\", \"N\"].includes(value)) {\n            return false;\n        }\n        else {\n            return defaultValue;\n        }\n    }\n    /**\n     *\n     * Adiciona caracteres à esquerda caso texto seja menor que o valor do parâmetro len passado.\n     *\n     * @param str - Texto para ser ajustado.\n     * @param len - Tamanho desejado do texto.\n     * @param pad - Caractere a ser adicionado a esquerda caso o texto menor que o tamanho passado.\n     * @returns - Texto passado se este for maior que o len.\n     * Ou retorna o texto com os caracteres adicionados na esquerda.\n     *\n     * @example\n     * padStart('SANKHYA', 8,'.') | Retorna: '...SANKHYA'\n     * @example\n     * padStart('SANKHYA', 5,'A') | Retorna: 'SANKHYA'\n     *\n     *\n    */\n    static padStart(str, len, pad = \" \") {\n        str = str != undefined ? str : \"\";\n        while (str.length < len) {\n            str = pad + str;\n        }\n        return str;\n    }\n    /**\n     *\n     * Adiciona caracteres à direita caso texto seja menor que o valor do parâmetro len passado.\n     *\n     * @param str - Texto para ser ajustado.\n     * @param len - Tamanho desejado do texto.\n     * @param pad - Caractere a ser adicionado a direita caso o texto menor que o tamanho passado.\n     * @returns - Texto passado se este for maior que o len.\n     * Ou retorna o texto com os caracteres adicionados na direita.\n     *\n     * @example\n     * padStart('SANKHYA', 8,'.') | Retorna: 'SANKHYA...'\n     * @example\n     * padStart('SANKHYA', 5,'A') | Retorna: 'SANKHYA'\n     *\n     *\n    */\n    static padEnd(str, len, pad = \" \") {\n        str = str != undefined ? str : \"\";\n        while (str.length < len) {\n            str = str + pad;\n        }\n        return str;\n    }\n    /**\n     * Determina a ordem de strings.\n     *\n     * @param a - Primeira string para comparação.\n     * @param b - Segunda string para comparação.\n     * @returns - Um numeral negativo se o primeiro argumento é menor que o segundo, zero se os dois são iguais e um numeral positivo quando o primeiro é maior que o segundo.\n     */\n    static compare(a, b) {\n        if (a === undefined) {\n            return b === undefined ? 0 : 1;\n        }\n        else if (b === undefined) {\n            return -1;\n        }\n        if (a === null) {\n            return b === null ? 0 : 1;\n        }\n        else if (b === null) {\n            return -1;\n        }\n        return a.localeCompare(b);\n    }\n    /**\n     * Converte string em camelCase.\n     * Combina palavras compostas ou frases, alterando a inicial de cada uma, a partir da primeira, para maiúscula e unidas sem espaços.\n     * @param value String a ser convertida.\n     * @returns String convertida em camelCase.\n     *\n     * @example\n     * toCamelCase('Exemplo de uso') | Retorna: 'exemploDeUso'\n     */\n    static toCamelCase(value) {\n        if (!value)\n            return \"\";\n        if (value.match(/^[a-z]+[A-Z]/) || value.includes(\".\")) {\n            return value;\n        }\n        return value\n            .toLowerCase()\n            .replace(/^([A-Z])|[\\s-_](\\w)/g, (_, p1, p2) => (p2 === null || p2 === void 0 ? void 0 : p2.toUpperCase()) || p1.toLowerCase());\n    }\n    /**\n     * Converte string para PascalCase.\n     * @param value String a ser convertida.\n     * @returns String convertida em PascalCase.\n     */\n    static toPascalCase(value) {\n        return (value || \"\")\n            .toLowerCase()\n            .replace(/(?:^|\\s)\\w/g, (match) => match.toUpperCase())\n            .replace(/[\\s-_]/g, '');\n    }\n    /**\n     * Utilitário para converter string em snake_case.\n     * @param value String a ser convertida.\n     * @returns String convertida em snake_case.\n     */\n    static toSnakeCase(value) {\n        return (value || \"\")\n            .toLowerCase()\n            .replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`)\n            .replace(/[\\s-]/g, '_')\n            .replace(/^_/, \"\");\n    }\n    /**\n     * Utilitário para converter string em kebab-case.\n     * @param value String a ser convertida.\n     * @returns String convertida em KebabCase.\n     */\n    static toKebabCase(value) {\n        return (value || \"\").replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[\\s_]+/g, '-').toLowerCase();\n    }\n    /**\n     * Utilitário para remover caracteres em branco da string.\n     * @param value String a ser removido os espaços.\n     * @returns String sem espaços em branco.\n     */\n    static replaceBlankCharacters(value) {\n        return (value || \"\").replace(/ /g, \"\");\n    }\n    /**\n     * Utilitário para formatar bytes em string legível, convertendo para\n     * múltiplos maiores caso necessário.\n     * @param byte quantidade de bytes a serem representados.\n     * @returns string formatada de acordo com a unidade.\n     */\n    static formatBytes(bytes) {\n        const units = [\"B\", \"KB\", \"MB\", \"GB\"];\n        if (bytes < 1024) {\n            return `${bytes === null || bytes === void 0 ? void 0 : bytes.toString()}B`;\n        }\n        const base = Math.log(bytes) / Math.log(1024);\n        const offSet = Math.floor(base);\n        if (offSet >= units.length) {\n            return `${bytes === null || bytes === void 0 ? void 0 : bytes.toString()}B`;\n        }\n        const value = this.prettyPrecision(Math.pow(1024, base - offSet).toFixed(2).toString());\n        const unit = units[offSet];\n        return `${value}${unit}`;\n    }\n    /**\n   * Método interno. Remove zeros depois da vírgula diminuindo o tamanho\n   * da string.\n   * @param strNumber representação textual do número a ser ajustado.\n   * @returns simplificação do strNumber, sem os zeros à direita depois do ponto.\n   */\n    static prettyPrecision(strNumber) {\n        const parts = strNumber.split(\".\");\n        if (parts.length > 1) {\n            const lastPart = parts.length - 1;\n            let lastPartStr = parts[lastPart];\n            while (lastPartStr.length > 0 && lastPartStr[lastPartStr.length - 1] === \"0\") {\n                lastPartStr = lastPartStr.slice(0, lastPartStr.length - 1);\n            }\n            if (lastPartStr) {\n                parts[lastPart] = lastPartStr;\n            }\n            else {\n                parts.pop();\n            }\n        }\n        return parts.join(\".\");\n    }\n    /**\n    * Método utilizado para gerar IDs únicos.\n    * @returns id único randômico.\n    */\n    static generateUUID() {\n        return uuid();\n    }\n    /**\n     * Checa se uma string pode ser convertida para letras maiúsculas ou minúsculas\n     *\n     * @param {string} original - A string a ser verificada\n     * @return {boolean} Se a string pode ser convertida\n     */\n    static isCaseable(original) {\n        if (original == null)\n            return false;\n        const uppercase = original.toUpperCase();\n        const lowercase = original.toLowerCase();\n        return original !== uppercase || original !== lowercase;\n    }\n    /**\n     * Checa se uma string é minúscula\n     *\n     * @param {string} original - A string a ser verificada\n     * @return {boolean} Se a string é minúscula\n     */\n    static isLowerCase(original) {\n        if (original == null)\n            return false;\n        const uppercase = original.toUpperCase();\n        return this.isCaseable(original) && uppercase !== original;\n    }\n    /**\n     * Inverte uma string de minúsculas para maiúsculas e vice-versa\n     *\n     * @param {string} original - A string a ser invertida\n     * @return {string} A string invertida\n     */\n    static getOppositeCase(original) {\n        if (original == null)\n            return \"\";\n        return this.isLowerCase(original) ? original.toUpperCase() : original.toLowerCase();\n    }\n    static replaceToSpace(source, replaceList = []) {\n        if (source == undefined) {\n            return source;\n        }\n        replaceList.forEach((word) => {\n            const wordAux = new RegExp(word, 'g');\n            let whiteSpace = '';\n            for (let i = 0; i < word.length; i++) {\n                whiteSpace += ' ';\n            }\n            source = String(source).replace(wordAux, whiteSpace);\n        });\n        return source;\n    }\n    static replaceAccentuatedCharsHtmlEntities(source) {\n        const charsWithoutAccentuation = \"AEIOU_AO_AEIOU_AEIOU_U_C_aeiou_ao_aeiou_aeiou_u_c\";\n        if (source == undefined) {\n            return source;\n        }\n        const replaceList = ['&amp;', '&lt;', '&gt;', '&quot;'];\n        const sourceAux = StringUtils.replaceToSpace(source, replaceList);\n        return sourceAux.replace(/[^\\w ]/g, (char) => {\n            let index = charsWithoutAccentuation.indexOf(char);\n            if (index > -1) {\n                char = charsWithoutAccentuation.charAt(index);\n            }\n            return char || '';\n        });\n    }\n    static getSpecialCharacters(str) {\n        const specialCharsRegex = /[[.\\-\\$\\+\\*,_\\&\\(\\)%\\/\\\\#@!:\\|\\=\\'\\\"]/gmi;\n        let match;\n        let charList = [];\n        while ((match = specialCharsRegex.exec(str))) {\n            charList.push(str[match.index]);\n        }\n        return charList;\n    }\n    static replaceAll(str, strFrom, strTo) {\n        let pos = (str != undefined ? str : '').indexOf(strFrom);\n        while (pos > -1) {\n            str = str.replace(strFrom, strTo);\n            pos = str.indexOf(strFrom);\n        }\n        return (str);\n    }\n    static removeSpecialCharacters(str) {\n        let specialChars = StringUtils.getSpecialCharacters(str);\n        specialChars.forEach((ch) => {\n            str = StringUtils.replaceAll(str, ch, '');\n        });\n        return str;\n    }\n    static getArgumentNumber(argument) {\n        return Number(argument || undefined);\n    }\n    static highlightValue(argument, matchFields, value, fieldMD, forceMatch) {\n        const startHighlightTag = \"<span class='card-item__highlight'>\"; //FIXME: valor hardcoded, não podemos reaproveitar para outros cenários, dessa forma.\n        const endHighlightTag = \"</span>\";\n        let valueAux = JSUtils.replaceHtmlEntities(value);\n        if (argument && (forceMatch || ArrayUtils.isIn(matchFields, fieldMD.fieldName))) {\n            const argumentNumber = StringUtils.getArgumentNumber(argument);\n            let replacements = (isNaN(argumentNumber) ? argument : argumentNumber.toString()).split(/%|,|\\s+/);\n            let lastMatchIndex = 0;\n            let cleanText = StringUtils.replaceAccentuatedCharsHtmlEntities(valueAux);\n            replacements.forEach((r) => {\n                if (r) {\n                    r = StringUtils.replaceAccentuatedCharsHtmlEntities(r);\n                    let specialChars = StringUtils.getSpecialCharacters(r);\n                    if (specialChars != undefined && specialChars.length > 0) {\n                        r = StringUtils.removeSpecialCharacters(r);\n                    }\n                    if (fieldMD.mask || fieldMD.uiType === 'CGC_CPF' || fieldMD.uiType === 'Phone') {\n                        //Fazemos isso para descondirerar os caracteres especiais de formatação da string\n                        r = r.split('').join('\\\\.?\\\\-?\\\\/?\\\\(?\\\\)?');\n                    }\n                    let regex = new RegExp(r, \"ig\");\n                    regex.lastIndex = lastMatchIndex;\n                    let match = regex.exec(cleanText);\n                    if (match && match.length > 0) {\n                        lastMatchIndex = match.index;\n                        let sizeMatch = match[0].length;\n                        let txtToColor = valueAux.substring(lastMatchIndex, lastMatchIndex + sizeMatch);\n                        let txtColored = (txtToColor === null || txtToColor === void 0 ? void 0 : txtToColor.trim()) ? startHighlightTag + txtToColor + endHighlightTag : '';\n                        let start = valueAux.substring(0, lastMatchIndex);\n                        let end = valueAux.substring(lastMatchIndex + sizeMatch);\n                        valueAux = start + txtColored + end;\n                        lastMatchIndex = lastMatchIndex + txtColored.length;\n                        cleanText = StringUtils.replaceAccentuatedCharsHtmlEntities(valueAux);\n                    }\n                }\n            });\n        }\n        return valueAux;\n    }\n    /**\n     * Escapa caracteres especiais em uma string, usando sequencias de escape Unicode.\n     * @param str A string que deve sofrer alteração.\n     * @returns String com valores alterados.\n     */\n    static escapeString(str) {\n        // eslint-disable-next-line no-control-regex\n        return str.replace(/[\\u0000-\\u001F\\u007F-\\uFFFF<>=&\"']/g, (char) => {\n            return \"\\\\u\" + char.charCodeAt(0).toString(16).padStart(4, \"0\");\n        });\n    }\n}\n//# sourceMappingURL=StringUtils.js.map","/**\n * `MaskFormatter` é usado para formatar strings. Seu comportamento\n * é controlado pelo formato do atributo `mask` que especifica quais\n * caracteres são válidos e onde devem estar posicionados, intercalando-os\n * com eventuais caracteres literais expressados no padrão informado.\n * Sua implementação é inspirada pela implementação em Java do [MaskFormatter](https://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html).\n *\n * Para o padrão da máscara podem ser usados os seguintes caracteres especiais:\n *\n * | Caractere | Comportamento                                                                                               |\n * |:---------:|-------------------------------------------------------------------------------------------------------------|\n * | #         | Qualquer número                                                                                             |\n * | '         | \"Escapa\" o caractere que vem na sequência. Útil quando desejamos converter um caractere especial em literal.|\n * | U         | Qualquer letra. Transforma letras minúsculas em maiúsculas.                                                 |\n * | L         | Qualquer letra. Transforma letras maiúsculas em minúsculas.                                                 |\n * | A         | Qualquer letra ou número.                                                                                   |\n * | ?         | Qualquer letra. Preserva maiúsculas e minúsculas.                                                           |\n * | *         | Qualquer caractere.                                                                                         |\n *\n * Os demais caracteres presentes no padrão serão tratados como literais, isto é,\n * serão apenas inseridos naquela posição.\n *\n * Quando o valor a ser formatado é menor que a máscara, um 'placeHolder'\n * será inserido em cada posição ausente, completando a formatação.\n * Por padrão será usado um espaço em branco como 'placeHolder', mas\n * esse valor pode ser alterado.\n *\n * Por exemplo:\n * '''\n *    const formatter: MaskFormatter = new MaskFormatter(\"###-####\");\n *    formatter.placeholder = '_';\n *    console.log(formatter.format(\"123\"));\n * '''\n * resultaria na string '123-____'.\n *\n * ##Veja mais alguns exemplos:\n * |Padrão          |Máscara           |Entrada       |Saída             |\n * |----------------|------------------|--------------|------------------|\n * |Telefone        |(##) ####-####    |3432192515    |(34) 3219-2515    |\n * |CPF             |###.###.###-##    |12345678901   |123.456.789-01    |\n * |CNPJ            |##.###.###/####-##|12345678901234|12.345.678/9012-34|\n * |CEP             |##.###-###        |12345678      |12.345-678        |\n * |PLACA (veículo) |UUU-####          |abc1234       |ABC-1234          |\n * |Cor RGB         |'#AAAAAA          |00000F0       |#0000F0           |\n *\n */\nexport class MaskFormatter {\n    /**\n     * Setter para mask. Trata-se do padrão que se espera ao formatar o texto.\n     */\n    set mask(mask) {\n        this._mask = mask;\n        this.updateInternalMask();\n    }\n    /**\n     * Getter para mask.\n     *\n     * @return A última máscara informada.\n     */\n    get mask() {\n        return this._mask;\n    }\n    constructor(mask) {\n        this._mask = '';\n        this._maskChars = new Array();\n        /**\n         * Determina qual caractere será usado dos caracteres não presentes no valor,\n         * ou seja, aqueles que o usuário ainda não informou. Por padrão usamos um espaço.\n         */\n        this.placeholder = ' ';\n        this.mask = mask;\n    }\n    /**\n    * Aplica a máscara quando o input é alterado\n    *\n    * @param value Valor a ser aplicado com a máscara.\n    * @return O valor processado de acordo com o padrão.\n    */\n    applyMask(value) {\n        if (this.mask === MaskFormatter.DEFAULT_MASKS.cor_rgb) {\n            value = value.replace(\"#\", \"\");\n            const expectedFormattedValue = this.format(value.replace(/\\s/g, \"\"));\n            if (value === expectedFormattedValue) {\n                return value;\n            }\n            if (value.length >= 6) {\n                const formattedValue = this.format(value);\n                return formattedValue;\n            }\n            else {\n                return value;\n            }\n        }\n        const expectedFormattedValue = this.format(value.replace(/\\s/g, \"\"));\n        if (value === expectedFormattedValue) {\n            return value;\n        }\n        const maskPlaceholders = this.mask.match(/[UAL#?*']/g) || [];\n        const placeholderCount = maskPlaceholders.length;\n        const validValue = value.split('').filter((char, index) => {\n            const placeholder = maskPlaceholders[index];\n            if (!placeholder)\n                return false;\n            switch (placeholder) {\n                case MaskFormatter.DIGIT_KEY:\n                    return /\\d/.test(char);\n                case MaskFormatter.UPPERCASE_KEY:\n                    return /[a-zA-Z]/.test(char);\n                case MaskFormatter.LOWERCASE_KEY:\n                    return /[a-zA-Z]/.test(char);\n                case MaskFormatter.ALPHA_NUMERIC_KEY:\n                    return /[a-zA-Z0-9]/.test(char);\n                case MaskFormatter.CHARACTER_KEY:\n                    return /[a-zA-Z]/.test(char);\n                case MaskFormatter.ANYTHING_KEY:\n                    return true;\n                case MaskFormatter.LITERAL_KEY:\n                    const literalChar = this.mask.charAt(index);\n                    return char === literalChar;\n                default:\n                    return false;\n            }\n        });\n        if (validValue.length >= placeholderCount) {\n            const formattedValue = this.format(validValue.join(''));\n            return formattedValue;\n        }\n        else {\n            const partialValue = validValue.join('');\n            return partialValue;\n        }\n    }\n    /**\n     * Remove a máscara formatando a string retornando sem máscara\n     *\n     * @param value Valor a ser formatado com máscara.\n     * @return O valor processado de acordo com o padrão.\n     */\n    removeMask(value) {\n        const maskString = this.mask.replace(\"#\", \"\");\n        const maskElements = maskString.split(\"\");\n        let valueMapped = value;\n        maskElements.forEach(maskChar => {\n            valueMapped = valueMapped.replace(maskChar, \"\");\n        });\n        return valueMapped;\n    }\n    /**\n     * Formata a string passada baseada na máscara definda pelo atributo mask.\n     *\n     * @param value Valor a ser formatado.\n     * @param trimBefore Executa um trim para remover espaços em branco.\n     * @return O valor processado de acordo com o padrão.\n     */\n    format(value, trimBefore = false) {\n        if (trimBefore) {\n            value = value.trim();\n        }\n        let result = '';\n        const index = [0];\n        let counter = 0;\n        const maxCounter = this._maskChars.length;\n        while (counter < maxCounter) {\n            result = this._maskChars[counter].append(result, value, index);\n            counter++;\n        }\n        return result;\n    }\n    /**\n     * Prepara a formatação internamente de acordo com o padrão.\n     */\n    updateInternalMask() {\n        this._maskChars.length = 0;\n        if (this.mask != null) {\n            let counter = 0;\n            const maxCounter = this.mask.length;\n            while (counter < maxCounter) {\n                let maskChar = this.mask.charAt(counter);\n                switch (maskChar) {\n                    case MaskFormatter.DIGIT_KEY:\n                        this._maskChars.push(new MaskFormatter.DigitMaskCharacter(this, maskChar));\n                        break;\n                    case MaskFormatter.LITERAL_KEY:\n                        if (++counter < maxCounter) {\n                            maskChar = this.mask.charAt(counter);\n                            this._maskChars.push(new MaskFormatter.LiteralCharacter(this, maskChar));\n                        }\n                        break;\n                    case MaskFormatter.UPPERCASE_KEY:\n                        this._maskChars.push(new MaskFormatter.UpperCaseCharacter(this, maskChar));\n                        break;\n                    case MaskFormatter.LOWERCASE_KEY:\n                        this._maskChars.push(new MaskFormatter.LowerCaseCharacter(this, maskChar));\n                        break;\n                    case MaskFormatter.ALPHA_NUMERIC_KEY:\n                        this._maskChars.push(new MaskFormatter.AlphaNumericCharacter(this, maskChar));\n                        break;\n                    case MaskFormatter.CHARACTER_KEY:\n                        this._maskChars.push(new MaskFormatter.CharCharacter(this, maskChar));\n                        break;\n                    case MaskFormatter.ANYTHING_KEY:\n                        this._maskChars.push(new MaskFormatter.MaskCharacter(this, maskChar));\n                        break;\n                    default:\n                        this._maskChars.push(new MaskFormatter.LiteralCharacter(this, maskChar));\n                        break;\n                }\n                counter++;\n            }\n        }\n    }\n}\nMaskFormatter.DIGIT_KEY = \"#\";\nMaskFormatter.LITERAL_KEY = \"'\";\nMaskFormatter.UPPERCASE_KEY = \"U\";\nMaskFormatter.LOWERCASE_KEY = \"L\";\nMaskFormatter.ALPHA_NUMERIC_KEY = \"A\";\nMaskFormatter.CHARACTER_KEY = \"?\";\nMaskFormatter.ANYTHING_KEY = \"*\";\nMaskFormatter.DEFAULT_MASKS = {\n    \"cnpj\": \"##.###.###/####-##\",\n    \"cpf\": \"###.###.###-##\",\n    \"phone\": \"(##) ####-####\",\n    \"cep\": \"##.###-###\",\n    \"cor_rgb\": \"'#AAAAAA\"\n};\n//\n// Classes internas usadas para representar a máscara.\n//\nMaskFormatter.MaskCharacter = class {\n    constructor(maskFormatter, type) {\n        this.maskFormatter = maskFormatter;\n        this.type = type;\n    }\n    /**\n     * Cada subclasse deve sobrescrever retornando true caso represente.\n     * um caractere literal. Por padrão o retorno é false.\n     */\n    isLiteral() {\n        return false;\n    }\n    /**\n     * Retorna se é um texto válido.\n     *\n     * @param aChar - Valor a ser validado.\n     * @returns - Retorna se é um texto válido.\n     */\n    isValidCharacter(aChar) {\n        if (this.isLiteral()) {\n            return (this.getChar(aChar) == aChar);\n        }\n        aChar = this.getChar(aChar);\n        return true;\n    }\n    /**\n     * Retorna o texto informado.\n     *\n     * @param aChar - Texto a ser retornado.\n     * @returns - Texto informado.\n     */\n    getChar(aChar) {\n        return aChar;\n    }\n    /**\n     * Adiciona valor encontrado.\n     *\n     * @param result - String a ser manipulada.\n     * @param formatting - String de formatação a ser adicionada na result.\n     * @param index - Índice que será utilizado para buscar no parâmetro formatting.\n     *\n     * @returns - Valor passado na result incrementado com o valor encontrado na formatting.\n     *\n     * @example\n     * ```  const result = \"\";\n     *       const formatting = \"123456\";\n     *       const index = [0];\n     *       const returnedResult = append(result, formatting, index);\n     *   ```\n     *   Retorna:\n     *   ```returnedResult = \"1\";\n     *      index = [1];\n     *   ```\n     */\n    append(result, formatting, index) {\n        const inString = index[0] < formatting.length;\n        const aChar = inString ? formatting.charAt(index[0]) : '';\n        if (this.isLiteral()) {\n            const literal = this.getChar(aChar);\n            result += literal;\n            if (literal === aChar) {\n                index[0] = index[0] + 1;\n            }\n        }\n        else if (index[0] >= formatting.length) {\n            result += this.maskFormatter.placeholder;\n            index[0] = index[0] + 1;\n        }\n        else if (this.isValidCharacter(aChar)) {\n            result += this.getChar(aChar);\n            index[0] = index[0] + 1;\n        }\n        else {\n            throw new Error(`Valor inválido: \"${aChar}\". Na posição ${index[0] + 1} espera-se ${this.getFormatMessage()}.`);\n        }\n        return result;\n    }\n    /**\n     * Obtém tipo por extenso.\n     *\n     * @returns O tipo por extenso.\n     * @example\n     * Se o tipo for **ALPHA_NUMERIC_KEY** recebo **uma letra ou um número**\n     */\n    getFormatMessage() {\n        let message;\n        switch (this.type) {\n            case MaskFormatter.UPPERCASE_KEY:\n            case MaskFormatter.LOWERCASE_KEY:\n            case MaskFormatter.CHARACTER_KEY:\n                message = 'uma letra';\n                break;\n            case MaskFormatter.DIGIT_KEY:\n                message = 'um número';\n                break;\n            case MaskFormatter.ALPHA_NUMERIC_KEY:\n                message = 'uma letra ou um número';\n                break;\n            default:\n                message = '';\n        }\n        return message;\n    }\n};\nMaskFormatter.LiteralCharacter = class extends MaskFormatter.MaskCharacter {\n    constructor(maskFormatter, fixedChar) {\n        super(maskFormatter, fixedChar);\n        this._fixedChar = fixedChar;\n    }\n    isLiteral() {\n        return true;\n    }\n    getChar(aChar) {\n        aChar;\n        return this._fixedChar;\n    }\n};\nMaskFormatter.DigitMaskCharacter = class extends MaskFormatter.MaskCharacter {\n    /**\n     * Valida se o caracter é válido.\n     *\n     * @param aChar - Caracter a ser validado.\n     * @returns - Se o caracter é valido ou não.\n     */\n    isValidCharacter(aChar) {\n        return (this.isDigit(aChar) && super.isValidCharacter(aChar));\n    }\n    /**\n     * Valida se é um numéro.\n     *\n     * @param char - String a ser verificada.\n     * @returns - Verdadeiro para caracteres numéricos.\n     *\n     * @example\n     * ```Informado: \"8\" | Retorno: true ```\n     * @example\n     * ```Informado: \"A\" | Retorno: false ```\n     */\n    isDigit(char) {\n        return char >= '0' && char <= '9';\n    }\n};\nMaskFormatter.UpperCaseCharacter = class extends MaskFormatter.MaskCharacter {\n    /**\n    * Valida se a string é uma letra do alfabeto (a-z).\n    *\n    * @param aChar - String passada para validação.\n    * @returns - Verdadeiro se a string passada for uma letra do alfabeto.\n    */\n    isValidCharacter(aChar) {\n        return (/[a-z]/i.test(aChar) && super.isValidCharacter(aChar));\n    }\n    /**\n    * Obtém a string passada em maiúscula.\n    *\n    * @param aChar - String passada para validação.\n    * @returns - O caracter passado em letra maiúscula.\n    */\n    getChar(aChar) {\n        return aChar.toUpperCase();\n    }\n};\nMaskFormatter.LowerCaseCharacter = class extends MaskFormatter.MaskCharacter {\n    /**\n    * Valida se a string é uma letra do alfabeto (a-z).\n    *\n    * @param aChar - String passada para validação.\n    * @returns - Verdadeiro se a string passada for uma letra do alfabeto.\n    */\n    isValidCharacter(aChar) {\n        return (/[a-z]/i.test(aChar) && super.isValidCharacter(aChar));\n    }\n    /**\n    * Obtém a string passada em minúscula.\n    *\n    * @param aChar - String passada para validação.\n    * @returns - O caracter passado em letra minúscula.\n    */\n    getChar(aChar) {\n        return aChar.toLocaleLowerCase();\n    }\n};\nMaskFormatter.AlphaNumericCharacter = class extends MaskFormatter.MaskCharacter {\n    /**\n    * Valida se a string é uma letra do alfabeto (a-z) ou um numero entre zero e nove.\n    *\n    * @param aChar - String passada para validação.\n    * @returns - Verdadeiro se a string passada for uma letra do alfabeto ou um numeral (de 0 a 9).\n    */\n    isValidCharacter(aChar) {\n        //FIXME: talvez seja problema usar regex aqui... avaliar se existe forma mais barata.\n        return (/[a-z0-9]/i.test(aChar)) && super.isValidCharacter(aChar);\n    }\n};\nMaskFormatter.CharCharacter = class extends MaskFormatter.MaskCharacter {\n    /**\n    * Valida se a string é uma letra do alfabeto (a-z).\n    *\n    * @param aChar - String passada para validação.\n    * @returns - Verdadeiro se a string passada for uma letra do alfabeto.\n    */\n    isValidCharacter(aChar) {\n        //FIXME: talvez seja problema usar regex aqui... avaliar se existe forma mais barata\n        return (/[a-z]/i.test(aChar) && super.isValidCharacter(aChar));\n    }\n};\n//# sourceMappingURL=MaskFormatter.js.map","class FloatingEntry {\n    constructor(parent, content, opts) {\n        try {\n            this.weakRefParent = new WeakRef(parent);\n            this.weakRefContent = new WeakRef(content);\n        }\n        catch (error) {\n            this.strongRefParent = parent;\n            this.strongRefContent = content;\n        }\n        this.options = opts;\n    }\n    /**\n     *\n     * Obtém o elemento HTML pai associado ao objeto.\n     *\n     * @returns - Elemento HTML pai.\n     *\n    */\n    get parent() {\n        if (this.weakRefParent) {\n            return this.weakRefParent.deref();\n        }\n        return this.strongRefParent;\n    }\n    /**\n     *\n     * Obtém o elemento HTML de conteúdo associado ao objeto.\n     *\n     * @returns - Elemento HTML de conteúdo associado.\n     *\n    */\n    get content() {\n        if (this.weakRefContent) {\n            return this.weakRefContent.deref();\n        }\n        return this.strongRefContent;\n    }\n}\n/**\n * `FloatingManager`: Gerenciador de elementos flutuantes na tela.\n */\nexport default class FloatingManager {\n    /**\n     *\n     * Inicializa a classe FloatingManager.\n     *\n    */\n    static init() {\n        FloatingManager.entries = [];\n        document.addEventListener('mousedown', FloatingManager.handleDocumentEvent);\n        document.addEventListener('keydown', FloatingManager.handleKeyboardEvent);\n        FloatingManager.initialized = true;\n    }\n    /**\n     *\n     * Retorna se o elemento clicado possui elementos internos.\n     *\n    */\n    static innerClick(container, node) {\n        if (container.contains(node)) {\n            return true;\n        }\n        if (container.shadowRoot && container.shadowRoot.contains(node)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     *\n     * Fecha uma entrada flutuante (FloatingManager).\n     *\n     * @param id - Código da entrada que se deseja encerrar.\n     * @param entry - FloatingManager.\n     * @param target - Elemento HTML referente.\n     * @param event - Evento específico que será verificado, como clique do mouse.\n     *\n    */\n    static doClose(id, entry, target, event) {\n        if (!target || entry.options.autoClose) {\n            const parent = entry.parent;\n            const content = entry.content;\n            if (parent && content) {\n                const innerClickFunction = entry.options.innerClickTest ? entry.options.innerClickTest : FloatingManager.innerClick;\n                const backClickFunction = entry.options.backClickListener ? entry.options.backClickListener : () => { };\n                if (!target || !innerClickFunction(content, target, event)) {\n                    content.remove();\n                    delete FloatingManager.entries[id];\n                    backClickFunction();\n                }\n            }\n            else {\n                delete FloatingManager.entries[id];\n            }\n        }\n        FloatingManager.hideOverlay();\n    }\n    /**\n     *\n     * Fecha todas as FloatingManagers abertas.\n     *\n     * @param event - Evento ocorrido, como clique do mouse, por exemplo.\n     *\n     */\n    static handleDocumentEvent(event) {\n        FloatingManager.entries.forEach((entry, index) => {\n            FloatingManager.doClose(index, entry, event.composedPath()[0], event);\n        });\n    }\n    /**\n     *\n     * Captura eventos de teclado para manipular os elementos flutuantes via eventos da tecla pressionada.\n     *\n     * @param event - Evento de teclado.\n     *\n     */\n    static handleKeyboardEvent(event) {\n        if (event.key === 'Escape') {\n            for (let index = FloatingManager.entries.length; index >= 0; index--) {\n                const entry = FloatingManager.entries[index];\n                if (entry) {\n                    FloatingManager.close(index);\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     *\n     * Adiciona uma propriedade CSS em um elemento HTML.\n     *\n     * @param element - Elemento HTML que será modificado.\n     * @param propertyName - Nome da propriedade CSS que será adicionada.\n     * @param value - Valor da propriedade adicionada.\n     *\n     *\n     */\n    static applyStyle(element, propertyName, value) {\n        if (value) {\n            element.style.setProperty(propertyName, value);\n        }\n    }\n    /**\n     *\n     * Obtém o índice do FloatingManager do Elemento HMTL desejado.\n     *\n     * @param content - Elemento a ser buscado.\n     * @param parent - Elemento pai do content a ser buscado.\n     * @returns - Índice do elemento informado.\n     */\n    static getFloatIndex(content, parent) {\n        for (let index = 0; index < FloatingManager.entries.length; index++) {\n            const entry = FloatingManager.entries[index];\n            if (entry && content === entry.content && parent === entry.parent) {\n                return index;\n            }\n        }\n        return -1;\n    }\n    /**\n     *\n     * Retorna se uma entrada flutuante existe.\n     *\n     * @param id - Índice para ser verificado no FloatingManager.\n     *\n     * @returns - Verdadeiro se existir.\n     *\n     */\n    static isFloating(id) {\n        return FloatingManager.entries[id] !== undefined;\n    }\n    /**\n     *\n     * Cria e exibe um novo item no FloatingManager.\n     *\n     * @param content - Elemento HTML que será criado.\n     * @param parent - Elemento HTML que será o pai do item a ser criado.\n     * @param options - Opções de configuração a serem adicionadas.\n     *\n     * @returns - ID do novo item criado.\n     */\n    static float(content, parent, options = { autoClose: true }) {\n        if (!FloatingManager.initialized) {\n            FloatingManager.init();\n        }\n        const alreadyFloatingIndex = FloatingManager.getFloatIndex(content, parent);\n        if (alreadyFloatingIndex > -1) {\n            return alreadyFloatingIndex;\n        }\n        content.style.position = options.isFixed ? 'fixed' : 'absolute';\n        requestAnimationFrame(() => {\n            FloatingManager.applyStyle(content, \"top\", options.top);\n            FloatingManager.applyStyle(content, \"left\", options.left);\n            FloatingManager.applyStyle(content, \"right\", options.right);\n            FloatingManager.applyStyle(content, \"bottom\", options.bottom);\n        });\n        FloatingManager.showOverlay(options);\n        parent.appendChild(content);\n        FloatingManager.entries.push(new FloatingEntry(parent, content, options));\n        return FloatingManager.entries.length - 1;\n    }\n    /**\n     *\n     * Aplica o desfoque na página se o elemento possuir essa option ativada.\n     *\n     * @param options - Configurações que serão utilizadas no elemento.\n     *\n     */\n    static showOverlay(options) {\n        if (options.useOverlay) {\n            this.createOrUpdatOverlay(options.overlayClassName).style.display = \"block\";\n        }\n    }\n    /**\n     *\n     * Desfaz o desfoque/overlay dos elementos na tela.\n     *\n     *\n     */\n    static hideOverlay() {\n        if (FloatingManager.entries.filter(entry => entry.options.useOverlay).length > 0) {\n            return;\n        }\n        const overlayElement = document.querySelector(`div#${FloatingManager.MODAL_ELEMENT_ID}`);\n        if (overlayElement != undefined) {\n            overlayElement.style.display = \"none\";\n        }\n        const body = document.querySelector(\"body\");\n        if (body) {\n            body.style.overflow = \"\";\n        }\n    }\n    /**\n     *\n     * Cria ou atualiza o elemento de sobreposição.\n     *\n     * @param className - Classe CSS que será adicionada ao modal.\n     * @returns - O elemento atualizado.\n     */\n    static createOrUpdatOverlay(className = FloatingManager.MODAL_DEFAULT_CLASSNAME) {\n        let overlayElement = document.querySelector(`div#${FloatingManager.MODAL_ELEMENT_ID}`);\n        const body = document.querySelector(\"body\");\n        if (!overlayElement) {\n            overlayElement = document.createElement(\"div\");\n            overlayElement.id = FloatingManager.MODAL_ELEMENT_ID;\n            if (body) {\n                body.appendChild(overlayElement);\n            }\n        }\n        if (className === FloatingManager.MODAL_DEFAULT_CLASSNAME) {\n            FloatingManager.createStyleElement();\n        }\n        else {\n            overlayElement.classList.remove(FloatingManager.MODAL_DEFAULT_CLASSNAME);\n        }\n        if (body) {\n            body.style.overflow = \"hidden\";\n        }\n        overlayElement.className = className;\n        return overlayElement;\n    }\n    /**\n     *\n     * Cria elemento de estilo.\n     * Elemento que define o estilo padrão do elemento de sobreposição.\n     */\n    static createStyleElement() {\n        let styleElement = document.querySelector(`style#${FloatingManager.STYLE_ELEMENT_ID}`);\n        if (styleElement == undefined) {\n            styleElement = document.createElement(\"style\");\n            styleElement.id = FloatingManager.STYLE_ELEMENT_ID;\n            styleElement.appendChild(document.createTextNode(`\n            .${FloatingManager.MODAL_DEFAULT_CLASSNAME} {\n                position: fixed;\n                z-index: 2;\n                padding: 0;\n                top: 0px;\n                left: 0px;\n                width: 100%;\n                height: 100vh;\n                box-sizing: border-box;\n                background: rgba(0, 0, 0, 0.1);\n            }`));\n            const header = document.querySelector(\"head\");\n            if (header) {\n                header.appendChild(styleElement);\n            }\n        }\n    }\n    /**\n     *\n     * Atualiza posição de um elemento que já está em tela.\n     *\n     * @param content - Elemento HTML que será atualizado.\n     * @param parent - Elemento pai do content passado.\n     * @param options - Novas opções desejadas.\n     */\n    static updateFloatPosition(content, parent, options = { autoClose: true }) {\n        const alreadyFloatingIndex = FloatingManager.getFloatIndex(content, parent);\n        if (alreadyFloatingIndex > -1) {\n            FloatingManager.applyStyle(content, \"top\", options.top);\n            FloatingManager.applyStyle(content, \"left\", options.left);\n            FloatingManager.applyStyle(content, \"right\", options.right);\n            FloatingManager.applyStyle(content, \"bottom\", options.bottom);\n        }\n    }\n    /**\n     *\n     * Fecha elemento flutuante da tela.\n     *\n     * @param id - Índice do elemento desejado.\n     *\n     */\n    static close(id) {\n        if (FloatingManager.entries[id]) {\n            FloatingManager.doClose(id, FloatingManager.entries[id], undefined);\n        }\n    }\n    /**\n     * Fecha todos os elemento flutuante da tela.\n     */\n    static closeAll() {\n        if (FloatingManager.entries == undefined) {\n            return;\n        }\n        FloatingManager.entries.forEach((entry, index) => {\n            FloatingManager.doClose(index, entry, undefined);\n        });\n    }\n    /**\n     * Controle a sobreposição do elemento\n     * @param item - Elemento HTML que será manipulado\n     * @returns - O ID do elemento na lista de controle\n    */\n    static subscribeOverlayControl(item) {\n        if (!item)\n            return;\n        const currentZIndex = this.getCSSPropertyValue(item, 'z-index') || '';\n        const parsedCurrZIndex = isNaN(+currentZIndex) ? 0 : +currentZIndex;\n        item.setAttribute(FloatingManager.DATA_OLD_ZINDEX_ATTRIBUTE_NAME, String(parsedCurrZIndex));\n        const highestZIndex = this.getHighestZIndex();\n        item.style.zIndex = String(highestZIndex ? highestZIndex + 1 : +parsedCurrZIndex);\n        return this.overlayElements.push(item);\n    }\n    /**\n     *\n     * @param identifier - Elemento HTML ou ID do item que será removido do controle de sobreposição\n    */\n    static unsubscribeOverlayControl(identifier) {\n        if (!identifier)\n            return;\n        const item = identifier instanceof HTMLElement ? identifier : this.overlayElements[identifier - 1];\n        const oldZIndex = item.getAttribute(FloatingManager.DATA_OLD_ZINDEX_ATTRIBUTE_NAME) || '';\n        item.setAttribute(FloatingManager.DATA_OLD_ZINDEX_ATTRIBUTE_NAME, oldZIndex);\n        this.overlayElements = this.overlayElements.filter(element => element !== item);\n    }\n    static getCSSPropertyValue(element, property) {\n        return window.getComputedStyle(element).getPropertyValue(property);\n    }\n    static getHighestZIndex() {\n        return this.overlayElements.reduce((acc, curr) => acc + Number(this.getCSSPropertyValue(curr, 'z-index') || ''), 0);\n    }\n}\nFloatingManager.MODAL_DEFAULT_CLASSNAME = \"FloatingManager__modal\";\nFloatingManager.MODAL_ELEMENT_ID = \"FloatingManager__overlay\";\nFloatingManager.STYLE_ELEMENT_ID = \"FloatingManager__style\";\nFloatingManager.DATA_OLD_ZINDEX_ATTRIBUTE_NAME = \"data-old-zindex\";\nFloatingManager.overlayElements = [];\n//# sourceMappingURL=FloatingManager.js.map","/**\n * `DateUtils`: Utilizado para formatação, padronização e cálculos de datas.\n */\nexport default class DateUtils {\n    /**\n    * Zerar o horário de uma data.\n    *\n    * @param date - Data a ser manipulada.\n    * @param adjustDayLightSavingTime - Ajusta horário de verão na data recebida.\n    * @returns - Data sem as informações de horário.\n    * @example\n    * Informo: 2023-03-09 12:42:40      | Obtenho: 2023-03-09 00:00:00\n    */\n    static clearTime(date, adjustDayLightSavingTime = true) {\n        const newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n        return adjustDayLightSavingTime ? DateUtils.adjustDLST(newDate) : newDate;\n    }\n    /**\n     * Converte data para uma string no formato pt-BR.\n     *\n     * @param date - Data a ser convertida.\n     * @param options - Opções de formatação da data.\n     * @returns - Uma string com a data no formato pt-BR DD/MM/YYYY.\n     */\n    static formatDate(date, options) {\n        if (typeof date === \"string\") {\n            return date;\n        }\n        return date ? new Intl.DateTimeFormat(\"pt-BR\", options !== null && options !== void 0 ? options : {}).format(date) : \"\";\n    }\n    /**\n     * Converte as horas de uma data para uma string pt-BR.\n     *\n     * @param date - Data a ser convertida.\n     * @param showSeconds - define se devemos considerar os segundos.\n     * @returns - Uma string com as horas no formato HH:MM ou HH:MM:SS.\n     */\n    static formatTime(date, showSeconds = false) {\n        if (date == null) {\n            return '';\n        }\n        const timeOptions = { hour: \"2-digit\", minute: \"2-digit\", second: showSeconds ? \"2-digit\" : undefined };\n        return new Intl.DateTimeFormat(\"pt-BR\", timeOptions).format(date);\n    }\n    /**\n     * Converte a data e hora para uma string no formato pt-BR.\n     *\n     * @param date - Data a ser convertida.\n     * @param showSeconds - define se devemos considerar os segundos.\n     * @returns - Uma string com as horas no formato DD/MM/YYYY HH:MM ou DD/MM/YYYY HH:MM:SS.\n     */\n    static formatDateTime(date, showSeconds = false) {\n        return `${DateUtils.formatDate(date)} ${DateUtils.formatTime(date, showSeconds)}`;\n    }\n    /**\n     * Converte String para Date.\n     *\n     * @param strValue - Texto a ser convertido para data.\n     * @param adjustDayLightSavingTime - Se verdadeiro, ativa regra de horário de verão.\n     * @param monthYearMode - Quando ativado, retorna o primeiro dia do mês apenas para construir a data.\n     * @returns - Data sem as informações de horário.\n     */\n    static strToDate(strValue, adjustDayLightSavingTime = true, monthYearMode = false) {\n        /** monthYearMode é um booleano para usar o formato MM/YYYY.\n         * Quando ativado, é retornado o primeiro dia do mês apenas para construir a data.\n         * Não há necessidade de verificar o horário de verão quando utilizado esse modo. */\n        let parts;\n        if (monthYearMode) {\n            parts = /^(1[0-2]|0[1-9]|[1-9])[^\\d]?(\\d{2}|\\d{4})(?:\\s(\\d{1,2}):(\\d{1,2}):?(\\d{0,2}))?$/.exec(strValue);\n        }\n        else {\n            parts = /^(3[01]|[1-2]\\d|0[1-9]|[1-9])[^\\d]?(1[0-2]|0[1-9]|[1-9])[^\\d]?(\\d{2}|\\d{4})(?:\\s(\\d{1,2}):(\\d{1,2}):?(\\d{0,2}))?$/.exec(strValue);\n        }\n        if (!parts) {\n            return undefined;\n        }\n        const day = monthYearMode ? 1 : Number(parts[1]);\n        const month = Number(parts[(monthYearMode ? 1 : 2)]);\n        let year = Number(parts[(monthYearMode ? 2 : 3)]);\n        const hour = Number(parts[(monthYearMode ? 3 : 4)] || 0);\n        const min = Number(parts[(monthYearMode ? 4 : 5)] || 0);\n        const sec = Number(parts[(monthYearMode ? 5 : 6)] || 0);\n        if (year < 100) {\n            year += year < 30 ? 2000 : 1900;\n        }\n        let date = new Date(year, month - 1, day, hour, min, sec, 0);\n        if (adjustDayLightSavingTime === true && !monthYearMode && hour == 0) {\n            date = DateUtils.adjustDLST(date);\n        }\n        return date;\n    }\n    /**\n     * Obtém a data atual.\n     *\n     * @param withTime - Caso true retorna a data com informações de horário.\n     * @returns - Data atual sem informação de horário.\n     */\n    static getToday(withTime = false) {\n        const today = new Date();\n        if (withTime) {\n            return today;\n        }\n        else {\n            return DateUtils.clearTime(today);\n        }\n    }\n    /**\n     * Retorna se a data é válida.\n     *\n     * @param value - Data a ser validada.\n     * @param hasTime - Determina se a data retornada deve conter informação de horário ou não. Por padrão não retorna a hora.\n     * @returns - Caso válida, retorna a própria data.\n     */\n    static validateDate(value, hasTime = false) {\n        return value instanceof Date && !isNaN(value.valueOf())\n            ? hasTime ? value : DateUtils.clearTime(value)\n            : undefined;\n    }\n    /**\n     * Realiza correção do horário de verão.\n     *\n     * @param date - Data a ser ajustada.\n     * @returns - Data informada ajustada para horário de verão.\n     */\n    static adjustDLST(date) {\n        if (date.getHours() == 23) {\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1, 1, 0, 0, 0);\n        }\n        return date;\n    }\n    /**\n     * Adiciona uma casa decimal a esquerda de uma unidade.\n     *\n     * @param n - Número a ser ajustado\n     * @returns - O número informado, com uma casa decimal a esquerda.\n     * @example\n     * Informo: 15     | Obtenho: 15\n     * @example\n     * Informo:  2     | Obtenho: \"02\"\n     */\n    static pad(n) {\n        return n < 10 ? \"0\" + n : n;\n    }\n    /**\n     * Retorna timezone da data.\n     *\n     * @param offset - Valor do timezone desejado.\n     * @returns Timezone da data.\n     */\n    static timezoneOffset(offset) {\n        let sign;\n        if (offset === 0) {\n            return \"Z\";\n        }\n        sign = (offset > 0) ? \"-\" : \"+\";\n        offset = Math.abs(offset);\n        return sign + this.pad(Math.floor(offset / 60)) + \":\" + this.pad(offset % 60);\n    }\n    /**\n     * Converte a data para o formato RFC3339.\n     *\n     * @param date - Data a ser convertida\n     * @returns - Data informada no formato RFC3339.\n     * * @example\n     * Informo: 2023-03-09 12:42:40     | Obtenho: 2023-03-09T12:42:47-03:00\n     */\n    static formatRfc3339(date) {\n        return date.getFullYear() + \"-\" +\n            this.pad(date.getMonth() + 1) + \"-\" +\n            this.pad(date.getDate()) + \"T\" +\n            this.pad(date.getHours()) + \":\" +\n            this.pad(date.getMinutes()) + \":\" +\n            this.pad(date.getSeconds()) +\n            this.timezoneOffset(date.getTimezoneOffset());\n    }\n}\n//# sourceMappingURL=DateUtils.js.map","import { MaskFormatter } from \"./MaskFormatter.js\";\n/**\n * `TimeFormatter`: Utilizado para formatar horas.\n */\nexport class TimeFormatter {\n    /**\n    * Converte um texto para o formato de hora.\n    *\n    * @param value - Texto não formatado.\n    * @param showSeconds - Se será validado os segundos.\n    * @returns - Texto em formato de hora.\n    *\n    * @Exemples\n    * @\"1012\"       |       \"10:12\"\n    * @\"10:12\"      |       \"10:12:00\"\n    * @\"100112\"     |       \"10:01:12\"\n    */\n    static prepareValue(value, showSeconds) {\n        if (value && value.length > 0 && value != \"NaN\") {\n            let validationValue = value.replace(/:/g, \"\");\n            if (showSeconds) {\n                this._maskFormatter.mask = \"##:##:##\";\n                if (validationValue.length < 6) {\n                    while (validationValue.length < 6) {\n                        validationValue = \"0\".concat(validationValue);\n                    }\n                }\n            }\n            else {\n                this._maskFormatter.mask = \"##:##\";\n                if (validationValue.length < 4) {\n                    while (validationValue.length < 4) {\n                        validationValue = \"0\".concat(validationValue);\n                    }\n                }\n            }\n            if (this._maskFormatter) {\n                try {\n                    value = this._maskFormatter.format(validationValue);\n                    return value;\n                }\n                catch (e) {\n                    throw new Error(e.message);\n                }\n            }\n        }\n        return '';\n    }\n    /**\n    * Retorna se o texto está no formato de hora.\n    *\n    * @param value - Texto a ser validado.\n    * @param showSeconds - Se será validado os segundos.\n    * @returns - Verdadeiro para valores no formato de hora e False para formatos diferentes.\n    *\n    * @Exemples\n    * @\"1012\"       |       true\n    * @\"14e4\"       |       false\n    * @\"2624\"       |       false\n    */\n    static validateTime(value, showSeconds) {\n        let isValid = true;\n        if (value) {\n            const validationValue = value.replace(/:/g, \"\");\n            if (showSeconds) {\n                if (![\"1\", \"2\", \"0\"].includes(validationValue[0])) {\n                    isValid = false;\n                }\n                if (![\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"].includes(validationValue[2])) {\n                    isValid = false;\n                }\n                if (![\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"].includes(validationValue[4])) {\n                    isValid = false;\n                }\n                if (validationValue[0] == \"2\" && ![\"0\", \"1\", \"2\", \"3\"].includes(validationValue[1])) {\n                    isValid = false;\n                }\n            }\n            else {\n                if (![\"1\", \"2\", \"0\"].includes(validationValue[0])) {\n                    isValid = false;\n                }\n                if (![\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"].includes(validationValue[2])) {\n                    isValid = false;\n                }\n                if (validationValue[0] == \"2\" && ![\"0\", \"1\", \"2\", \"3\"].includes(validationValue[1])) {\n                    isValid = false;\n                }\n            }\n        }\n        else {\n            isValid = false;\n        }\n        return isValid;\n    }\n}\nTimeFormatter._maskFormatter = new MaskFormatter(\"##:##\");\n//# sourceMappingURL=TimeFormatter.js.map","/**\n * Representa as propriedades necessárias para se executar uma requisição.\n */\nexport class RequestMetadata {\n    /**\n     * @param {string} url A URL que deve ser chamada.\n     * @param {Method} method O Método da requisição (GET, PUT, POST ou DELETE).\n     */\n    constructor(url, method, headers) {\n        /** Tempo limite de espera pela resposta */\n        this.timeout = 30000;\n        this.url = url;\n        this.method = method;\n        this.headers = headers || [];\n    }\n}\n/** Representa os verbos HTTP suportados */\nexport var Method;\n(function (Method) {\n    Method[Method[\"GET\"] = 0] = \"GET\";\n    Method[Method[\"PUT\"] = 1] = \"PUT\";\n    Method[Method[\"POST\"] = 2] = \"POST\";\n    Method[Method[\"DELETE\"] = 3] = \"DELETE\";\n})(Method || (Method = {}));\n//# sourceMappingURL=RequestMetadata.js.map","export var SortMode;\n(function (SortMode) {\n    SortMode[\"ASC\"] = \"ASC\";\n    SortMode[\"DESC\"] = \"DESC\";\n})(SortMode || (SortMode = {}));\nexport var DependencyType;\n(function (DependencyType) {\n    DependencyType[\"SEARCHING\"] = \"SEARCHING\";\n    DependencyType[\"REQUIREMENT\"] = \"REQUIREMENT\";\n    DependencyType[\"VISIBILITY\"] = \"REQUIREMENT\";\n})(DependencyType || (DependencyType = {}));\nexport var UserInterface;\n(function (UserInterface) {\n    UserInterface[\"FILE\"] = \"FILE\";\n    UserInterface[\"IMAGE\"] = \"IMAGE\";\n    UserInterface[\"DATE\"] = \"DATE\";\n    UserInterface[\"DATETIME\"] = \"DATETIME\";\n    UserInterface[\"TIME\"] = \"TIME\";\n    UserInterface[\"ELAPSEDTIME\"] = \"ELAPSEDTIME\";\n    UserInterface[\"CHECKBOX\"] = \"CHECKBOX\";\n    UserInterface[\"SWITCH\"] = \"SWITCH\";\n    UserInterface[\"OPTIONSELECTOR\"] = \"OPTIONSELECTOR\";\n    UserInterface[\"DECIMALNUMBER\"] = \"DECIMALNUMBER\";\n    UserInterface[\"INTEGERNUMBER\"] = \"INTEGERNUMBER\";\n    UserInterface[\"SEARCH\"] = \"SEARCH\";\n    UserInterface[\"SEARCHPLUS\"] = \"SEARCHPLUS\";\n    UserInterface[\"SHORTTEXT\"] = \"SHORTTEXT\";\n    UserInterface[\"PASSWORD\"] = \"PASSWORD\";\n    UserInterface[\"MASKEDTEXT\"] = \"MASKEDTEXT\";\n    UserInterface[\"LONGTEXT\"] = \"LONGTEXT\";\n    UserInterface[\"HTML\"] = \"HTML\";\n})(UserInterface || (UserInterface = {}));\nexport var DataUnitTransient;\n(function (DataUnitTransient) {\n    DataUnitTransient[\"DATA_UNIT_TRANSIENT_PREFIX_NAME\"] = \"transient.\";\n})(DataUnitTransient || (DataUnitTransient = {}));\n//# sourceMappingURL=UnitMetadata.js.map","import DateUtils from '../../utils/DateUtils.js';\nimport { MaskFormatter } from '../../utils/MaskFormatter.js';\nimport { NumberUtils } from '../../utils/NumberUtils.js';\nimport { TimeFormatter } from '../../utils/TimeFormatter.js';\nimport { DataType, toString } from '../metadata/DataType.js';\nimport { UserInterface } from '../metadata/UnitMetadata.js';\nexport const getFormattedValue = (value, descriptor) => {\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.FILE) {\n        return getFileFormat(value);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType) === DataType.OBJECT) {\n        if (value && Object.hasOwn(value, \"value\")) {\n            return getSearchFormat(value, descriptor);\n        }\n        if (value === null || value === undefined)\n            return \"\";\n        return value.toString();\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.OPTIONSELECTOR) {\n        return getOptionFormat(value, descriptor);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType) === DataType.BOOLEAN) {\n        return value ? \"Sim\" : \"Não\";\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType) === DataType.NUMBER) {\n        return getNumberFormat(value, descriptor);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.DATE) {\n        return DateUtils.formatDate(value);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.TIME) {\n        return DateUtils.formatTime(value);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.ELAPSEDTIME) {\n        return TimeFormatter.prepareValue(value, true);\n    }\n    if ((descriptor === null || descriptor === void 0 ? void 0 : descriptor.userInterface) === UserInterface.DATETIME) {\n        return DateUtils.formatDateTime(value);\n    }\n    const mask = getMask(value, descriptor);\n    if (mask != undefined) {\n        try {\n            return new MaskFormatter(mask).format(value, true);\n        }\n        catch (error) {\n            console.warn(`Erro ao formatar valor: ${value}. Mascara: ${mask}. Erro: ${error}`);\n        }\n    }\n    return toString(descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType, value);\n};\nconst getNumberFormat = (value, descriptor) => {\n    var _a, _b;\n    if (value === undefined || value === null)\n        return \"\";\n    if (descriptor.userInterface === UserInterface.INTEGERNUMBER) {\n        return value;\n    }\n    const precision = Number(((_a = descriptor.properties) === null || _a === void 0 ? void 0 : _a.precision) || 2);\n    const prettyPrecision = Number(((_b = descriptor.properties) === null || _b === void 0 ? void 0 : _b.prettyPrecision) || precision);\n    return NumberUtils.format(value, precision, prettyPrecision);\n};\nconst getSearchFormat = (value, descriptor) => {\n    const { value: codeValue, label } = value;\n    if (descriptor.userInterface === UserInterface.SEARCH) {\n        return label ? `${codeValue} - ${label}` : codeValue;\n    }\n    if (descriptor.userInterface === UserInterface.SEARCHPLUS) {\n        return codeValue;\n    }\n    return label ? label : codeValue;\n};\nconst getOptionFormat = (value, descriptor) => {\n    var _a;\n    const prop = (_a = descriptor.properties) === null || _a === void 0 ? void 0 : _a.options;\n    let options;\n    if (typeof prop === \"string\") {\n        options = JSON.parse(prop);\n    }\n    else {\n        options = {};\n        if (prop != undefined) {\n            prop.forEach(opt => options[opt.label] = opt.value);\n        }\n    }\n    if (value && typeof value === \"object\") {\n        value = value.value;\n    }\n    if (options && Object.hasOwn(options, value)) {\n        return options[value];\n    }\n    return value !== null && value !== void 0 ? value : \"\";\n};\nconst getMask = (value, descriptor) => {\n    var _a;\n    if (descriptor == undefined) {\n        return;\n    }\n    const mask = (_a = descriptor.properties) === null || _a === void 0 ? void 0 : _a.mask;\n    if (mask == undefined || !value) {\n        return;\n    }\n    if (mask === \"cgc_cpf\") {\n        return value.length === 11 ? MaskFormatter.DEFAULT_MASKS.cpf : MaskFormatter.DEFAULT_MASKS.cnpj;\n    }\n    if (Object.hasOwn(MaskFormatter.DEFAULT_MASKS, mask)) {\n        return MaskFormatter.DEFAULT_MASKS[mask];\n    }\n    return mask;\n};\nconst getFileFormat = (value) => {\n    if (value == undefined)\n        return '';\n    if (!value || !Array.isArray(value))\n        return value;\n    if (value.length === 1)\n        return value[0].name;\n    return `${value.length} arquivos`;\n};\n//# sourceMappingURL=PrettyFormatter.js.map","import DateUtils from \"../../utils/DateUtils.js\";\nimport { UserInterface } from \"./UnitMetadata.js\";\nimport { getFormattedValue } from \"../formatting/PrettyFormatter.js\";\nimport { NumberUtils } from \"../../utils/NumberUtils.js\";\n/* `DataType` Tipos de dados válidos para os valores dos campos no dataUnit */\nexport var DataType;\n(function (DataType) {\n    DataType[\"NUMBER\"] = \"NUMBER\";\n    DataType[\"DATE\"] = \"DATE\";\n    DataType[\"TEXT\"] = \"TEXT\";\n    DataType[\"BOOLEAN\"] = \"BOOLEAN\";\n    DataType[\"OBJECT\"] = \"OBJECT\";\n})(DataType || (DataType = {}));\n/**\n * Converte o valor para outro tipo.\n *\n * Tipos aceitos:\n *\n * NUMBER = \"NUMBER\",\n * DATE = \"DATE\",\n * TEXT = \"TEXT\",\n * BOOLEAN = \"BOOLEAN\",\n * OBJECT = \"OBJECT\"\n *\n * @param dataType - Tipo que o valor será convertido.\n * @param value - Valor a ser convertido.\n * @returns - Informação convertida para o tipo informado.\n *\n * @example\n * ``` informado: DataType.NUMBER, \"10\" | Retorno: 10 ```\n*/\nexport const convertType = (dataType, value) => {\n    if (value === undefined || value === null) {\n        return value;\n    }\n    if (typeof value === \"object\" && dataType !== DataType.OBJECT && \"value\" in value) {\n        value = value.value;\n    }\n    return getConvertedValue(dataType, value);\n};\n/**\n * Efetua a conversão da informação de acordo com o tipo definido pelo dataType.\n *\n * Tipos aceitos:\n *\n * NUMBER = \"NUMBER\",\n * DATE = \"DATE\",\n * TEXT = \"TEXT\",\n * BOOLEAN = \"BOOLEAN\",\n * OBJECT = \"OBJECT\"\n *\n * @param dataType - Tipo que o valor será convertido.\n * @param value - Valor a ser convertido.\n * @returns - Informação convertida para o tipo informado.\n *\n * @example\n * ``` informado: DataType.NUMBER, \"10\" | Retorno: 10 ```\n*/\nexport const getConvertedValue = (dataType, value) => {\n    switch (dataType) {\n        case DataType.NUMBER:\n            return value === \"\" || isNaN(Number(value)) ? null : Number(value);\n        case DataType.OBJECT:\n            //Caso de uso campo DataType do tipo STRING e UserInterface do tipo TEXT, que tem relacionamento (TGFPRO.GRUPOPIS)\n            if (typeof value === \"string\") {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    console.warn(`Erro ao fazer parse do valor ${value} para objeto, dataType: ${dataType}`);\n                }\n            }\n            return value;\n        case DataType.BOOLEAN:\n            if (typeof value === \"string\") {\n                return Boolean(value === 'true');\n            }\n            return Boolean(value);\n        case DataType.DATE:\n            if (value == undefined || typeof value !== \"string\") {\n                return DateUtils.validateDate(value, true);\n            }\n            const newDate = DateUtils.validateDate(new Date(value), true);\n            if (newDate == undefined) {\n                return value;\n            }\n            return newDate;\n        default:\n            return value;\n    }\n};\n/**\n * Converte valor para texto\n *\n * @param dataType - Tipo do dado para conversão\n * @param value - Valor a ser convertido.\n * @returns - Valor convertido em forma de texto.\n *\n*/\nexport const toString = (dataType, value) => {\n    if (value === undefined || value === null) {\n        return value;\n    }\n    if (dataType) {\n        if (dataType === DataType.OBJECT) {\n            if (typeof value !== \"object\") {\n                value = { label: \"\", value };\n            }\n            return JSON.stringify(value);\n        }\n        else if (dataType === DataType.DATE) {\n            if (typeof value === \"string\") {\n                value = DateUtils.strToDate(value);\n                if (value == undefined) {\n                    return value;\n                }\n            }\n            return DateUtils.formatRfc3339(value);\n        }\n        else {\n            return value.toString();\n        }\n    }\n    else {\n        if (typeof value === \"string\") {\n            return value;\n        }\n        else if (value instanceof Date) {\n            return DateUtils.formatRfc3339(value);\n        }\n        else {\n            try {\n                return JSON.stringify(value);\n            }\n            catch (_a) {\n                value = value.toString();\n            }\n            return value;\n        }\n    }\n};\nconst isSearchField = (userInterface) => {\n    return userInterface === UserInterface.SEARCH || userInterface === UserInterface.SEARCHPLUS;\n};\nexport const compareValues = (valueA, valueB, descriptor, onlyLabel = false) => {\n    if (useStringForComparison(descriptor)) {\n        return getFormattedValue(valueA, descriptor).localeCompare(getFormattedValue(valueB, descriptor));\n    }\n    const { dataType, userInterface } = descriptor;\n    if (isSearchField(userInterface) || userInterface === UserInterface.OPTIONSELECTOR) {\n        const optionValueA = (onlyLabel ? valueA === null || valueA === void 0 ? void 0 : valueA.label : valueA === null || valueA === void 0 ? void 0 : valueA.value) || valueA;\n        const optionValueB = (onlyLabel ? valueB === null || valueB === void 0 ? void 0 : valueB.label : valueB === null || valueB === void 0 ? void 0 : valueB.value) || valueB;\n        if (isNaN(optionValueA) || isNaN(optionValueB)) {\n            return optionValueA.localeCompare(optionValueB);\n        }\n        return NumberUtils.compare(Number(optionValueA), Number(optionValueB));\n    }\n    if (dataType === DataType.OBJECT) {\n        return 0;\n    }\n    const convertedValueA = getConvertedValue(dataType, valueA);\n    const convertedValueB = getConvertedValue(dataType, valueB);\n    if (dataType === DataType.NUMBER) {\n        return NumberUtils.compare(convertedValueA, convertedValueB);\n    }\n    if (dataType === DataType.DATE) {\n        return NumberUtils.compare(convertedValueA.getTime(), convertedValueB.getTime());\n    }\n    return 0;\n};\nconst useStringForComparison = (descriptor) => {\n    if (descriptor.dataType === DataType.BOOLEAN) {\n        return true;\n    }\n    if (descriptor.dataType === DataType.TEXT) {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=DataType.js.map","export class DataUnitAction {\n    constructor(type, payload) {\n        this._type = type;\n        this._payload = payload;\n    }\n    get type() {\n        return this._type;\n    }\n    get payload() {\n        return this._payload;\n    }\n}\nexport var Action;\n(function (Action) {\n    Action[\"MULTIPLE_EDITION_CHANGED\"] = \"multipleEditionChanged\";\n    Action[\"LOADING_METADATA\"] = \"loadingMetadata\";\n    Action[\"METADATA_LOADED\"] = \"metadataLoaded\";\n    Action[\"LOADING_DATA\"] = \"loadingData\";\n    Action[\"DATA_LOADED\"] = \"dataLoaded\";\n    Action[\"PAGINATION_UPDATED\"] = \"paginationUpdated\";\n    Action[\"SAVING_DATA\"] = \"savingData\";\n    Action[\"DATA_SAVED\"] = \"dataSaved\";\n    Action[\"SAVING_ERROR\"] = \"savingError\";\n    Action[\"SAVING_CANCELED\"] = \"savingCanceled\";\n    Action[\"REMOVING_RECORDS\"] = \"removingRecords\";\n    Action[\"RECORDS_REMOVED\"] = \"recordsRemoved\";\n    Action[\"RECORDS_ADDED\"] = \"recordsAdded\";\n    Action[\"RECORDS_COPIED\"] = \"recordsCopied\";\n    Action[\"CHANGING_DATA\"] = \"changingData\";\n    Action[\"WAITING_CHANGE_CANCELED\"] = \"waitingChangeCanceled\";\n    Action[\"DATA_CHANGED\"] = \"dataChanged\";\n    Action[\"DATA_RESOLVED\"] = \"dataResolved\";\n    Action[\"EDITION_CANCELED\"] = \"editionCanceled\";\n    Action[\"CHANGE_UNDONE\"] = \"changeUndone\";\n    Action[\"CHANGE_REDONE\"] = \"changeRedone\";\n    Action[\"SELECTION_CHANGED\"] = \"selectionChanged\";\n    Action[\"NEXT_SELECTED\"] = \"nextSelected\";\n    Action[\"PREVIOUS_SELECTED\"] = \"previousSelected\";\n    Action[\"STATE_CHANGED\"] = \"stateChanged\";\n    Action[\"LOADING_RECORD\"] = \"loadingRecord\";\n    Action[\"RECORD_LOADED\"] = \"recordLoaded\";\n    Action[\"CHILD_CHANGED\"] = \"childChanged\";\n    Action[\"FIELD_INVALIDATED\"] = \"fieldInvalidated\";\n    Action[\"INVALIDATE_CLEAN\"] = \"invalidateClean\";\n    Action[\"LOADING_PROPERTY_ADDED\"] = \"loadingPropertyAdded\";\n    Action[\"LOADING_PROPERTIES_CLEANED\"] = \"loadingPropertiesCleaned\";\n})(Action || (Action = {}));\n//# sourceMappingURL=DataUnitAction.js.map","/**\n * Essa classe representa uma interpretação do padrão de projetos Flux.\n * No padrão Flux os dados da aplicação são chamados de \"estado\" e existem\n * algumas regras para gerenciamento/manipulação desse estado:\n *\n *  1 - O estado é imutável.\n *  2 - Toda modificação de estado é representada por uma \"ação\".\n *  3 - Quando \"ações\" acontecem a \"store\" cria um novo estado e notifica a todos interessados.\n *\n * Nessa interpretação desse design pattern, o StateManager faz o papel da store,\n * notificando os manipuladores de estado (handlers), que são responsáveis por pedaços\n * do estado (slices).\n *\n * O StateManager mantém dois tipos de estados: \"Histórico\" e \"Não Histórico\". No estado\n * \"Histórico\", sempre que uma alteração de estado acontece, o estado anterior é guardado em\n * uma pilha, o que permite que possamos voltar no tempo, desfazendo algumas ações\n */\nexport default class StateManager {\n    constructor(reducers) {\n        this._past = [];\n        this._future = [];\n        this._present = {};\n        this._nonHist = {};\n        this._histClean = false;\n        this._reducers = reducers;\n    }\n    process(action) {\n        const oldPresent = this._present;\n        let hasHistChange = false;\n        this._histClean = false;\n        this._reducers.forEach(reducer => {\n            const sliceName = reducer.sliceName;\n            const isHistoric = this.isHistoric(sliceName);\n            const oldSlice = this.getSlice(sliceName, isHistoric);\n            const newSlice = reducer.reduce(this, oldSlice, action);\n            if (newSlice !== oldSlice) {\n                this.updateSlice(sliceName, newSlice, isHistoric);\n                hasHistChange || (hasHistChange = isHistoric);\n            }\n        });\n        if (hasHistChange && !this._histClean) {\n            this._past.push(oldPresent);\n            this._future = [];\n            document.dispatchEvent(new CustomEvent(\"undoableAction\", { detail: this }));\n        }\n    }\n    select(sliceName, selector) {\n        const isHistoric = this.isHistoric(sliceName);\n        return selector(this.getSlice(sliceName, isHistoric));\n    }\n    isHistoric(slice) {\n        return slice.startsWith(\"hist::\");\n    }\n    updateSlice(name, slice, isHistoric) {\n        if (isHistoric) {\n            this._present = Object.assign(Object.assign({}, this._present), { [name]: slice });\n            if (slice === undefined) {\n                delete this._present[name];\n            }\n        }\n        else {\n            this._nonHist = Object.assign(Object.assign({}, this._nonHist), { [name]: slice });\n            if (slice === undefined) {\n                delete this._nonHist[name];\n            }\n        }\n    }\n    getSlice(name, isHistoric) {\n        return isHistoric ? this._present[name] : this._nonHist[name];\n    }\n    canUndo() {\n        return this._past.length > 0;\n    }\n    canRedo() {\n        return this._future.length > 0;\n    }\n    undo() {\n        if (this.canUndo()) {\n            this._future.push(this._present);\n            this._present = this._past.pop();\n        }\n    }\n    redo() {\n        if (this.canRedo()) {\n            this._past.push(this._present);\n            this._present = this._future.pop();\n        }\n    }\n    clearUndo() {\n        this._histClean = true;\n        this._past = [];\n        this._future = [];\n    }\n    persist() {\n    }\n}\n//# sourceMappingURL=StateManager.js.map","/**\n * `ErrorException`: Exceção lançada quando ocorre um erro.\n */\nexport default class ErrorException extends Error {\n    constructor(title, message, errorCode = \"\") {\n        super(message);\n        this.name = \"\";\n        this.title = title;\n        this.message = message;\n        this.errorCode = errorCode;\n    }\n}\n//# sourceMappingURL=ErrorException.js.map","/**\n * `WaitingChangeException`: Exceção lançada quando um campo está pendente de finalizar a alteração antes de executar uma ação.\n */\nexport default class WaitingChangeException extends Error {\n    constructor(title, message) {\n        super(message);\n        this.title = title;\n        this.name = \"\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=WaitingChangeException.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass AddedRecordsReducerImpl {\n    constructor() {\n        this.sliceName = \"hist::addedRecords\";\n    }\n    reduce(_stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.RECORDS_ADDED:\n            case Action.RECORDS_COPIED:\n                return (currentState || []).concat(action.payload);\n            case Action.DATA_SAVED:\n            case Action.EDITION_CANCELED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const AddedRecordsReducer = new AddedRecordsReducerImpl();\nexport const getAddedRecords = (stateManager) => {\n    return stateManager.select(AddedRecordsReducer.sliceName, (state) => state);\n};\nexport const isAddedRecord = (recordId, stateManager) => {\n    const addedRecords = getAddedRecords(stateManager);\n    if (addedRecords == undefined || addedRecords.length === 0) {\n        return false;\n    }\n    return addedRecords.some(record => record.__record__id__ === recordId);\n};\nexport const prepareAddedRecordId = (stateManager, source, parentRecordId) => {\n    let index = (getAddedRecords(stateManager) || []).length;\n    return source.map(item => (Object.assign(Object.assign(Object.assign({}, item), { __record__id__: `NEW_${index++}` }), (parentRecordId && { __parent__record__id__: parentRecordId }))));\n};\nexport const prepareCopiedRecord = (stateManager, source, parentRecordId) => {\n    let index = (getAddedRecords(stateManager) || []).length;\n    return source.map(item => (Object.assign(Object.assign(Object.assign(Object.assign({}, item), { __record__id__: \"NEW_\" + (index++) }), (parentRecordId && { __parent__record__id__: parentRecordId })), { __record__source__id__: item.__record__id__, __copy__: true })));\n};\n//# sourceMappingURL=AddedRecordsSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass RemovedRecordsReducerImpl {\n    constructor() {\n        this.sliceName = \"hist::removedRecords\";\n    }\n    reduce(_stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.RECORDS_REMOVED:\n                const { records, buffered } = action.payload;\n                if (buffered) {\n                    return (currentState || []).concat(records);\n                }\n                return currentState;\n            case Action.EDITION_CANCELED:\n            case Action.DATA_SAVED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const RemovedRecordsReducer = new RemovedRecordsReducerImpl();\nexport const getRemovedRecords = (stateManager) => {\n    return stateManager.select(RemovedRecordsReducer.sliceName, (state) => state);\n};\n//# sourceMappingURL=RemovedRecordsSlice.js.map","import { getRemovedRecords } from \"./RemovedRecordsSlice.js\";\nimport { Action } from \"../action/DataUnitAction.js\";\nclass RecordsReducerImpl {\n    constructor() {\n        this.sliceName = \"records\";\n    }\n    reduce(stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.DATA_LOADED:\n                return action.payload ? action.payload.records : undefined;\n            case Action.RECORDS_REMOVED:\n                const { records, buffered } = action.payload;\n                if (!buffered) {\n                    return currentState.filter(r => !records.includes(r.__record__id__));\n                }\n                return currentState;\n            case Action.DATA_SAVED:\n                const recordsMap = new Map();\n                const currentRecords = getRecords(stateManager);\n                if (currentRecords.length) {\n                    const removed = getRemovedRecords(stateManager) || [];\n                    currentRecords.forEach(r => {\n                        if (!removed.includes(r.__record__id__)) {\n                            recordsMap.set(r.__record__id__, r);\n                        }\n                    });\n                }\n                const newRecords = [];\n                const savedRecords = action.payload.records;\n                savedRecords.forEach(sr => {\n                    const recordId = sr.__old__id__ || sr.__record__id__;\n                    const newRecord = Object.assign({}, sr);\n                    delete newRecord[\"__old__id__\"];\n                    if (recordsMap.has(recordId)) {\n                        recordsMap.set(recordId, newRecord);\n                    }\n                    else {\n                        newRecords.push(newRecord);\n                    }\n                });\n                return Array.from(recordsMap.values()).concat(newRecords);\n            case Action.RECORD_LOADED:\n                action.payload.forEach((record) => {\n                    for (let i = 0; i < currentState.length; i++) {\n                        if (currentState[i].__record__id__ === record.__record__id__) {\n                            currentState[i] = record;\n                        }\n                    }\n                });\n        }\n        return currentState;\n    }\n}\nexport const RecordsReducer = new RecordsReducerImpl();\nexport const getRecords = (stateManager) => {\n    var _a;\n    return (_a = stateManager.select(RecordsReducer.sliceName, (state) => state)) !== null && _a !== void 0 ? _a : [];\n};\n//# sourceMappingURL=RecordsSlice.js.map","import { getRecords } from \"./RecordsSlice.js\";\nimport { getSelection } from \"./SelectionSlice.js\";\nimport { getChangedFieldValue, getChanges } from \"./ChangesSlice.js\";\nimport { getRemovedRecords } from \"./RemovedRecordsSlice.js\";\nimport { getAddedRecords } from \"./AddedRecordsSlice.js\";\nclass SnapshotReducerImpl {\n    constructor() {\n        this.sliceName = \"snapshot\";\n    }\n    reduce(stateManager, currentSnapshot) {\n        return buildSnapshot(currentSnapshot, stateManager);\n    }\n}\nexport const SnapshotReducer = new SnapshotReducerImpl();\nexport const getSnapshot = (stateManager) => {\n    return stateManager.select(SnapshotReducer.sliceName, (state) => state);\n};\nexport const getCurrentRecords = (stateManager) => {\n    const snapshot = getSnapshot(stateManager);\n    return snapshot ? snapshot.records : new Map();\n};\nexport const getSelectionRecords = (stateManager) => {\n    const snapshot = getSnapshot(stateManager);\n    return snapshot ? Array.from(snapshot.selectionRecords.values()) : undefined;\n};\nexport const getModifiedRecords = (stateManager) => {\n    const currentRecords = getCurrentRecords(stateManager);\n    if (!currentRecords) {\n        return undefined;\n    }\n    const changes = getChanges(stateManager);\n    const added = getAddedRecords(stateManager);\n    if (!changes && !added) {\n        return undefined;\n    }\n    let modifiedIDs = changes ? Array.from(changes.keys()) : [];\n    if (added) {\n        modifiedIDs = modifiedIDs.concat(added.map(r => r.__record__id__));\n    }\n    return Array.from(currentRecords.values()).filter(r => modifiedIDs.includes(r.__record__id__));\n};\nexport const getSelectedRecord = (stateManager) => {\n    const selection = getSelectionRecords(stateManager);\n    return selection == undefined ? undefined : selection[0];\n};\nexport const getFieldValue = (stateManager, fieldName) => {\n    const record = getSelectedRecord(stateManager);\n    return record == undefined ? undefined : getChangedFieldValue(fieldName, record, stateManager);\n};\nfunction buildSnapshot(oldSnapshot, stateManager) {\n    let records = getRecords(stateManager) || [];\n    const added = getAddedRecords(stateManager);\n    if (added) {\n        records = (records).concat(added);\n    }\n    const removedRecords = getRemovedRecords(stateManager);\n    if (removedRecords) {\n        records = records.filter(record => !removedRecords.includes(record.__record__id__));\n    }\n    const changes = getChanges(stateManager);\n    const snapshotRecords = new Map(records.map(source => [source.__record__id__, Object.assign(Object.assign({}, source), changes === null || changes === void 0 ? void 0 : changes.get(source.__record__id__))]));\n    const selectionRecords = new Map(oldSnapshot === null || oldSnapshot === void 0 ? void 0 : oldSnapshot.selectionRecords);\n    const selection = getSelection(stateManager);\n    if (selection && selection.length > 0) {\n        selection.forEach(recordId => {\n            const record = snapshotRecords.has(recordId) ? snapshotRecords.get(recordId) : oldSnapshot === null || oldSnapshot === void 0 ? void 0 : oldSnapshot.records.get(recordId);\n            if (record) {\n                selectionRecords.set(recordId, record);\n            }\n        });\n    }\n    Array.from(selectionRecords.keys()).forEach(key => {\n        if (!selection.includes(key)) {\n            selectionRecords.delete(key);\n        }\n    });\n    return {\n        records: snapshotRecords,\n        selectionRecords\n    };\n}\n//# sourceMappingURL=SnapshotSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass LoadingControlReducerImpl {\n    constructor() {\n        this.sliceName = \"loadingControl\";\n    }\n    reduce(stateManager, currentState, action) {\n        var _a;\n        switch (action.type) {\n            case Action.LOADING_DATA:\n                return Object.assign(Object.assign({}, currentState), { lastRequest: action.payload });\n            case Action.DATA_LOADED:\n                return Object.assign(Object.assign({}, currentState), { paginationInfo: (_a = action.payload) === null || _a === void 0 ? void 0 : _a.paginationInfo });\n            case Action.PAGINATION_UPDATED:\n                return Object.assign(Object.assign({}, currentState), { paginationInfo: action.payload });\n            case Action.DATA_SAVED:\n                return Object.assign(Object.assign({}, currentState), { paginationInfo: updatePaginationInfo(stateManager, action.payload) });\n        }\n        return currentState;\n    }\n}\nexport const LoadingControlReducer = new LoadingControlReducerImpl();\nexport const getPaginationInfo = (stateManager) => {\n    const state = stateManager.select(LoadingControlReducer.sliceName, (state) => state);\n    return state ? state.paginationInfo : undefined;\n};\nexport const getCurrentRequest = (stateManager) => {\n    const state = stateManager.select(LoadingControlReducer.sliceName, (state) => state);\n    return state ? state.lastRequest : undefined;\n};\nexport const getCurrentPage = (stateManager) => {\n    const paginationInfo = getPaginationInfo(stateManager);\n    return paginationInfo ? paginationInfo.currentPage : 0;\n};\nexport const getLastPage = (stateManager, pageSize) => {\n    const paginationInfo = getPaginationInfo(stateManager);\n    return paginationInfo ? Math.ceil((paginationInfo.total || paginationInfo.count || 0) / pageSize) : 0;\n};\nexport const hasMorePages = (stateManager) => {\n    const paginationInfo = getPaginationInfo(stateManager);\n    if (paginationInfo && paginationInfo.hasMore) {\n        return true;\n    }\n    return false;\n};\nexport const hasPreviousPages = (stateManager) => {\n    const paginationInfo = getPaginationInfo(stateManager);\n    return paginationInfo ? paginationInfo.currentPage > 0 : false;\n};\nconst updatePaginationInfo = (stateManager, payload) => {\n    const paginationInfo = getPaginationInfo(stateManager);\n    let { records, changes } = payload;\n    if (!records || !changes || !paginationInfo || !validateNewRecordOperation(changes))\n        return paginationInfo;\n    const { count, firstRecord, lastRecord, total } = paginationInfo;\n    return Object.assign(Object.assign({}, paginationInfo), { count: (count !== null && count !== void 0 ? count : 0) + records.length, firstRecord: firstRecord === 0 && records.length > 0 ? 1 : firstRecord, lastRecord: lastRecord + records.length, total: (total !== null && total !== void 0 ? total : 0) + records.length });\n};\nconst validateNewRecordOperation = (changes) => {\n    return changes.every(change => isNewRecordOperation(change._operation));\n};\nconst isNewRecordOperation = (operation) => {\n    return [\"INSERT\", \"COPY\"].includes(operation);\n};\n//# sourceMappingURL=LoadingControlSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nimport { getCurrentRecords, getSelectionRecords } from \"./SnapshotSlice.js\";\nimport { SelectionInfo, SelectionMode } from \"../../DataUnit.js\";\nimport { getCurrentRequest, getPaginationInfo } from \"./LoadingControlSlice.js\";\nclass SelectionReducerImpl {\n    constructor() {\n        this.sliceName = \"hist::selection\";\n    }\n    reduce(stateManager, currentState, action) {\n        var _a;\n        switch (action.type) {\n            case Action.DATA_LOADED:\n                return !((_a = action.payload) === null || _a === void 0 ? void 0 : _a.keepSelection) ? undefined : currentState;\n            case Action.RECORDS_ADDED:\n            case Action.RECORDS_COPIED:\n                const lastSelection = (currentState === null || currentState === void 0 ? void 0 : currentState.currentSelection) || [];\n                return { currentSelection: action.payload.map((r) => r.__record__id__), lastSelection };\n            case Action.DATA_SAVED:\n                return { currentSelection: updateSavedIds(stateManager, action.payload.records) };\n            case Action.RECORDS_REMOVED:\n                return { currentSelection: action.payload.selectionAfterRemove || [] };\n            case Action.NEXT_SELECTED:\n            case Action.PREVIOUS_SELECTED:\n                const currentRecords = getCurrentRecords(stateManager);\n                const currentSelection = currentState === null || currentState === void 0 ? void 0 : currentState.currentSelection;\n                if (currentRecords && currentRecords.size > 0) {\n                    let index;\n                    if (!currentState || currentSelection.length === 0) {\n                        index = action.type === Action.PREVIOUS_SELECTED ? 0 : Math.min(0, currentRecords.size);\n                    }\n                    else {\n                        index = getItemIndex(currentSelection[0], currentRecords) + (action.type === Action.PREVIOUS_SELECTED ? -1 : 1);\n                    }\n                    if (index < currentRecords.size && index >= 0) {\n                        return { currentSelection: [Array.from(currentRecords.values())[index].__record__id__] };\n                    }\n                }\n                return undefined;\n            case Action.SELECTION_CHANGED:\n                const { type, selection: selectionSource } = action.payload;\n                if (selectionSource === SelectionMode.ALL_RECORDS) {\n                    return { currentSelection: [], mode: SelectionMode.ALL_RECORDS };\n                }\n                if (selectionSource && type === \"index\") {\n                    const currentRecords = getCurrentRecords(stateManager);\n                    if (currentRecords) {\n                        const records = Array.from(currentRecords.values());\n                        const selectionById = [];\n                        selectionSource.forEach((i) => {\n                            if (i >= 0 && i < currentRecords.size) {\n                                selectionById.push(records[i].__record__id__);\n                            }\n                        });\n                        return { currentSelection: selectionById };\n                    }\n                }\n                return { currentSelection: selectionSource };\n            case Action.EDITION_CANCELED:\n                if (currentState === null || currentState === void 0 ? void 0 : currentState.lastSelection) {\n                    return { currentSelection: currentState.lastSelection };\n                }\n                return { currentSelection: (currentState === null || currentState === void 0 ? void 0 : currentState.currentSelection) || [] };\n        }\n        return currentState;\n    }\n}\nexport const SelectionReducer = new SelectionReducerImpl();\nexport const getSelectionState = (stateManager) => {\n    return stateManager.select(SelectionReducer.sliceName, (state) => state);\n};\nexport const getSelection = (stateManager) => {\n    const selection = getCurrentSelection(stateManager);\n    if (!selection || selection.length === 0) {\n        return [];\n    }\n    return selection;\n};\nexport const getSelectionInfo = (stateManager) => {\n    const selection = getSelectionState(stateManager);\n    const currentRequest = getCurrentRequest(stateManager);\n    if (selection && selection.mode === SelectionMode.ALL_RECORDS) {\n        const paginationInfo = getPaginationInfo(stateManager);\n        return new SelectionInfo([], SelectionMode.ALL_RECORDS, (paginationInfo === null || paginationInfo === void 0 ? void 0 : paginationInfo.total) || 0, currentRequest === null || currentRequest === void 0 ? void 0 : currentRequest.filters, currentRequest === null || currentRequest === void 0 ? void 0 : currentRequest.sort);\n    }\n    return new SelectionInfo(getSelectionRecords(stateManager) || [], SelectionMode.SOME_RECORDS, undefined, undefined, currentRequest === null || currentRequest === void 0 ? void 0 : currentRequest.sort);\n};\nexport const hasNext = (stateManager) => {\n    const records = getCurrentRecords(stateManager);\n    if (records) {\n        const selection = getCurrentSelection(stateManager);\n        if (!selection || selection.length === 0) {\n            return records.size > 0;\n        }\n        return records.size > (getItemIndex(selection[0], records) + 1);\n    }\n    return false;\n};\nexport const hasPrevious = (stateManager) => {\n    const records = getCurrentRecords(stateManager);\n    if (records) {\n        const selection = getCurrentSelection(stateManager);\n        if (!selection || selection.length === 0) {\n            return false;\n        }\n        return getItemIndex(selection[0], records) > 0;\n    }\n    return false;\n};\nfunction getItemIndex(key, map) {\n    return Array.from(map.keys()).indexOf(key);\n}\nfunction updateSavedIds(stateManager, savedRecords) {\n    const currentSelection = getSelection(stateManager);\n    if (currentSelection) {\n        const newSelection = [];\n        currentSelection.forEach(id => {\n            const record = savedRecords.find(r => r.__old__id__ === id);\n            if (record) {\n                newSelection.push(record.__record__id__);\n            }\n            else {\n                newSelection.push(id);\n            }\n        });\n        return newSelection;\n    }\n    return currentSelection;\n}\nfunction getCurrentSelection(stateManager) {\n    const selectionState = getSelectionState(stateManager);\n    return selectionState ? selectionState.currentSelection : undefined;\n}\n//# sourceMappingURL=SelectionSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass WaitingCheangesReducerImpl {\n    constructor() {\n        this.sliceName = \"waitingChanges\";\n    }\n    reduce(stateManager, currentState, action) {\n        let newState;\n        switch (action.type) {\n            case Action.CHANGING_DATA:\n                newState = new Map(currentState);\n                Object.entries(action.payload).forEach(([key, value]) => {\n                    newState.set(key, value);\n                });\n                return newState;\n            case Action.WAITING_CHANGE_CANCELED:\n                newState = new Map(currentState);\n                newState.delete(action.payload.fieldName);\n                return newState.size === 0 ? undefined : newState;\n            case Action.DATA_CHANGED:\n                newState = new Map(currentState);\n                Object.entries(action.payload).forEach(([key]) => {\n                    newState.delete(key);\n                });\n                return newState.size === 0 ? undefined : newState;\n            case Action.DATA_SAVED:\n            case Action.EDITION_CANCELED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const WaitingChangesReducer = new WaitingCheangesReducerImpl();\nexport const getWaitingChanges = (stateManager) => {\n    return stateManager.select(WaitingChangesReducer.sliceName, (state) => state);\n};\nexport const isWaiting = (stateManager, fieldName) => {\n    const allWC = getWaitingChanges(stateManager);\n    return allWC ? allWC.has(fieldName) : false;\n};\nexport const getBlockingWaitingChanges = (stateManager) => {\n    const allWC = getWaitingChanges(stateManager);\n    if (allWC) {\n        return new Map(Array.from(allWC.entries())\n            .filter(entry => entry[1].blocking)\n            .map(entry => [entry[0], entry[1]]));\n    }\n};\nexport const getWaitingChangePromisses = (stateManager) => {\n    const allWC = getWaitingChanges(stateManager);\n    if (allWC) {\n        return Array.from(allWC.values())\n            .filter(wc => !wc.blocking)\n            .map(wc => wc.promise);\n    }\n};\n//# sourceMappingURL=WaitingChangesSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nimport { getSelection } from \"./SelectionSlice.js\";\nimport { getRecords } from \"./RecordsSlice.js\";\nimport { getRemovedRecords } from \"./RemovedRecordsSlice.js\";\nimport { getAddedRecords, isAddedRecord } from \"./AddedRecordsSlice.js\";\nimport { Change, ChangeOperation } from \"../../DataUnit.js\";\nimport { getWaitingChanges } from \"./WaitingChangesSlice.js\";\nimport { getSelectionRecords } from \"./SnapshotSlice.js\";\nclass ChangesReducerImpl {\n    constructor() {\n        this.sliceName = \"hist::changes\";\n    }\n    reduce(stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.RECORDS_COPIED:\n                const records = action.payload;\n                const changes = new Map(getChanges(stateManager));\n                records.forEach(r => {\n                    const rChanges = Object.assign(Object.assign({}, changes.get(r.__record__id__)), r);\n                    delete rChanges.__old__id__;\n                    delete rChanges.__record__id__;\n                    delete rChanges.__parent__record__id__;\n                    delete rChanges.__record__source__id__;\n                    delete rChanges.__record__label__;\n                    delete rChanges.__copy__;\n                    delete rChanges.__owner__dataunit__name__;\n                    changes.set(r.__record__id__, rChanges);\n                });\n                return changes;\n            case Action.DATA_CHANGED:\n                const selection = action.payload.records || getSelection(stateManager);\n                if (selection) {\n                    const newState = new Map(currentState);\n                    selection.forEach(recordId => {\n                        const newChanges = Object.assign(Object.assign({}, newState.get(recordId)), action.payload);\n                        delete newChanges.records;\n                        newState.set(recordId, newChanges);\n                    });\n                    return newState;\n                }\n                return currentState;\n            case Action.DATA_SAVED:\n            case Action.EDITION_CANCELED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const ChangesReducer = new ChangesReducerImpl();\nexport const getChanges = (stateManager) => {\n    return stateManager.select(ChangesReducer.sliceName, (state) => state);\n};\nexport const isDirty = (stateManager) => {\n    if (getAddedRecords(stateManager) !== undefined) {\n        return true;\n    }\n    if (getRemovedRecords(stateManager) !== undefined) {\n        return true;\n    }\n    return hasDirtyRecords(stateManager);\n};\nexport const hasDirtyRecords = (stateManager) => {\n    if (getWaitingChanges(stateManager) !== undefined) {\n        return true;\n    }\n    return getChanges(stateManager) !== undefined;\n};\nexport const getChangedFieldValue = (fieldName, record, stateManager) => {\n    const changes = getChanges(stateManager);\n    if (changes) {\n        const recordChanges = changes.get(record.__record__id__);\n        if (recordChanges && Object.hasOwn(recordChanges, fieldName)) {\n            return recordChanges[fieldName];\n        }\n    }\n    return record[fieldName];\n};\nexport const getChangesToSave = (dataUnit, stateManager) => {\n    const changes = getChanges(stateManager);\n    const selectedRecords = getSelectionRecords(stateManager) || [];\n    const records = new Map(getRecords(stateManager)\n        .concat(selectedRecords.filter(record => !isAddedRecord(record.__record__id__, stateManager)))\n        .map(r => [r.__record__id__, r]));\n    const result = [];\n    if (changes != undefined) {\n        Array.from(changes.entries())\n            .forEach(([recordId, change]) => {\n            const record = records.get(recordId);\n            if (record != undefined) {\n                result.push(new Change(dataUnit, record, change, ChangeOperation.UPDATE, record.__record__source__id__));\n            }\n        });\n    }\n    const addedRecords = getAddedRecords(stateManager);\n    if (addedRecords) {\n        addedRecords.forEach(r => {\n            const operation = r.__copy__ ? ChangeOperation.COPY : ChangeOperation.INSERT;\n            const changedFields = Object.assign({}, changes === null || changes === void 0 ? void 0 : changes.get(r.__record__id__));\n            if (operation === ChangeOperation.INSERT) {\n                Object.keys(r).forEach(fieldName => {\n                    var _a;\n                    if (!fieldName.startsWith(\"__\") && !((_a = Object.keys(changedFields)) === null || _a === void 0 ? void 0 : _a.includes(fieldName))) {\n                        changedFields[fieldName] = r[fieldName];\n                    }\n                });\n            }\n            result.push(new Change(dataUnit, r, changedFields, operation, r.__record__source__id__));\n        });\n    }\n    const removedRecords = getRemovedRecords(stateManager);\n    const recordsById = {};\n    records === null || records === void 0 ? void 0 : records.forEach(r => recordsById[r.__record__id__] = r);\n    if (removedRecords) {\n        removedRecords.forEach(id => {\n            result.push(new Change(dataUnit, recordsById[id], undefined, ChangeOperation.DELETE));\n        });\n    }\n    return result;\n};\n//# sourceMappingURL=ChangesSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass UnitMetadataReducerImpl {\n    constructor() {\n        this.sliceName = \"unitMetadata\";\n    }\n    reduce(_stateManager, currentState, action) {\n        if (action.type === Action.METADATA_LOADED) {\n            return action.payload;\n        }\n        return currentState;\n    }\n}\nexport const UnitMetadataReducer = new UnitMetadataReducerImpl();\nexport const getMetadata = (stateManager) => {\n    return stateManager.select(UnitMetadataReducer.sliceName, (state) => state);\n};\nexport const getField = (stateManager, fieldName) => {\n    const md = getMetadata(stateManager);\n    return md ? md.fields.find(fmd => fmd.name === fieldName) : undefined;\n};\n//# sourceMappingURL=UnitMetadataSlice.js.map","import { Action } from \"./action/DataUnitAction.js\";\nclass HistReducerImpl {\n    constructor() {\n        this.sliceName = \"\";\n    }\n    reduce(stateManager, _currentState, action) {\n        switch (action.type) {\n            case Action.DATA_SAVED:\n            case Action.EDITION_CANCELED:\n                stateManager.clearUndo();\n                break;\n            case Action.CHANGE_UNDONE:\n                stateManager.undo();\n                break;\n            case Action.CHANGE_REDONE:\n                stateManager.redo();\n                break;\n        }\n    }\n}\nexport const HistReducer = new HistReducerImpl();\nexport const canUndo = (stateManager) => {\n    return stateManager.canUndo();\n};\nexport const canRedo = (stateManager) => {\n    return stateManager.canRedo();\n};\n//# sourceMappingURL=HistReducer.js.map","/**\n * Classe responsável por armazenar instâncias de DataUnit.\n */\nexport class DataUnitStorage {\n    /**\n     * Retorna uma instância de DataUnit armazenada no DataUnitStorage.\n     * @param {string} dataUnitName - O nome do DataUnit.\n     * @returns {DataUnit | undefined} - A instância do DataUnit ou undefined caso não seja encontrada.\n     */\n    static get(dataUnitName) {\n        const key = this.keyMap.get(dataUnitName);\n        if (key)\n            return this.dataUnitMap.get(key);\n    }\n    /**\n     * Armazena uma instância de DataUnit no DataUnitStorage.\n     * @param {DataUnit} dataUnit - A instância de DataUnit a ser armazenada.\n     */\n    static put(dataUnit) {\n        const key = { key: dataUnit.name };\n        this.dataUnitMap.set(key, dataUnit);\n        this.keyMap.set(dataUnit.name, key);\n    }\n    /**\n     * Remove uma instância de DataUnit do DataUnitStorage.\n     * @param {DataUnit | string} dataUnit - A instância de DataUnit ou o nome do DataUnit a ser removido.\n     */\n    static remove(dataUnit) {\n        const key = typeof dataUnit === 'string' ? this.keyMap.get(dataUnit) : this.keyMap.get(dataUnit.name);\n        const dataUnitKey = typeof dataUnit === 'string' ? dataUnit : dataUnit.name;\n        if (key) {\n            this.dataUnitMap.delete(key);\n            this.keyMap.delete(dataUnitKey);\n        }\n    }\n}\nDataUnitStorage.dataUnitMap = new WeakMap();\nDataUnitStorage.keyMap = new Map();\n//# sourceMappingURL=DataUnitStorage.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass InvalidFieldsReducerImpl {\n    constructor() {\n        this.sliceName = \"hist::invalidFields\";\n    }\n    reduce(_stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.FIELD_INVALIDATED:\n                return makeInvalid(currentState, action.payload);\n            case Action.INVALIDATE_CLEAN:\n                return clearRecord(currentState, action.payload);\n            case Action.EDITION_CANCELED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const InvalidFieldsReducer = new InvalidFieldsReducerImpl();\nexport const getInvalidFields = (stateManager) => {\n    return stateManager.select(InvalidFieldsReducer.sliceName, (state) => state);\n};\nexport const getInvalidFieldMessage = (stateManager, fieldName, recordId) => {\n    const invalidFields = getInvalidFields(stateManager);\n    if (invalidFields) {\n        const recordInvalidFields = invalidFields.get(recordId);\n        if (recordInvalidFields) {\n            return recordInvalidFields.get(fieldName);\n        }\n    }\n    return undefined;\n};\nconst clearRecord = (currentState, payload) => {\n    const { recordId, fieldName } = payload;\n    if (recordId == undefined) {\n        return undefined;\n    }\n    if (currentState) {\n        const recordInvalidFields = currentState.get(recordId);\n        if (recordInvalidFields) {\n            const newState = new Map(currentState);\n            if (fieldName == undefined) {\n                newState.delete(recordId);\n            }\n            else {\n                const newRecorcInvalidFields = new Map(recordInvalidFields);\n                newRecorcInvalidFields.delete(fieldName);\n                if (newRecorcInvalidFields.size > 0) {\n                    newState.set(recordId, newRecorcInvalidFields);\n                }\n                else {\n                    newState.delete(recordId);\n                }\n                return newState;\n            }\n        }\n        return currentState;\n    }\n    return undefined;\n};\nconst makeInvalid = (currentState, payload) => {\n    const { recordId, message, fieldName } = payload;\n    const recordInvalidFields = new Map(currentState === null || currentState === void 0 ? void 0 : currentState.get(recordId));\n    recordInvalidFields.set(fieldName, message);\n    const newState = new Map(currentState);\n    newState.set(recordId, recordInvalidFields);\n    return newState;\n};\n//# sourceMappingURL=InvalidFieldsSlice.js.map","import { Action } from \"../action/DataUnitAction.js\";\nclass LoadingPropertiesImpl {\n    constructor() {\n        this.sliceName = \"loadingProperties\";\n    }\n    reduce(_stateManager, currentState, action) {\n        switch (action.type) {\n            case Action.LOADING_PROPERTY_ADDED:\n                return buildNewState(currentState, action.payload);\n            case Action.LOADING_PROPERTIES_CLEANED:\n                return undefined;\n        }\n        return currentState;\n    }\n}\nexport const LoadingPropertiesReducer = new LoadingPropertiesImpl();\nexport const getLoadingProperties = (stateManager) => {\n    return stateManager.select(LoadingPropertiesReducer.sliceName, (state) => state);\n};\nfunction buildNewState(currentState, payload) {\n    const newState = new Map(currentState);\n    if (payload != undefined) {\n        for (const [key, value] of Object.entries(payload)) {\n            if (typeof key === \"string\" && typeof value === \"string\") {\n                newState.set(key, value);\n            }\n        }\n    }\n    return newState;\n}\n//# sourceMappingURL=LoadingProperties.js.map","import { compareValues } from '../metadata/DataType.js';\nexport class FieldComparator {\n    static compare(field, recordA, recordB, asc = true, onlyLabel = false) {\n        const valueA = (asc ? recordA : recordB)[field.name];\n        const valueB = (asc ? recordB : recordA)[field.name];\n        return FieldComparator.compareValues(field, valueA, valueB, onlyLabel);\n    }\n    static compareValues(descriptor, valueA, valueB, onlyLabel = false) {\n        const undefinedComparison = this.compareUndefined(valueA == undefined, valueB == undefined);\n        return (undefinedComparison != undefined) ? undefinedComparison : compareValues(valueA, valueB, descriptor, onlyLabel);\n    }\n    static compareUndefined(isUndefinedA, isUndefinedB) {\n        if (!isUndefinedA && !isUndefinedB)\n            return;\n        if (isUndefinedA && isUndefinedB)\n            return 0;\n        return isUndefinedA ? -1 : 1;\n    }\n}\n//# sourceMappingURL=FieldComparator.js.map","import { SortMode } from \"../dataunit/metadata/UnitMetadata.js\";\nimport { FieldComparator } from \"../dataunit/sorting/FieldComparator.js\";\n/**\n * `SortingUtils`: Utilizado para auxiliar na ordenacao de registros.\n */\nexport default class SortingUtils {\n    static getSortingFunction(dataUnit, sorting) {\n        if (sorting == undefined || sorting.length == 0) {\n            return undefined;\n        }\n        return (recordA, recordB) => {\n            var _a;\n            for (const sort of sorting) {\n                if (sort.field) {\n                    let field = dataUnit.getField(sort.field);\n                    let onlyLabel = false;\n                    if (!field) {\n                        const sourceFieldName = (_a = dataUnit.getSourceFieldValue(sort.field)) !== null && _a !== void 0 ? _a : \"\";\n                        field = dataUnit.getField(sourceFieldName);\n                        onlyLabel = true;\n                    }\n                    const result = FieldComparator.compare(field, recordA, recordB, sort.mode === SortMode.ASC, onlyLabel);\n                    if (result != 0) {\n                        return result;\n                    }\n                }\n            }\n            return 0;\n        };\n    }\n}\n//# sourceMappingURL=SortingUtils.js.map","/**\n * `ServiceCanceledException`: Exceção lançada quando ocorre o cancelamento de um serviço.\n */\nexport default class ServiceCanceledException extends Error {\n    constructor(title, message, errorCode = \"\") {\n        super(message);\n        this.name = \"Service Canceled\";\n        this.title = title;\n        this.message = message;\n        this.errorCode = errorCode;\n    }\n}\n//# sourceMappingURL=ServiceCanceledException.js.map","/**\n * `SilentException`: Exceção lançada quando uma exception silenciosa é.\n */\nexport default class SilentException extends Error {\n    constructor(title = \"\", message = \"\", errorCode = \"\") {\n        super(message);\n        this.name = \"SilentException\";\n        this.title = title;\n        this.message = message;\n        this.errorCode = errorCode;\n    }\n}\n//# sourceMappingURL=SilentException.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { convertType, DataType, toString } from \"./metadata/DataType.js\";\nimport { Action, DataUnitAction } from \"./state/action/DataUnitAction.js\";\nimport StateManager from \"./state/StateManager.js\";\nimport ErrorException from \"../exceptions/ErrorException.js\";\nimport WaitingChangeException from \"../exceptions/WaitingChangeException.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport ObjectUtils from \"../utils/ObjectUtils.js\";\nimport { AddedRecordsReducer, getAddedRecords, prepareAddedRecordId, prepareCopiedRecord } from \"./state/slice/AddedRecordsSlice.js\";\nimport { ChangesReducer, getChangesToSave, isDirty, hasDirtyRecords } from \"./state/slice/ChangesSlice.js\";\nimport { SnapshotReducer, getCurrentRecords, getFieldValue, getModifiedRecords, getSelectedRecord } from \"./state/slice/SnapshotSlice.js\";\nimport { getCurrentPage, getLastPage, getPaginationInfo, getCurrentRequest, LoadingControlReducer, hasMorePages, hasPreviousPages } from \"./state/slice/LoadingControlSlice.js\";\nimport { getRecords, RecordsReducer } from \"./state/slice/RecordsSlice.js\";\nimport { RemovedRecordsReducer } from \"./state/slice/RemovedRecordsSlice.js\";\nimport { getSelection, getSelectionInfo, hasNext, hasPrevious, SelectionReducer } from \"./state/slice/SelectionSlice.js\";\nimport { getField, getMetadata, UnitMetadataReducer } from \"./state/slice/UnitMetadataSlice.js\";\nimport { getBlockingWaitingChanges, getWaitingChangePromisses, getWaitingChanges, isWaiting, WaitingChangesReducer } from \"./state/slice/WaitingChangesSlice.js\";\nimport { canRedo, canUndo, HistReducer } from \"./state/HistReducer.js\";\nimport { getFormattedValue } from \"./formatting/PrettyFormatter.js\";\nimport { v4 as uuid } from \"uuid\";\nimport { DataUnitStorage } from \"./DataUnitStorage.js\";\nimport { getInvalidFieldMessage, InvalidFieldsReducer } from \"./state/slice/InvalidFieldsSlice.js\";\nimport { getLoadingProperties, LoadingPropertiesReducer } from \"./state/slice/LoadingProperties.js\";\nimport SortingUtils from \"../utils/SortingUtils.js\";\nimport ServiceCanceledException from \"../exceptions/ServiceCanceledException.js\";\nimport SilentException from \"../exceptions/SilentException.js\";\n/***\n * `DataUnit`: Atua como uma camada de abstração entre o back-end e a interface do usuário.\n*/\nexport default class DataUnit {\n    constructor(name = DataUnit.DEFAULT_DATAUNIT_NAME, parentDataUnit) {\n        var _a;\n        this._childByName = new Map();\n        this._savingLockers = [];\n        this._waitingToReload = false;\n        this._cancelPagination = false;\n        this._isMultipleEdition = false;\n        this._fieldSourceValue = new Map();\n        /**\n         *\n         * Trata as Actions do DataUnit Parent\n         *\n         *\n        */\n        this.onDataUnitParentEvent = (action) => {\n            var _a;\n            switch (action.type) {\n                case Action.SELECTION_CHANGED:\n                case Action.NEXT_SELECTED:\n                case Action.PREVIOUS_SELECTED:\n                case Action.DATA_LOADED:\n                case Action.RECORDS_ADDED:\n                case Action.EDITION_CANCELED:\n                    this.clearDataUnit();\n                    const selectedRecord = (_a = this._parentDataUnit) === null || _a === void 0 ? void 0 : _a.getSelectedRecord();\n                    if (selectedRecord != undefined && !this.isNewRecord(selectedRecord.__record__id__)) {\n                        this.loadData();\n                    }\n                    break;\n            }\n        };\n        this._uuid = uuid();\n        this._name = `${name}?uuid=${this._uuid}`;\n        this._pageSize = 0;\n        this._stateManager = new StateManager([\n            HistReducer,\n            LoadingPropertiesReducer,\n            UnitMetadataReducer,\n            LoadingControlReducer,\n            RecordsReducer,\n            RemovedRecordsReducer,\n            AddedRecordsReducer,\n            SelectionReducer,\n            ChangesReducer,\n            WaitingChangesReducer,\n            InvalidFieldsReducer,\n            SnapshotReducer\n        ]);\n        this._observers = new Map();\n        this._filterProviders = new Map();\n        this._sortingProvider = undefined;\n        this._defaultSorting = [];\n        this._allowReleaseCallbacks = true;\n        this._interceptors = new Map();\n        this._parentDataUnit = parentDataUnit;\n        (_a = this._parentDataUnit) === null || _a === void 0 ? void 0 : _a.subscribe(this.onDataUnitParentEvent);\n        this._loadingLockers = [];\n        DataUnitStorage.put(this);\n    }\n    /**\n     * Desfaz vinculos do DataUnit. Chamado quando o DU não é mais necessário.\n     */\n    release() {\n        DataUnitStorage.remove(this._name);\n        if (this._parentDataUnit) {\n            this._parentDataUnit.unsubscribe(this.onDataUnitParentEvent);\n            this._parentDataUnit.removeChildDataunit(this._name);\n        }\n        this.releaseCallbacks();\n    }\n    /**\n     * Remove callbacks registrados internamente no dataunit, é util\n     * para evitar memory leak em cenários onde o dataunit é reaproveitado em cache.\n     *\n     * Callbacks que são liberados:\n     * - Filters Providers\n     * - Interceptors\n     * - Observers\n     * - Sorting Providers\n     */\n    releaseCallbacks() {\n        if (!this._allowReleaseCallbacks)\n            return;\n        this._observers = new Map();\n        this._filterProviders = new Map();\n        this._sortingProvider = undefined;\n        this._interceptors = new Map();\n    }\n    /**\n     * Adiciona uma propriedade transacional que será envida aos\n     * loaders (dataLoader, saveLoader, removeLoader e recordLoader) na chamada.\n     * Essas propriedades serão limpas ao final da execução de cada método.\n     *\n     * @param name - Nome da propriedade\n     * @param value - Valor da propriedade\n     *\n     */\n    addGlobalLoaderProp(name, value) {\n        this.dispatchAction(Action.LOADING_PROPERTY_ADDED, { [name]: value });\n    }\n    /**\n     * Retorna as propriedades transacionais adicionados anteriores à chamada.\n     *\n     * @returns - Todas as propriedades desde o final do último loader.\n     */\n    getGlobalLoaderProps() {\n        return getLoadingProperties(this._stateManager) || new Map();\n    }\n    get dataUnitId() {\n        return this._uuid;\n    }\n    /**\n     * Retorna se o dataUnit está com recarregamento pendente.\n     */\n    isWaitingToReload() {\n        return this._waitingToReload;\n    }\n    /**\n     * Define se o dataUnit tem um recarregamento pendente.\n     * @param isWaiting\n     */\n    setWaitingToReload(isWaiting) {\n        this._waitingToReload = isWaiting;\n    }\n    /**\n     * Informa se a paginação deve ser cancelada.\n     */\n    get cancelPagination() {\n        return this._cancelPagination;\n    }\n    /**\n     * Informa se a paginação deve ser cancelada.\n     */\n    set cancelPagination(cancelPagination) {\n        this._cancelPagination = cancelPagination;\n    }\n    /**\n     * Informa se o DataUnit está no modo de edição de múltiplos registros.\n     */\n    get isMultipleEdition() {\n        return this._isMultipleEdition;\n    }\n    /**\n     * Define se o DataUnit está no modo de edição de múltiplos registros.\n     */\n    set isMultipleEdition(isMultipleEdition) {\n        this._isMultipleEdition = isMultipleEdition;\n        this.dispatchAction(Action.MULTIPLE_EDITION_CHANGED, { isMultipleEdition });\n    }\n    /**\n     *\n     * Obtém o nome de identificação do DataUnit (geralmente em formato de URI - Uniform Resource Identifier).\n     *\n     * @returns - Nome de identificação do DataUnit.\n     *\n    */\n    get name() {\n        return this._name;\n    }\n    /**\n     *\n     * Obtém o valor convertido de acordo com o tipo do campo.\n     *\n     * @param fieldName - Identificador do campo.\n     * @param newValue - Novo valor que será atribuído ao campo pós validação.\n     *\n     * @returns - Novo valor convertido em um tipo valido.\n     *\n    */\n    validateAndTypeValue(fieldName, newValue) {\n        const descriptor = this.getField(fieldName);\n        return descriptor ? convertType(descriptor.dataType, newValue) : newValue;\n    }\n    /**\n     *\n     * Obtém chave única para identificação do FilterProvider.\n     *\n     * @param provider - Interface FilterProvider na qual será retornada uma chave correspondente.\n     *\n     * @returns - A chave do provider.\n     *\n    */\n    getFielterProviderKey(provider) {\n        if (provider.getKey) {\n            return provider.getKey();\n        }\n        return StringUtils.hashCode(provider.getFilter.toString());\n    }\n    /**\n     *\n     * Executa o carregamento dos registros.\n     *\n     * @param request - Dados da requisição para carregamento dos registros.\n     * @param executionCtx - Contexto de execução do carregamento dos registros do DataUnit.\n     * @param checkLastFilter - Habilita a verificação da última requisição, evitando carga desnecessária.\n     *\n     * @returns - Registros do DataUnit.\n     *\n    */\n    executeLoadData(request, executionCtx, checkLastFilter, selectFirstRecord) {\n        if (checkLastFilter && this.isSameRequest(request)) {\n            const paginationInfo = getPaginationInfo(this._stateManager);\n            if (paginationInfo) {\n                const response = {\n                    records: getRecords(this._stateManager),\n                    paginationInfo\n                };\n                if (selectFirstRecord) {\n                    this.requestSelectFirst(executionCtx);\n                }\n                return Promise.resolve(response);\n            }\n        }\n        return new Promise((resolve, fail) => __awaiter(this, void 0, void 0, function* () {\n            if (yield this.dispatchAction(Action.LOADING_DATA, request, executionCtx)) {\n                if (this.dataLoader) {\n                    this.dataLoader(this, request).then((response) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.dispatchAction(Action.DATA_LOADED, Object.assign(Object.assign({}, response), { keepSelection: request.keepSelection, filters: request.filters, selectFirstRecord }), executionCtx);\n                        yield this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                        if (selectFirstRecord) {\n                            this.requestSelectFirst(executionCtx);\n                        }\n                        resolve(response);\n                    })).catch(error => {\n                        console.error(error);\n                        const { errorCode } = error;\n                        this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                        fail(new ErrorException(\"Erro ao carregar registros\", error, errorCode));\n                    });\n                }\n            }\n        }));\n    }\n    requestSelectFirst(executionCtx) {\n        window.requestAnimationFrame(() => {\n            this.selectFirst(executionCtx);\n        });\n    }\n    isSameRequest(request) {\n        const lastRequest = getCurrentRequest(this._stateManager);\n        return ObjectUtils.objectToString(request) === ObjectUtils.objectToString(lastRequest || {});\n    }\n    // Loaders\n    /**\n     *\n     * Carrega os metadados do DataUnit.\n     *\n     * @param executionCtx - Contexto de execução do carregamento dos metadados do DataUnit.\n     *\n     * @returns - Metadados carregados.\n     *\n    */\n    loadMetadata(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield this.dispatchAction(Action.LOADING_METADATA, undefined, executionCtx)) {\n                return new Promise((resolve, fail) => {\n                    if (this.metadataLoader) {\n                        this.metadataLoader(this).then(metadata => {\n                            this.metadata = metadata;\n                            resolve(this.metadata);\n                        }).catch(error => {\n                            const { errorCode } = error;\n                            fail(new ErrorException(\"Erro ao carregar metadados\", error, errorCode));\n                        });\n                    }\n                });\n            }\n        });\n    }\n    loadDataWithParams({ source, keepSelection, selectFirstRecord, executionCtx, checkLastFilter, quickFilter }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.loadData(quickFilter, executionCtx, checkLastFilter, source, selectFirstRecord, keepSelection);\n        });\n    }\n    /**\n     *\n     * Carrega os registros do DataUnit.\n     *\n     * @param quickFilter - Filtros a serem aplicados.\n     * @param executionCtx - Contexto de execução do carregamento dos registros.\n     * @param checkLastFilter - Habilita a verificação da última requisição, evitando carga desnecessária.\n     *\n     * @returns - Registros requisitados.\n     *\n    */\n    loadData(quickFilter, executionCtx, checkLastFilter, source, selectFirstRecord, keepSelection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.processLoadingLockers();\n            if (this._parentDataUnit) {\n                const parentRecord = this._parentDataUnit.getSelectedRecord();\n                if (parentRecord == undefined || this._parentDataUnit.isNewRecord(parentRecord.__record__id__)) {\n                    if (this.records) {\n                        this.clearDataUnit();\n                    }\n                    return Promise.resolve({\n                        records: []\n                    });\n                }\n            }\n            const loadDataRequest = this.getLoadDataRequest(quickFilter, source, keepSelection);\n            return this.executeLoadData(loadDataRequest, executionCtx, checkLastFilter, selectFirstRecord);\n        });\n    }\n    /**\n     *\n     * Alterna entre os registros por número de página.\n     *\n     * @param page - Número da página desejada.\n     * @param executionCtx - Contexto de execução do carregamento dos registros do DataUnit.\n     *\n     * @returns - Registros da página desejada.\n     *\n    */\n    gotoPage(page, executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._pageSize === 0) {\n                return;\n            }\n            let request = getCurrentRequest(this._stateManager);\n            if (!request) {\n                request = {\n                    filters: this.getFilters(),\n                    sort: this.getSort()\n                };\n            }\n            if (page >= 0 && page <= getLastPage(this._stateManager, this._pageSize)) {\n                return this.executeLoadData(Object.assign(Object.assign({}, request), { limit: this._pageSize, offset: page * this._pageSize, keepSelection: true, source: DataUnit.CHANGING_PAGE_LOADING_SOURCE }), executionCtx);\n            }\n        });\n    }\n    /**\n     *\n     * Vai para os registros da página seguinte.\n     *\n     * @param executionCtx - Contexto de execução do carregamento dos registros do DataUnit.\n     *\n     * @returns - Registros da página seguinte.\n     *\n    */\n    nextPage(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.gotoPage(getCurrentPage(this._stateManager) + 1, executionCtx);\n        });\n    }\n    /**\n     *\n     * Vai para os registros da página anterior.\n     *\n     * @param executionCtx - Contexto de execução do carregamento dos registros do DataUnit.\n     *\n     * @returns - Registros da página anterior.\n     *\n    */\n    previousPage(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.gotoPage(getCurrentPage(this._stateManager) - 1, executionCtx);\n        });\n    }\n    getLoadDataRequest(quickFilter, source, keepSelection) {\n        const request = {\n            filters: (quickFilter === null || quickFilter === void 0 ? void 0 : quickFilter.filter) ? [quickFilter.filter] : this.getFilters(),\n            sort: this.getSort(),\n            parentRecordId: this.getParentRecordId(),\n            source,\n            keepSelection\n        };\n        if (quickFilter) {\n            request.quickFilter = quickFilter;\n        }\n        if (this._pageSize > 0) {\n            request.limit = this._pageSize;\n            request.offset = 0;\n        }\n        return request;\n    }\n    notifySavingData(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const notifyPromises = [];\n            Array.from(this._childByName.values()).forEach(child => notifyPromises.push(child.notifySavingData(executionCtx)));\n            if (isDirty(this._stateManager)) {\n                notifyPromises.push(this.dispatchAction(Action.SAVING_DATA, undefined, executionCtx));\n            }\n            return new Promise(accept => Promise.all(notifyPromises).then(responses => {\n                accept(responses.reduce((previous, current) => previous && current, true));\n            }));\n        });\n    }\n    getBeforeSavePromisses() {\n        let promises = getWaitingChangePromisses(this._stateManager) || [];\n        promises = promises.concat(this._savingLockers);\n        return promises;\n    }\n    /**\n     *\n     * Salva o estado do registro do DataUnit.\n     *\n     * @param executionCtx - Contexto de execução da persistencia do registro do DataUnit.\n     *\n     * @returns - Resposta da solicitação.\n     *\n    */\n    saveData(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blockingWaitingChanges = getBlockingWaitingChanges(this._stateManager);\n            if (blockingWaitingChanges && blockingWaitingChanges.size > 0) {\n                const [_, waitingChange] = blockingWaitingChanges.entries().next().value;\n                return Promise.reject(new WaitingChangeException(\"Aguardando alteração de campo\", waitingChange.waitmessage));\n            }\n            else {\n                if (this.isDirty()) {\n                    if (yield this.notifySavingData(executionCtx)) {\n                        const promisses = this.getBeforeSavePromisses();\n                        return new Promise((resolve, fail) => {\n                            Promise.all(promisses || []).then(() => {\n                                this._savingLockers = [];\n                                if (this.saveLoader) {\n                                    const changes = this.getAllChangesToSave();\n                                    this.saveLoader(this, changes).then((records) => {\n                                        this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                                        const recordsByDataUnit = this.getRecordsByDataUnit(records);\n                                        const dispatchPromisses = [];\n                                        for (const [ownerDataUnitName, splittedRecords] of recordsByDataUnit) {\n                                            const ownerDataUnit = DataUnitStorage.get(ownerDataUnitName);\n                                            const changesByDataUnit = changes.filter(change => change.dataUnit === ownerDataUnitName);\n                                            if (ownerDataUnit) {\n                                                dispatchPromisses.push(ownerDataUnit.dispatchAction(Action.DATA_SAVED, { changes: changesByDataUnit, records: splittedRecords }, executionCtx));\n                                            }\n                                        }\n                                        Promise.all(dispatchPromisses).then(() => resolve());\n                                    }).catch(cause => {\n                                        const { errorCode } = cause;\n                                        this.dispatchAction(Action.SAVING_ERROR);\n                                        this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                                        if (cause instanceof ServiceCanceledException) {\n                                            console.debug(\"Service canceled: \" + cause.message);\n                                            resolve();\n                                        }\n                                        if (cause instanceof SilentException) {\n                                            fail(cause);\n                                            return;\n                                        }\n                                        fail(new ErrorException(\"Erro ao salvar alterações\", cause, errorCode));\n                                    });\n                                }\n                                else {\n                                    this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                                    resolve();\n                                }\n                            });\n                        });\n                    }\n                }\n            }\n            return Promise.resolve();\n        });\n    }\n    /**\n     *\n     * Retorna as alterações a serem salvas no DataUnit atual.\n     *\n     *\n     *\n     * @returns - Mudanças realizadas no DataUnit atual\n     *\n    */\n    buildChangesToSave() {\n        return getChangesToSave(this._name, this._stateManager);\n    }\n    buildChangesToSaveFromChild(allChanges, dataUnit) {\n        var _a;\n        (_a = dataUnit._childByName) === null || _a === void 0 ? void 0 : _a.forEach((dataUnitChild) => {\n            if (dataUnitChild.isDirty()) {\n                allChanges.push(...getChangesToSave(dataUnitChild.name, dataUnitChild._stateManager));\n                this.buildChangesToSaveFromChild(allChanges, dataUnitChild);\n            }\n        });\n    }\n    /**\n     *\n     * Retorna todas as alterações do DataUnit a serem salvas, incluindo no nível Master e Detail.\n     *\n     *\n     *\n     * @returns - Todas as mudanças realizadas no DataUnit, tanto Master quanto Detail;\n     *\n    */\n    getAllChangesToSave() {\n        const allChanges = [];\n        allChanges.push(...this.buildChangesToSave());\n        this.buildChangesToSaveFromChild(allChanges, this);\n        return allChanges;\n    }\n    /**\n     *\n     * Remove o registro selecionado.\n     *\n     * @param buffered - Se será utilizado buffer na solicitação.\n     * @param silent - Define se haverá mensagem de confirmação da remoção\n     *\n     * @returns - ID's dos registros removidos.\n     *\n    */\n    removeSelectedRecords(buffered = false, silent = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const selection = this.getSelectionInfo();\n            if (selection) {\n                if (selection.isAllRecords()) {\n                    throw new Error(\"Exclusão remota não implementada.\");\n                }\n                const records = (selection === null || selection === void 0 ? void 0 : selection.records) || [];\n                const recordIds = (selection === null || selection === void 0 ? void 0 : selection.recordIds) || [];\n                return this.removeRecords(recordIds, records, buffered, undefined, silent);\n            }\n            return Promise.resolve([]);\n        });\n    }\n    /**\n     *\n     * Efetua requisição para remoção dos registros.\n     *\n     * @param recordIds - Lista de IDs dos registros que serão removidos.\n     * @param cachedRecords - Dados dos registros que serão removidos.\n     * @param buffered - Se será utilizado buffer na solicitação.\n     * @param executionCtx - Contexto de execução da remoção do registro do DataUnit.\n     * @param silent - Define se haverá mensagem de confirmação da remoção\n     *\n     * @returns - ID's dos registros removidos.\n     *\n    */\n    removeRecords(recordIds, cachedRecords, buffered = false, executionCtx, silent = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (recordIds) {\n                if (buffered || !this.removeLoader) {\n                    this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                    this.dispatchAction(Action.RECORDS_REMOVED, { records: recordIds, cachedRecords, buffered: true }, executionCtx);\n                }\n                else {\n                    if (yield this.dispatchAction(Action.REMOVING_RECORDS, { silent }, executionCtx)) {\n                        return new Promise((resolve, fail) => {\n                            if (this.removeLoader) {\n                                this.removeLoader(this, recordIds).then(removedIds => {\n                                    const currentRecordsKeys = Array.from(getCurrentRecords(this._stateManager).keys());\n                                    const removedIndex = recordIds\n                                        .map(id => currentRecordsKeys.indexOf(id))\n                                        .filter(index => index > -1)\n                                        .sort((a, b) => a - b);\n                                    const nextIndex = Math.min(removedIndex.slice(-1)[0] + 1, currentRecordsKeys.length);\n                                    const selectionAfterRemove = currentRecordsKeys[nextIndex] ? [currentRecordsKeys[nextIndex]] : [];\n                                    this.dispatchAction(Action.RECORDS_REMOVED, { records: removedIds, cachedRecords, removedIndex, buffered: false, selectionAfterRemove }, executionCtx);\n                                    this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                                    resolve(removedIds);\n                                }).catch(error => {\n                                    this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                                    const { errorCode } = error;\n                                    fail(new ErrorException(\"Erro ao remover registros\", error, errorCode));\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n            return Promise.resolve(recordIds);\n        });\n    }\n    // API\n    /**\n     *\n     * Obtém o valor do campo em seu formato/tipo correto a partir de uma string.\n     *\n     * @param fieldName - Nome do campo que terá o tipo identificado para conversão.\n     * @param value - Texto que será convertido de acordo com o tipo identificado no campo.\n     *\n     * @returns - Valor convertido ou ele mesmo.\n     *\n    */\n    valueFromString(fieldName, value) {\n        const descriptor = this.getField(fieldName);\n        return descriptor ? convertType(descriptor.dataType, value) : value;\n    }\n    /**\n     *\n     * Converte o valor informado para texto de acordo com o tipo do campo informado.\n     *\n     * @param fieldName - Nome do campo utilizado para buscar o tipo de dado com o padrão de conversão para string.\n     * @param value - Valor a ser convertido.\n     *\n     * @returns - Valor informado convertido.\n     *\n    */\n    valueToString(fieldName, value) {\n        const descriptor = this.getField(fieldName);\n        return toString(descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType, value);\n    }\n    /**\n     *\n     * Formata o valor do campo considerando as informações do descriptor.\n     * Diferente do método \"valueToString\" que retorna o dado em valor textual,\n     * getFormattedValue retorna uma informação amigável ao usuário, geralmente\n     * usada na interface.\n     *\n     * @param fieldName - Nome do campo utilizado do qual se quer obter valor.\n     * @param value (opcional) - O valor a ser convertido. Caso omitido pega do registro selecionado.\n     *\n     * @returns - Valor formatado.\n     *\n    */\n    getFormattedValue(fieldName, value) {\n        const descriptor = this.getField(fieldName);\n        if (value == undefined) {\n            value = this.getFieldValue(fieldName);\n        }\n        else if (typeof value === \"string\" && (descriptor === null || descriptor === void 0 ? void 0 : descriptor.dataType) != DataType.TEXT) {\n            value = this.valueFromString(fieldName, value);\n        }\n        if (value == undefined) {\n            return \"\";\n        }\n        return getFormattedValue(value, descriptor);\n    }\n    /**\n     *\n     * Adiciona um interceptor correspondente a uma ação do DataUnit para fazer um processamento customizado.\n     *\n     * @param interceptor - Interceptor a ser adicionado.\n     *\n    */\n    addInterceptor(interceptor) {\n        this._interceptors.set(interceptor.interceptAction.toString(), interceptor);\n    }\n    /**\n     *\n     * Remove um interceptor da lista de interceptors.\n     *\n     * @param interceptor - Interceptor a ser removido.\n     *\n    */\n    removeInterceptor(interceptor) {\n        this._interceptors.delete(interceptor.interceptAction.toString());\n    }\n    /**\n     *\n     * Adiciona um FilterProvider.\n     *\n     * @param provider - FilterProvider que será adicionado.\n     *\n    */\n    addFilterProvider(provider) {\n        this._filterProviders.set(this.getFielterProviderKey(provider), provider);\n    }\n    /**\n     *\n     * Remove um FilterProvider.\n     *\n     * @param provider - FilterProvider que será removido.\n     *\n    */\n    removeFilterProvider(provider) {\n        return this._filterProviders.delete(this.getFielterProviderKey(provider));\n    }\n    /**\n     *\n     * Obtém informações de paginação dos registros.\n     *\n     * @returns - Informações da paginação de registros.\n    */\n    getPaginationInfo() {\n        return getPaginationInfo(this._stateManager);\n    }\n    /**\n     *\n     * Obtém informações de paginação dos registros.\n     *\n     * @returns - Informações da paginação de registros.\n    */\n    updatePagination(info) {\n        return this.dispatchAction(Action.PAGINATION_UPDATED, info, undefined);\n    }\n    /**\n     *\n     * Define a lógica de ordenação dos registros.\n     *\n     * @param provider - Objeto usado para definir a propriedade sortingProvider da instância da classe.\n     *\n     */\n    set sortingProvider(provider) {\n        this._sortingProvider = provider;\n    }\n    /**\n     *\n     * Define a ordenação padrão.\n     *\n     * @param sorting - Ordenação padrão.\n     *\n     */\n    set defaultSorting(sorting) {\n        this._defaultSorting = sorting;\n    }\n    /**\n     *\n     * Define a propriedade metadata da instância da classe com um novo valor e chama o método dispatchAction para notificar os observers da aplicação sobre a mudança.\n     *\n     */\n    set metadata(md) {\n        this.dispatchAction(Action.METADATA_LOADED, md, undefined);\n    }\n    /**\n     *\n     * Obtém os metadados do DataUnit.\n     *\n     */\n    get metadata() {\n        return getMetadata(this._stateManager);\n    }\n    /**\n    *\n    * Obtém informações da ligação para um DataUnit filho.\n    *\n    * @param name - Nome do DataUnit que se deseja.\n    *\n    * @returns - As informações sobre a ligação solicitada. Pode retornar undefined.\n    *\n    */\n    getChildInfo(name) {\n        var _a;\n        const children = (_a = this.metadata) === null || _a === void 0 ? void 0 : _a.children;\n        if (children == undefined) {\n            return;\n        }\n        return children.find(child => child.name === name);\n    }\n    /**\n     *\n     * Define a propriedade records da instância da classe com um novo valor e chama o método dispatchAction para notificar os observers da aplicação sobre a mudança.\n     *\n     */\n    set records(records) {\n        const paginationInfo = this.getPaginationInfo();\n        this.dispatchAction(Action.DATA_LOADED, { records, paginationInfo }, undefined);\n    }\n    /**\n     *\n     * Obtém todos os registros atuais.\n     *\n     * @returns - Todos os registros atuais.\n     *\n     */\n    get records() {\n        const records = getCurrentRecords(this._stateManager);\n        return records ? Array.from(records.values()) : [];\n    }\n    /**\n     *\n     * Define a quantidade de registros que será exibido por página.\n     *\n     * @param size - Quantidade de registros que será exibido por página.\n     *\n     */\n    set pageSize(size) {\n        this._pageSize = size;\n    }\n    /**\n     *\n     * Obtém a quantidade de registros que está sendo exibido por página.\n     *\n     * @returns - Quantidade de registros exibidos por página.\n     *\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     *\n     * Obtém os registros modificados e ainda não salvos no DataUnit.\n     *\n     * @returns - Lista dos registros em edição.\n     *\n     */\n    getModifiedRecords() {\n        const modified = getModifiedRecords(this._stateManager);\n        return modified || [];\n    }\n    /**\n     *\n     * Obtém os registros adicionados no DataUnit.\n     *\n     * @returns - Lista dos registros adicionados.\n     *\n     */\n    getAddedRecords() {\n        return getAddedRecords(this._stateManager);\n    }\n    /**\n     *\n     * Obtém metadados de um campo específico.\n     *\n     * @param fieldName - Identificador do campo.\n     *\n     * @returns - Metadados do campo informado.\n     */\n    getField(fieldName) {\n        return getField(this._stateManager, fieldName);\n    }\n    /**\n     *\n     * Adiciona um novo registro.\n     *\n     * @param executionCtx - Contexto de execução da inserção do dado no DataUnit.\n     *\n    */\n    addRecord(executionCtx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dispatchAction(Action.RECORDS_ADDED, prepareAddedRecordId(this._stateManager, [{}], this.getParentRecordId()), executionCtx);\n        });\n    }\n    /**\n     *\n     * Efetua a cópia do registro selecionado.\n     *\n     * @param executionCtx - Contexto de execução da cópia do dado do DataUnit.\n     *\n    */\n    copySelected(executionCtx) {\n        const selectionInfo = this.getSelectionInfo();\n        if (selectionInfo) {\n            if (selectionInfo.isAllRecords()) {\n                throw new Error(\"Erro interno: Impossível copiar os registros selecionados pois a seleção atual é virtual.\");\n            }\n            const selectedRecords = selectionInfo.records;\n            if (selectedRecords) {\n                this.dispatchAction(Action.RECORDS_COPIED, prepareCopiedRecord(this._stateManager, selectedRecords, this.getParentRecordId()), executionCtx);\n            }\n        }\n    }\n    getRecordsByDataUnit(records) {\n        const recordsMap = new Map();\n        records.forEach(record => {\n            let { __owner__dataunit__name__: ownerDataUnitName } = record;\n            if (!ownerDataUnitName) {\n                ownerDataUnitName = this.name;\n            }\n            let changes = recordsMap.get(ownerDataUnitName);\n            if (!changes) {\n                changes = [];\n                recordsMap.set(ownerDataUnitName, changes);\n            }\n            changes.push(record);\n        });\n        return recordsMap;\n    }\n    getParentRecordId() {\n        var _a;\n        const parentRecord = (_a = this._parentDataUnit) === null || _a === void 0 ? void 0 : _a.getSelectedRecord();\n        return parentRecord === null || parentRecord === void 0 ? void 0 : parentRecord.__record__id__;\n    }\n    /**\n     *\n     * Retorna se a alteração no campo já foi concluída ou se ainda está incompleta.\n     *\n     * @param fieldName - Identificador do campo a ser verificado.\n     *\n     * @returns - Verdadeiro se ainda está pendente.\n     *\n    */\n    waitingForChange(fieldName) {\n        return isWaiting(this._stateManager, fieldName);\n    }\n    /**\n     *\n     * Obtém valor do campo desejado.\n     *\n     * @param fieldName - Identificador do campo a ser buscado.\n     *\n     * @returns - Valor do campo.\n     *\n    */\n    getFieldValue(fieldName) {\n        return getFieldValue(this._stateManager, fieldName);\n    }\n    /**\n     *\n     *  Insere valor no campo desejado.\n     *\n     * @param fieldName -Identificador do campo a ser modificado.\n     * @param newValue - Valor a ser inserido no campo.\n     * @param records - Indica quais registros foram afetados pela alteração no valor do campo.\n     * @param options - Configurações do evento\n     * @returns - Promise que será resolvida quando o novo valor for persistido no state.\n     *\n     */\n    setFieldValue(fieldName, newValue, records, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const noRecordSelected = !this.hasNewRecord() && !this.getSelectedRecord();\n            const suppressCreateNewRecord = options === null || options === void 0 ? void 0 : options.suppressCreateNewRecord;\n            if (noRecordSelected && suppressCreateNewRecord)\n                return Promise.resolve(false);\n            if (noRecordSelected)\n                yield this.addRecord();\n            const typedValue = this.validateAndTypeValue(fieldName, newValue);\n            const currentValue = this.getFieldValue(fieldName);\n            if (this.areEquivalentValues(newValue, currentValue, typedValue)) {\n                return Promise.resolve(false);\n            }\n            if (newValue instanceof Promise) {\n                const promise = new Promise(accept => {\n                    newValue.then(resolvedValue => {\n                        this.dispatchAction(Action.DATA_RESOLVED, { [fieldName]: resolvedValue, records }, undefined);\n                        accept(this.setFieldValue(fieldName, resolvedValue, records, options));\n                    });\n                });\n                this._savingLockers.push(promise);\n                return promise;\n            }\n            if (this.isMultipleEdition || currentValue !== typedValue) {\n                const promise = this.dispatchAction(Action.DATA_CHANGED, { [fieldName]: typedValue, records }, undefined, options);\n                this._savingLockers.push(promise);\n                return promise;\n            }\n            return Promise.resolve(false);\n        });\n    }\n    areEquivalentValues(newValue, currentValue, typedValue) {\n        return !(newValue instanceof Promise)\n            && ObjectUtils.hasEquivalentProps(currentValue, typedValue)\n            && !this.isMultipleEdition;\n    }\n    /**\n     *\n     *  Marca campos como inválidos.\n     *\n     * @param fieldName - Nome do campo inválido.\n     * @param message - Mensagem descrevendo o motivo da invalidade.\n     * @param recordId - Indica qual registro está com o campo inválido.\n     *\n    */\n    setInvalidField(fieldName, message, recordId) {\n        this.dispatchAction(Action.FIELD_INVALIDATED, { fieldName, message, recordId }, undefined);\n    }\n    /**\n     *\n     *  Cancela o saving exibindo os campos invalidos.\n     *\n     * @param filds - Lista dos campos\n     * @param recordId - Indica qual registro está com os campos inválido.\n     *\n    */\n    savingCanceled(fields, recordId) {\n        this.dispatchAction(Action.SAVING_CANCELED, { fields, recordId }, undefined);\n    }\n    /**\n     *\n     *  Limpa campos inválidos.\n     *\n     * @param recordId - Indica em qual registro o campo não está mais inválido.\n     * @param fieldName - Nome do campo. Caso omitido, todos os campos serão limpos.\n     *\n    */\n    clearInvalid(recordId, fieldName) {\n        this.dispatchAction(Action.INVALIDATE_CLEAN, { fieldName, recordId }, undefined);\n    }\n    /**\n     *\n     *  Obtém a mensagem de campo inválido para determinado registro.\n     *\n     * @param recordId - Identificador do registro.\n     * @param fieldName - Nome do campo.\n     *\n    */\n    getInvalidMessage(recordId, fieldName) {\n        return getInvalidFieldMessage(this._stateManager, fieldName, recordId);\n    }\n    /**\n     *\n     *  Inicia alteração no campo.\n     *\n     * @param fieldName - Identificador do campo a ser modificado.\n     * @param waitingChange - Informa que uma mudança irá iniciar.\n     *\n    */\n    startChange(fieldName, waitingChange) {\n        this.dispatchAction(Action.CHANGING_DATA, { [fieldName]: waitingChange }, undefined);\n    }\n    /**\n     *\n     *  Cancela o início de uma alteração no campo.\n     *\n     * @param fieldName - Identificador do campo.\n     *\n    */\n    cancelWaitingChange(fieldName) {\n        this.dispatchAction(Action.WAITING_CHANGE_CANCELED, { fieldName }, undefined);\n    }\n    /**\n     * Retorna se existe alterações pendentes.\n     * @returns Verdadeiro se existir pendências de modificações.\n    */\n    hasWaitingChanges() {\n        const waitingChanges = getWaitingChanges(this._stateManager);\n        return waitingChanges ? !!waitingChanges.size : false;\n    }\n    /**\n     *\n     * Seleciona o primeiro registro.\n     *\n     * @param executionCtx - Contexto de execução da seleção do registro do DataUnit.\n     *\n    */\n    selectFirst(executionCtx) {\n        if (this.records.length > 0) {\n            this.setSelectionByIndex([0], executionCtx);\n        }\n    }\n    /**\n     *\n     * Seleciona o último registro.\n     *\n     * @param executionCtx - Contexto de execução da seleção do registro do DataUnit.\n     *\n    */\n    selectLast(executionCtx) {\n        if (this.records.length > 0) {\n            this.setSelectionByIndex([this.records.length - 1], executionCtx);\n        }\n    }\n    /**\n     *\n     * Seleciona múltiplos registros por índice.\n     *\n     * @param selection - Índices desejados para a seleção.\n     * @param executionCtx - Contexto de execução da seleção do registro do DataUnit.\n     *\n    */\n    setSelectionByIndex(selection, executionCtx) {\n        this.dispatchAction(Action.SELECTION_CHANGED, { type: \"index\", selection }, executionCtx);\n    }\n    /**\n     *\n     * Seleciona múltiplos registros por ID ou todos os registros (multipágina) .\n     *\n     * @param selection - IDs para selecionar ou o modo de seleção completo.\n     * @param executionCtx - Contexto de execução da seleção dos registros do DataUnit.\n     *\n     *\n    */\n    setSelection(selection, executionCtx) {\n        return new Promise(resolve => {\n            this.dispatchAction(Action.SELECTION_CHANGED, { type: \"id\", selection }, executionCtx)\n                .then(() => resolve(this.getSelectionInfo()));\n        });\n    }\n    /**\n     *\n     * Limpa a seleção.\n     *\n     * @param executionCtx - Contexto de execução da seleção dos registros do DataUnit.\n     *\n    */\n    clearSelection(executionCtx) {\n        this.setSelection([], executionCtx);\n    }\n    /**\n     *\n     * Atualiza a seleção dos registros atuais.\n     *\n     * @param selection - IDs dos registros selecionados no snapshot atual\n     * @param executionCtx - Contexto de execução da seleção dos registros do DataUnit.\n     * @returns - Informações sobre a seleção.\n    */\n    updatePageSelection(selection, executionCtx) {\n        if (!selection)\n            return Promise.resolve(this.getSelectionInfo());\n        return new Promise(resolve => {\n            const newSelection = new Set(selection);\n            this.dispatchAction(Action.SELECTION_CHANGED, { type: \"id\", selection: Array.from(newSelection) }, executionCtx)\n                .then(() => resolve(this.getSelectionInfo()));\n        });\n    }\n    updatePageSelectionAll(addRecords) {\n        return new Promise(resolve => {\n            const newSelection = new Set();\n            const cachedSelection = getSelection(this._stateManager);\n            cachedSelection.forEach(item => newSelection.add(item));\n            const recordsIds = this.records.map(r => r.__record__id__);\n            recordsIds.forEach(id => addRecords ? newSelection.add(id) : newSelection.delete(id));\n            this.dispatchAction(Action.SELECTION_CHANGED, { type: \"id\", selection: Array.from(newSelection) })\n                .then(() => resolve(this.getSelectionInfo()));\n        });\n    }\n    /**\n     * Seleciona todos os registros da página.\n     *\n     * @returns - Informações sobre a seleção.\n     */\n    selectAllRecords() {\n        return this.updatePageSelectionAll(true);\n    }\n    /**\n     * Desseleciona todos os registros da página.\n     *\n     * @returns - Informações sobre a seleção.\n     */\n    unSelectAllRecords() {\n        return this.updatePageSelectionAll(false);\n    }\n    /**\n     *\n     * Obtém informações sobre a seleção atual.\n     *\n     * @returns - Objeto com informações como registros selecionados e seleção por critério.\n     *\n     **/\n    getSelectionInfo() {\n        var _a;\n        const selectionInfo = getSelectionInfo(this._stateManager);\n        selectionInfo.getAllRecords = () => {\n            var _a, _b;\n            let records = (_b = (_a = this.allRecordsLoader) === null || _a === void 0 ? void 0 : _a.call(this, this)) !== null && _b !== void 0 ? _b : [];\n            if (selectionInfo.sort != undefined && selectionInfo.sort.length > 0) {\n                const sortingFunction = SortingUtils.getSortingFunction(this, selectionInfo.sort);\n                records = [...records].sort(sortingFunction);\n            }\n            return records;\n        };\n        if (selectionInfo.sort != undefined && selectionInfo.sort.length > 0) {\n            const sortingFunction = SortingUtils.getSortingFunction(this, selectionInfo.sort);\n            (_a = selectionInfo.records) === null || _a === void 0 ? void 0 : _a.sort(sortingFunction);\n        }\n        return selectionInfo;\n    }\n    /**\n     *\n     * Retorna apenas um registro selecionado no Dataunit\n     *\n     * @returns - Registro selecionado.\n     *\n    */\n    getSelectedRecord() {\n        return getSelectedRecord(this._stateManager);\n    }\n    /**\n     * Retorna o DataUnit pai\n     *\n     * @returns DataUnit pai ou undefined\n     */\n    getParentDataUnit() {\n        return this._parentDataUnit;\n    }\n    /**\n     *\n     * Limpa todos os registros do DataUnit\n     *\n     *\n    */\n    clearDataUnit() {\n        this.records = [];\n    }\n    /**\n     *\n     * Seleciona o próximo registro.\n     *\n     * @param executionCtx - Contexto de execução da seleção do registro do DataUnit.\n     *\n     *\n    */\n    nextRecord(executionCtx) {\n        if (!hasNext(this._stateManager)) {\n            if (hasMorePages(this._stateManager)) {\n                this.nextPage({\n                    before: act => {\n                        if (executionCtx && executionCtx.before) {\n                            act = executionCtx.before(act);\n                        }\n                        return act;\n                    },\n                    after: act => {\n                        this.selectFirst(executionCtx);\n                    }\n                });\n            }\n        }\n        else {\n            this.dispatchAction(Action.NEXT_SELECTED, undefined, executionCtx);\n        }\n    }\n    /**\n     *\n     * Seleciona o registro anterior.\n     *\n     * @param executionCtx - Contexto de execução da seleção do registro do DataUnit.\n     *\n    */\n    previousRecord(executionCtx) {\n        if (!hasPrevious(this._stateManager)) {\n            if (hasPreviousPages(this._stateManager)) {\n                this.previousPage({\n                    before: act => {\n                        if (executionCtx && executionCtx.before) {\n                            act = executionCtx.before(act);\n                        }\n                        return act;\n                    },\n                    after: act => {\n                        this.selectLast(executionCtx);\n                    }\n                });\n            }\n        }\n        else {\n            this.dispatchAction(Action.PREVIOUS_SELECTED, undefined, executionCtx);\n        }\n    }\n    /**\n     *\n     * Cancela edição do registro atual.\n     *\n     * @param executionCtx - Contexto de execução do cancelamento da seleção dos registros.\n     * @param silent: Define se haverá mensagem de confirmação do cancelamento\n     *\n    */\n    cancelEdition(executionCtx, fromParent, silent = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cancelledAction = yield this.dispatchAction(Action.EDITION_CANCELED, { fromParent, silent }, executionCtx);\n            for (const [, dataUnit] of this._childByName) {\n                if (dataUnit.isDirty()) {\n                    dataUnit.cancelEdition(undefined, true, silent);\n                }\n            }\n            return Promise.resolve(cancelledAction);\n        });\n    }\n    /**\n     *\n     * Retorna se existe algum tipo de alteração pendente.\n     *\n     * @param ignoreChildren: Define se deverá ignorar alterações pendentes no DataUnit filho.\n     * @returns Verdadeiro se existir alterações pendentes.\n     *\n    */\n    isDirty(ignoreChildren) {\n        if (ignoreChildren)\n            return isDirty(this._stateManager);\n        return isDirty(this._stateManager) || this.childrenIsDirty();\n    }\n    /**\n     *\n     * Retorna se existe alterações pendentes no DataUnit pai.\n     *\n     * @returns Verdadeiro se existir alterações pendentes e Falso caso não exista alterações ou não exista DataUnit pai.\n     *\n     */\n    isParentDirty() {\n        return this._parentDataUnit ? this._parentDataUnit.isDirty(true) : false;\n    }\n    /**\n     *\n     * Retorna se existe algum DataUnit detail com alterações pendentes.\n     *\n     * @returns Verdadeiro se existir alterações pendentes em algum DataUnit detail.\n     *\n    */\n    childrenIsDirty() {\n        for (let [key, dataUnitChild] of this._childByName) {\n            if (dataUnitChild.isDirty())\n                return true;\n        }\n        return false;\n    }\n    /**\n     *\n     * Retorna se existe algum registro em modo de edição.\n     *\n     * @returns Verdadeiro se existir alterações de registros pendentes.\n     *\n    */\n    hasDirtyRecords() {\n        return hasDirtyRecords(this._stateManager);\n    }\n    /**\n     *\n     * Retorna se existir uma pagina seguinte a atual na paginação.\n     *\n     * @returns Verdadeiro se existir uma próxima página.\n     *\n    */\n    hasNext() {\n        let result = hasNext(this._stateManager);\n        if (!result) {\n            result = hasMorePages(this._stateManager);\n        }\n        return result;\n    }\n    /**\n     *\n     * Retorna se existe uma página anterior a atual na paginação.\n     *\n     * @returns Verdadeiro se existir uma página anterior.\n     *\n    */\n    hasPrevious() {\n        let result = hasPrevious(this._stateManager);\n        if (!result) {\n            result = hasPreviousPages(this._stateManager);\n        }\n        return result;\n    }\n    /**\n     *\n     * Verifica se um registro é proveniente de inclusão.\n     *\n     * @param recordId - O id do registro a ser verificado.\n     * @returns Verdadeiro se o id solicitado é de um registro novo.\n     *\n    */\n    isNewRecord(recordId) {\n        const newRecords = getAddedRecords(this._stateManager);\n        if (newRecords && newRecords.length > 0) {\n            const record = newRecords.find(newRecord => newRecord.__record__id__ === recordId);\n            return record != undefined;\n        }\n        return false;\n    }\n    /**\n     *\n     * Retorna se existe pelo menos um registro novo.\n     *\n     * @returns Verdadeiro se algum registro foi adicionado.\n     *\n    */\n    hasNewRecord() {\n        const newRecords = getAddedRecords(this._stateManager);\n        return newRecords && newRecords.length > 0;\n    }\n    /**\n     *\n     * Retorna se existe pelo menos um registro novo.\n     *\n     * @returns Verdadeiro se algum registro foi adicionado.\n     *\n    */\n    hasCopiedRecord() {\n        const newRecords = getAddedRecords(this._stateManager);\n        if (newRecords == undefined) {\n            return false;\n        }\n        for (let record of newRecords) {\n            if (record['__record__source__id__'] != undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     *\n     * Retorna se a informação do estado anterior está salva, permitindo desfazer a ação.\n     *\n     * @returns Verdadeiro se for possível desfazer a ação.\n     *\n    */\n    canUndo() {\n        return canUndo(this._stateManager);\n    }\n    /**\n     *\n     * Retorna se a informação do estado futuro está salva, permitindo refazer a ação.\n     *\n     * @returns Verdadeiro se for possível refazer a ação.\n     *\n    */\n    canRedo() {\n        return canRedo(this._stateManager);\n    }\n    /**\n     *\n     * Desfaz a última ação.\n     *\n     * @param executionCtx - Contexto de execução de desfazer a última ação.\n     *\n     *\n    */\n    undo(executionCtx) {\n        this.dispatchAction(Action.CHANGE_UNDONE, undefined, executionCtx);\n    }\n    /**\n     *\n     * Refaz a última ação.\n     *\n     * @param executionCtx - Contexto de execução de refazer a última ação.\n     *\n    */\n    redo(executionCtx) {\n        this.dispatchAction(Action.CHANGE_REDONE, undefined, executionCtx);\n    }\n    /**\n     *\n     * Obtém a representação textual do DataUnit, nesse caso, o nome do DataUnit.\n     *\n     * @returns - Valor contido na propriedade name.\n     *\n    */\n    toString() {\n        return this.name;\n    }\n    // Actions / State manager\n    /**\n     *\n     * Lança ação do DataUnit para que sejam processadas.\n     *\n     * @param actionType - Tipo de ação que será executada.\n     * @param payload - Dados que serão processados na ação.\n     * @param executionCtx - Contexto de execução de lançar a ação que será executada.\n     *\n     * @returns - Verdadeiro se ação iniciada.\n     *\n    */\n    dispatchAction(actionType, payload, executionCtx, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let action = new DataUnitAction(actionType, payload);\n                if (executionCtx && executionCtx.before) {\n                    action = executionCtx.before(action);\n                }\n                if (action && this._interceptors && this._interceptors.size > 0) {\n                    action = yield this.intercept(action, this._interceptors.values());\n                }\n                if (action) {\n                    this.doDispatchAction(action, options);\n                    if (executionCtx && executionCtx.after) {\n                        executionCtx.after(action);\n                    }\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n            }));\n        });\n    }\n    /**\n     *\n     * Notifica os interceptors de que uma ação foi executada, para que cada interceptor possa fazer sua respectiva tratativa dos dados.\n     *\n     * @param action - Ação que foi executada.\n     * @param interceptors - Interceptors que serão notificados.\n     *\n     * @returns - Ação executada no DataUnit.\n     *\n    */\n    intercept(action, interceptors) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let ite;\n                while (action && !(ite = interceptors.next()).done) {\n                    action = yield ite.value.interceptAction(action);\n                }\n                resolve(action);\n            }));\n        });\n    }\n    /**\n     *\n     * Processa as ações no DataUnit e notifica os observers.\n     *\n     * @param action - Ações em execução no DataUnit.\n     *\n    */\n    doDispatchAction(action, options = {}) {\n        var _a;\n        this._stateManager.process(action);\n        (_a = this === null || this === void 0 ? void 0 : this._parentDataUnit) === null || _a === void 0 ? void 0 : _a.dispatchAction(Action.CHILD_CHANGED, { srcAction: action, srcDataUnit: this });\n        this._observers.forEach(f => {\n            //if some observer throws exceptions, should be continued\n            try {\n                f(action, options);\n            }\n            catch (e) {\n                console.warn(\"[DataUnit] error while call observer\", e);\n            }\n        });\n    }\n    /**\n     *\n     * Cria um dataunit filho.\n     *\n     * @param name - Nome do dataunit filho.\n     *\n    */\n    getChildDataunit(name) {\n        const detail = new DataUnit(name, this);\n        this._childByName.set(name, detail);\n        return detail;\n    }\n    /**\n     *\n     * Remove um dataunit filho.\n     *\n     * @param name - Nome do dataunit filho.\n     *\n    */\n    removeChildDataunit(name) {\n        this._childByName.delete(name);\n    }\n    /**\n     *\n     * Adiciona um novo observer no DataUnit.\n     * Ela vai ser chamada sempre que uma ação for despachada (dispatchAction()).\n     *\n     * @param observer - Função que recebe como parâmetro as ações que serão monitoradas.\n     * @param uuid - Identificador do observer. Quando não informado, será gerado um identificador aleatório.\n    */\n    subscribe(observer, uuid) {\n        if (uuid) {\n            this._observers.set(uuid, observer);\n        }\n        else {\n            uuid = StringUtils.generateUUID();\n            this._observers.set(uuid, observer);\n        }\n        return uuid;\n    }\n    /**\n     *\n     * Remove um observer existente.\n     *\n     * @param observer - Observer que se deseja remover.\n     * @param uuid - Identificador do observer. Quando não informado o delete removera com base no equals do observer.\n    */\n    unsubscribe(observer, uuid) {\n        if (uuid) {\n            this._observers.delete(uuid);\n        }\n        else {\n            this._observers.forEach((valor, chave) => {\n                if (valor == observer) {\n                    this._observers.delete(chave);\n                }\n            });\n        }\n    }\n    /**\n     *\n     * Recarrega registro selecionado com dados atualizados do servidor.\n     *\n     * @returns - Dados atualizados do registro selecionado.\n     *\n    */\n    reloadCurrentRecord() {\n        return new Promise((resolve, fail) => __awaiter(this, void 0, void 0, function* () {\n            const selection = getSelection(this._stateManager);\n            yield this.dispatchAction(Action.LOADING_RECORD, selection);\n            if (!this.recordLoader || !this.dataLoader) {\n                yield this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                resolve([]);\n                return;\n            }\n            this.recordLoader(this, selection).then((response) => __awaiter(this, void 0, void 0, function* () {\n                yield this.dispatchAction(Action.RECORD_LOADED, response);\n                yield this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                resolve(response);\n            })).catch((cause) => __awaiter(this, void 0, void 0, function* () {\n                yield this.dispatchAction(Action.LOADING_PROPERTIES_CLEANED);\n                const { errorCode } = cause;\n                fail(new ErrorException(\"Erro ao recarregar registro\", cause, errorCode));\n            }));\n        }));\n    }\n    /**\n     *\n     * Obtém a estrutura de ordenação das colunas dos dados.\n     *\n     * @returns - Lista dos ordenáveis por prioridade.\n     *\n    */\n    getSort() {\n        return this._sortingProvider ? this._sortingProvider.getSort(this._name, this._defaultSorting) : this._defaultSorting;\n    }\n    /**\n     *\n     * Obtém todos os filtros de dados.\n     *\n     * @returns - Lista de filtros.\n     *\n    */\n    getFilters() {\n        let filters = undefined;\n        this._filterProviders.forEach(p => {\n            const f = p.getFilter(this.name);\n            if (f) {\n                filters = (filters || []).concat(f);\n            }\n        });\n        return filters;\n    }\n    /**\n     *\n     * Obtém as informações da última carga de dados.\n     *\n     * @returns - As informações de filtro e paginação.\n     *\n    */\n    getLastLoadRequest() {\n        return getCurrentRequest(this._stateManager);\n    }\n    /**\n     *\n     * Obtém os filtros aplicados.\n     *\n     * @returns - Lista de filtros.\n     *\n    */\n    getAppliedFilters() {\n        const { filters } = getCurrentRequest(this._stateManager) || {};\n        return filters;\n    }\n    /**\n     *\n     * Habilita um campo do DataUnit\n     * @param fieldName - nome do campo para ser habilitado.\n     *\n    */\n    enableField(fieldName) {\n        const fieldDescriptor = this.getField(fieldName);\n        if ((fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.readOnly) === true) {\n            fieldDescriptor.readOnly = false;\n            this.metadata = Object.assign({}, this.metadata);\n        }\n    }\n    /**\n     *\n     * Desabilita um campo do DataUnit\n     * @param fieldName - nome do campo para ficar desabilitado.\n     *\n    */\n    disableField(fieldName) {\n        const fieldDescriptor = this.getField(fieldName);\n        if ((fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.readOnly) === false) {\n            fieldDescriptor.readOnly = true;\n            this.metadata = Object.assign({}, this.metadata);\n        }\n    }\n    /**\n     *\n     * Deixa um campo do DataUnit invisível\n     * @param fieldName - nome do campo para ficar invisível.\n     *\n    */\n    hideField(fieldName, options) {\n        const fieldDescriptor = this.getField(fieldName);\n        if ((fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.visible) === true) {\n            fieldDescriptor.visible = false;\n            fieldDescriptor.properties = Object.assign(Object.assign({}, fieldDescriptor.properties), { visibleOnConfig: options === null || options === void 0 ? void 0 : options.visibleOnConfig });\n            this.metadata = Object.assign({}, this.metadata);\n        }\n    }\n    /**\n     *\n     * Deixa um campo do DataUnit visível\n     * @param fieldName - nome do campo para ficar visível.\n     *\n    */\n    showField(fieldName) {\n        const fieldDescriptor = this.getField(fieldName);\n        if ((fieldDescriptor === null || fieldDescriptor === void 0 ? void 0 : fieldDescriptor.visible) === false) {\n            fieldDescriptor.visible = true;\n            this.metadata = Object.assign({}, this.metadata);\n        }\n    }\n    /**\n     *\n     * Obtém todos os registros selecionados.\n     *\n     * @returns - Lista de registros selecionados.\n     *\n     * @deprecated - Utilize o método `getSelectionInfo()` para obter os registros selecionados.\n     * Devido a seleção virtual baseada em critérios e ordenação (ALL_RECORDS), esse\n     * método foi descontinuado e pode retornar erros no caso da seleção virtual.\n     *\n    */\n    getSelectedRecords() {\n        console.warn(\"DataUnit: O método `getSelectedRecords` foi descontinuado. Use o método `getSelectionInfo`.\");\n        const selection = this.getSelectionInfo();\n        if (selection != undefined && selection.isAllRecords()) {\n            throw new Error(\"Erro interno: Impossível retornar os registros selecionados. A seleção atual é virtual. Use o método `getSelectionInfo`.\");\n        }\n        if (selection) {\n            return selection.records;\n        }\n    }\n    /**\n     *\n     * Obtém ids dos registros selecionados.\n     *\n     * @returns - Lista com id de todos os registros selecionados.\n     *\n     * @deprecated - Utilize o método `getSelectionInfo()` para obter os registros selecionados.\n     * Devido a seleção virtual baseada em critérios e ordenação (ALL_RECORDS), esse\n     * método foi descontinuado e pode retornar erros no caso da seleção virtual.\n     *\n    */\n    getSelection() {\n        console.warn(\"DataUnit: O método `getSelection` foi descontinuado. Use o método `getSelectionInfo`.\");\n        const selection = this.getSelectionInfo();\n        if (selection == undefined) {\n            return [];\n        }\n        if (selection.isAllRecords()) {\n            throw new Error(\"Erro interno: Impossível retornar os registros selecionados. A seleção atual é virtual. Use o método `getSelectionInfo`.\");\n        }\n        return selection === null || selection === void 0 ? void 0 : selection.recordIds;\n    }\n    /**\n     * Adiciona um campo stand-alone ao dataUnit.\n     *\n     * @deprecated - metodo depreciado, utilizar o metodo addField\n     */\n    addStandAloneField() {\n        console.warn(\"metodo depreciado, para adicionar um campo standAlone, utilizar o metodo addField\");\n    }\n    /**\n     * Adiciona um campo stand-alone ao dataUnit.\n     *\n     * @param field - Campo a ser adicionado.\n     */\n    addField(field) {\n        const standAloneField = Object.assign(Object.assign({}, field), { standAlone: true });\n        this.metadata = Object.assign(Object.assign({}, this.metadata), { fields: [...this.metadata.fields, standAloneField] });\n    }\n    /**\n     * Adiciona um locker para impedir o carregamento dos registros do dataUnit.\n     * @returns Retorna uma função responsável por liberar o lock adicionado.\n     */\n    addLoadingLocker() {\n        let loadingLockerResolver;\n        this._loadingLockers.push(new Promise((resolve) => {\n            loadingLockerResolver = resolve;\n        }));\n        return loadingLockerResolver || Promise.resolve;\n    }\n    set allowReleaseCallbacks(allow) {\n        this._allowReleaseCallbacks = allow;\n    }\n    /**\n     * Adiciona um mapeamento de origem dos dados de um determinado campo\n     */\n    addSourceFieldValue(sourceFieldName, targetFieldName) {\n        this._fieldSourceValue.set(sourceFieldName, targetFieldName);\n    }\n    /**\n    * Retornar o campo de origem dos dados caso exista mapeamento\n    */\n    getSourceFieldValue(targetFieldName) {\n        return this._fieldSourceValue.get(targetFieldName);\n    }\n    processLoadingLockers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._loadingLockers.length) {\n                yield Promise.all(this._loadingLockers);\n                this._loadingLockers = [];\n            }\n        });\n    }\n}\nDataUnit.CHANGING_PAGE_LOADING_SOURCE = \"CHANGING_PAGE_LOADING_SOURCE\";\nDataUnit.ALL_RECORDS_SELECTION_SOURCE = \"ALL_RECORDS_SELECTION_SOURCE\";\nDataUnit.DEFAULT_DATAUNIT_NAME = \"dataunit\";\nexport var ChangeOperation;\n(function (ChangeOperation) {\n    ChangeOperation[\"INSERT\"] = \"INSERT\";\n    ChangeOperation[\"COPY\"] = \"COPY\";\n    ChangeOperation[\"UPDATE\"] = \"UPDATE\";\n    ChangeOperation[\"DELETE\"] = \"DELETE\";\n})(ChangeOperation || (ChangeOperation = {}));\n/***\n * `Change`: Dados que representam uma alteração.\n */\nexport class Change {\n    constructor(dataUnit, record, updates, operation, sourceId) {\n        this.dataUnit = dataUnit;\n        this.record = record;\n        this.sourceId = sourceId;\n        this.updatingFields = updates;\n        this._operation = operation;\n    }\n    /**\n     *\n     * Obtém o tipo de operação que está sendo realizada.\n     *\n     * @returns - Ação que está sendo executada.\n     *\n     */\n    get operation() {\n        return this._operation.toString();\n    }\n    /**\n     *\n     * Retorna se o DataUnit está em uma operação de inserção.\n     *\n     * @returns - Verdadeiro se a operação for de inserção.\n     *\n     */\n    isInsert() {\n        return this._operation === ChangeOperation.INSERT;\n    }\n    /**\n     *\n     * Retorna se o DataUnit está em uma operação de cópia.\n     *\n     * @returns - Verdadeiro se a operação for de cópia.\n     *\n     */\n    isCopy() {\n        return this._operation === ChangeOperation.COPY;\n    }\n    /**\n     *\n     * Retorna se o DataUnit está em uma operação de deleção.\n     *\n     * @returns - Verdadeiro se a operação for de deleção.\n     *\n     */\n    isDelete() {\n        return this._operation === ChangeOperation.DELETE;\n    }\n    /**\n     *\n     * Retorna se o DataUnit está em uma operação de atualização.\n     *\n     * @returns - Verdadeiro se a operação for de atualização.\n     *\n     */\n    isUpdate() {\n        return this._operation === ChangeOperation.UPDATE;\n    }\n}\nexport var SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"ALL_RECORDS\"] = \"ALL_RECORDS\";\n    SelectionMode[\"SOME_RECORDS\"] = \"SOME_RECORDS\";\n})(SelectionMode || (SelectionMode = {}));\nexport class SelectionInfo {\n    constructor(records, mode = SelectionMode.SOME_RECORDS, total, filters, sort) {\n        this._records = records;\n        this._total = total;\n        this.mode = mode;\n        this.filters = filters;\n        this.sort = sort;\n    }\n    get records() {\n        if (this.isAllRecords()) {\n            if (this.getAllRecords != undefined) {\n                return this.getAllRecords();\n            }\n            throw new Error(\"Erro interno: Impossível retornar os registros selecionados numa seleção virtual.\");\n        }\n        return this._records;\n    }\n    get recordIds() {\n        const records = this.records;\n        if (records == undefined) {\n            return undefined;\n        }\n        return records.map(record => record.__record__id__);\n    }\n    get length() {\n        if (this.isAllRecords()) {\n            return this._total || 0;\n        }\n        return this.records == undefined ? 0 : this.records.length;\n    }\n    isAllRecords() {\n        return this.mode === SelectionMode.ALL_RECORDS;\n    }\n    isEmpty() {\n        return this.length === 0;\n    }\n}\n//# sourceMappingURL=DataUnit.js.map","import { StringUtils } from \"./StringUtils.js\";\n/**\n * `ElementIDUtils`: O ElementIDUtils é um utilitário responsável por criar e adicionar identificadores únicos aos componentes através do atributo data-element-id.\n * A finalidade dele é otimizar a automação dos testes e melhorar a eficiência na manipulação dos componentes do Design System, garantindo seleções precisas e seguras.\n */\nexport class ElementIDUtils {\n    /**\n    * Cria e adiciona a propriedade `data-element-id` em um elemento.\n    *\n    * @param element - Elemento HTML a ser modificado (HTMLElement).\n    * @param suffix - Sufixo/Texto para ser adicionado.\n    * @param iDInfo - ID para ser adicionado.\n    * @returns - O data-element-id gerado.\n    */\n    static addIDInfo(element, suffix, iDInfo) {\n        try {\n            let dataElementID = this.getDataElementID(element, suffix, iDInfo);\n            dataElementID = StringUtils.replaceAccentuatedChars(dataElementID, false);\n            dataElementID = this.addPrefix(iDInfo, dataElementID);\n            element.setAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME, dataElementID);\n            return dataElementID;\n        }\n        catch (e) {\n            console.warn(`Erro ao gerar data-element-id: ${element.tagName}`, e);\n        }\n        return \"\";\n    }\n    static addIDInfoIfNotExists(element, suffix, iDInfo) {\n        try {\n            let dataElementID = element.getAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME);\n            if (dataElementID == undefined) {\n                dataElementID = ElementIDUtils.addIDInfo(element, suffix, iDInfo);\n            }\n            return dataElementID;\n        }\n        catch (e) {\n            console.warn(`Erro ao gerar data-element-id: ${element.tagName}`, e);\n        }\n        return \"\";\n    }\n    static getInternalIDInfo(sufix) {\n        return `${ElementIDUtils.INTERNAL_INPUT_NAME}_${sufix}`;\n    }\n    /**\n    * Obtém o `data-element-id` do elemento com adição do sufixo e ID.\n    *\n    * @param element - Elemento HTML a ser modificado (HTMLElement).\n    * @param suffix - Sufixo/Texto para ser adicionado.\n    * @param iDInfo - ID para ser adicionado.\n    * @returns - Atributo `data-element-id` do elemento modificado com sufixo e/ou ID.\n    */\n    static getDataElementID(element, suffix, iDInfo) {\n        const dataElementID = ElementIDUtils.getDataElementIDAttribute(element);\n        if (dataElementID != null) {\n            return this.addSuffix(StringUtils.toCamelCase(dataElementID), suffix, element);\n        }\n        const validAttribute = this.getAttributeValid(element, iDInfo);\n        if (validAttribute)\n            return this.addSuffix(validAttribute, suffix, element);\n        if (suffix)\n            return String(suffix);\n        const tagName = StringUtils.toCamelCase(element.tagName);\n        element.setAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME, tagName);\n        return tagName;\n    }\n    /**\n    * Obtém ID válido para o elemento.\n    *\n    * @param element - Elemento HTML a ser modificado (HTMLElement).\n    * @param iDInfo - ID para ser adicionado.\n    * @returns - ID para ser adicionado ao elemento conforme ordem de prioridade.\n    */\n    static getAttributeValid(element, iDInfo) {\n        if (iDInfo === null || iDInfo === void 0 ? void 0 : iDInfo.id) {\n            return this.formatDescription(iDInfo === null || iDInfo === void 0 ? void 0 : iDInfo.id);\n        }\n        if (element.hasAttribute(\"data-field-name\")) {\n            return StringUtils.toCamelCase(element.getAttribute(\"data-field-name\"));\n        }\n        if (element === null || element === void 0 ? void 0 : element.id) {\n            return StringUtils.toCamelCase(element === null || element === void 0 ? void 0 : element.id);\n        }\n        if (element.hasAttribute(\"name\")) {\n            return this.formatDescription(element.getAttribute(\"name\"));\n        }\n        if (element.hasAttribute(\"label\")) {\n            return this.formatDescription(element.getAttribute(\"label\"));\n        }\n        if (element.hasAttribute(\"title\")) {\n            return this.formatDescription(element.getAttribute(\"title\"));\n        }\n        return null;\n    }\n    /**\n    * Adiciona sufixo ao atributo `data-element-id` de um elemento, utilizado para montar a hierarquia dos ids dos componentes em tela.\n    *\n    * @param dataElementID - ID para ser adicionado ao `data-element-id`.\n    * @param suffix - Sufixo/Texto para ser adicionado ao `data-element-id`.\n    * @param element - Elemento HTML a ser modificado (HTMLElement).\n    * @returns - `data-element-id` com sufixo.\n    *\n    * @example\n    * Um ez-combo-box tem data-element-id = codparc_input_embedded_combo.\n    * Dentro desse ez-combo-box existe um ez-text-input. O data-element-id teria como sufixo o id 'codparc_input_embedded_combo' referente ao seu pai.\n    */\n    static addSuffix(dataElementID, suffix, element) {\n        if (suffix) {\n            return `${dataElementID}_${StringUtils.toCamelCase(suffix)}`;\n        }\n        if (StringUtils.isEmpty(dataElementID)) {\n            return `${StringUtils.toCamelCase(element.tagName)}`;\n        }\n        return `${dataElementID}_${StringUtils.toCamelCase(element.tagName)}`;\n    }\n    /**\n    * Adiciona a propriedade name do DataUnit como prefixo do data-element-id do elemento.\n    *\n    * @param iDInfo - ID para ser adicionado ao `data-element-id`.\n    * @param dataElementID - Sufixo/Texto para ser adicionado ao `data-element-id`.\n    * @returns - String contendo informação para ser usada no `data-element-id` do elemento.\n    */\n    static addPrefix(iDInfo, dataElementID) {\n        var _a;\n        let dataUnitName = ((_a = iDInfo === null || iDInfo === void 0 ? void 0 : iDInfo.dataUnit) === null || _a === void 0 ? void 0 : _a.name) || \"\";\n        dataUnitName = this.parseDataUnitName(dataUnitName);\n        if ((iDInfo === null || iDInfo === void 0 ? void 0 : iDInfo.dataUnit) && !(dataElementID === null || dataElementID === void 0 ? void 0 : dataElementID.startsWith(dataUnitName))) {\n            dataElementID = `${StringUtils.toCamelCase(dataUnitName)}_${dataElementID}`;\n        }\n        return dataElementID;\n    }\n    /**\n    * Remove caracteres especiais.\n    *\n    * @param value - Texto que terá os caracteres especiais removidos.\n    * @returns - Retorna a string sem caracteres especiais e em camelCase.\n    */\n    static formatDescription(value) {\n        if (!value)\n            return \"\";\n        value = StringUtils.replaceAccentuatedChars(value, false);\n        return StringUtils.toCamelCase((value.replace(/[^\\w\\sÀ-ÖØ-öø-ÿ]/gi, \" \")).replace(/\\s+/g, ' ').trim());\n    }\n    static getDataElementIDAttribute(element) {\n        if (element[ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME] || element.hasAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME)) {\n            return element[ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME] || element.getAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME);\n        }\n        return null;\n    }\n    static parseDataUnitName(uri) {\n        var _a;\n        if (StringUtils.isEmpty(uri)) {\n            return uri;\n        }\n        const matcher = this.REGEX_DATAUNIT_NAME.exec(uri);\n        return (_a = matcher === null || matcher === void 0 ? void 0 : matcher[1]) !== null && _a !== void 0 ? _a : uri;\n    }\n}\nElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME = \"data-element-id\";\nElementIDUtils.INTERNAL_INPUT_NAME = \"embedded\";\nElementIDUtils.REGEX_DATAUNIT_NAME = /dd:\\/\\/(.+?)\\//;\n//# sourceMappingURL=ElementIDUtils.js.map","export class OnboardingUtils {\n    constructor() { }\n    static getInstance() {\n        if (this.instance == null) {\n            this.instance = new OnboardingUtils();\n        }\n        return this.instance;\n    }\n    init(apiKey, ctx) {\n        if (!apiKey) {\n            return Promise.resolve();\n        }\n        this.injectScript(apiKey);\n        this.register(ctx);\n        return Promise.resolve();\n    }\n    injectScript(apiKey) {\n        if (window.document.head.querySelector(`script#${OnboardingUtils.USER_GUIDE_TAG_ID}`)) {\n            return;\n        }\n        const scriptEl = document.createElement('script');\n        scriptEl.setAttribute(\"id\", OnboardingUtils.USER_GUIDE_TAG_ID);\n        scriptEl.innerText = `(function(g,u,i,d,e,s){g[e]=g[e]||[];var f=u.getElementsByTagName(i)[0];var k=u.createElement(i);k.async=true;k.src='https://static.userguiding.com/media/user-guiding-'+s+'-embedded.js';f.parentNode.insertBefore(k,f);if(g[d])return;var ug=g[d]={q:[]};ug.c=function(n){return function(){ug.q.push([n,arguments])};};var m=['previewGuide','finishPreview','track','identify','hideChecklist','launchChecklist'];for(var j=0;j<m.length;j+=1){ug[m[j]]=ug.c(m[j]);}})(window,document,'script','userGuiding','userGuidingLayer','${apiKey}');`;\n        window.document.head.appendChild(scriptEl);\n    }\n    register(ctx) {\n        window.userGuiding.identify(`${encodeURIComponent(ctx.userID)}-${encodeURIComponent(ctx.userName)}-${encodeURIComponent(ctx.clientGaId)}`, ctx);\n    }\n}\nOnboardingUtils.USER_GUIDE_TAG_ID = \"userGuideSnippet\";\nexport class EnvironmentContext {\n    constructor() {\n        this.userID = \"\";\n        this.userName = \"\";\n        this.partnerName = \"\";\n        this.sysVersion = \"\";\n        this.environment = \"\";\n        this.clientGaId = \"\";\n    }\n}\n//# sourceMappingURL=OnboardingUtils.js.map","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","export const keyCodesWithEvents = {\n    0: {\n        key: 'Unidentified',\n        keyCode: 0,\n        which: 0,\n        code: 'Unidentified',\n        location: 0,\n        description: 'These keys do not have a key code'\n    },\n    3: {\n        key: 'Cancel',\n        keyCode: 3,\n        which: 3,\n        code: 'Pause',\n        location: 0,\n        altKey: false,\n        ctrlKey: true,\n        metaKey: false,\n        shiftKey: false,\n        description: 'break'\n    },\n    8: {\n        key: 'Backspace',\n        keyCode: 8,\n        which: 8,\n        code: 'Backspace',\n        location: 0,\n        description: 'backspace / delete',\n        unicode: '⌫'\n    },\n    9: {\n        key: 'Tab',\n        keyCode: 9,\n        which: 9,\n        code: 'Tab',\n        location: 0,\n        description: 'tab',\n        unicode: '↹'\n    },\n    12: {\n        key: 'Clear',\n        keyCode: 12,\n        which: 12,\n        code: 'NumLock',\n        location: 0,\n        description: 'clear',\n        unicode: '⌧'\n    },\n    13: {\n        key: 'Enter',\n        keyCode: 13,\n        which: 13,\n        code: 'Enter',\n        location: 0,\n        description: 'Enter / Return',\n        unicode: '↵'\n    },\n    16: {\n        key: 'Shift',\n        keyCode: 16,\n        which: 16,\n        code: 'ShiftLeft',\n        location: 1,\n        description: 'shift',\n        unicode: '⇧',\n        shiftKey: true,\n        altKey: false\n    },\n    17: {\n        key: 'Control',\n        keyCode: 17,\n        which: 17,\n        code: 'ControlLeft',\n        location: 1,\n        altKey: true,\n        ctrlKey: true,\n        metaKey: true,\n        shiftKey: true,\n        description: 'ctrl',\n        unicode: '^'\n    },\n    18: {\n        key: 'Alt',\n        keyCode: 18,\n        which: 18,\n        code: 'AltLeft',\n        location: 1,\n        altKey: true,\n        ctrlKey: false,\n        metaKey: true,\n        shiftKey: false,\n        description: 'Alt / Option',\n        unicode: '⎇ / ⌥'\n    },\n    19: {\n        key: 'Pause',\n        keyCode: 19,\n        which: 19,\n        code: 'Pause',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'pause/break'\n    },\n    20: {\n        key: 'CapsLock',\n        keyCode: 20,\n        which: 20,\n        code: 'CapsLock',\n        location: 0,\n        description: 'caps lock',\n        unicode: '⇪'\n    },\n    21: {\n        key: 'Unidentified',\n        keyCode: 21,\n        which: 21,\n        code: 'Lang1',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'hangul'\n    },\n    25: {\n        key: 'Unidentified',\n        keyCode: 25,\n        which: 25,\n        code: 'Lang2',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'hanja'\n    },\n    27: {\n        key: 'Escape',\n        keyCode: 27,\n        which: 27,\n        code: 'Escape',\n        location: 0,\n        description: 'escape',\n        unicode: '⎋'\n    },\n    28: {\n        key: 'henkan',\n        description: 'conversion',\n        keyCode: 28,\n        which: 28\n    },\n    29: {\n        key: 'muhenkan',\n        description: 'non-conversion',\n        keyCode: 29,\n        which: 29\n    },\n    32: {\n        key: ' ',\n        keyCode: 32,\n        which: 32,\n        code: 'Space',\n        location: 0,\n        description: 'spacebar'\n    },\n    33: {\n        key: 'PageUp',\n        keyCode: 33,\n        which: 33,\n        code: 'Numpad9',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'page up',\n        unicode: '⇞'\n    },\n    34: {\n        key: 'PageDown',\n        keyCode: 34,\n        which: 34,\n        code: 'Numpad3',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'page down',\n        unicode: '⇟'\n    },\n    35: {\n        key: 'End',\n        keyCode: 35,\n        which: 35,\n        code: 'Numpad1',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'end'\n    },\n    36: {\n        key: 'Home',\n        keyCode: 36,\n        which: 36,\n        code: 'Numpad7',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'home',\n        unicode: '⌂'\n    },\n    37: {\n        key: 'ArrowLeft',\n        keyCode: 37,\n        which: 37,\n        code: 'ArrowLeft',\n        location: 0,\n        description: 'left arrow',\n        unicode: '←'\n    },\n    38: {\n        key: 'ArrowUp',\n        keyCode: 38,\n        which: 38,\n        code: 'ArrowUp',\n        location: 0,\n        description: 'up arrow',\n        unicode: '↑'\n    },\n    39: {\n        key: 'ArrowRight',\n        keyCode: 39,\n        which: 39,\n        code: 'ArrowRight',\n        location: 0,\n        description: 'right arrow',\n        unicode: '→'\n    },\n    40: {\n        key: 'ArrowDown',\n        keyCode: 40,\n        which: 40,\n        code: 'ArrowDown',\n        location: 0,\n        description: 'down arrow',\n        unicode: '↓'\n    },\n    41: {\n        key: 'Select',\n        description: 'select',\n        keyCode: 41,\n        which: 41\n    },\n    42: {\n        key: 'Print',\n        description: 'print',\n        keyCode: 42,\n        which: 42\n    },\n    43: {\n        key: 'Execute',\n        description: 'execute',\n        keyCode: 43,\n        which: 43\n    },\n    44: {\n        key: 'F13',\n        keyCode: 44,\n        which: 44,\n        code: 'F13',\n        location: 0,\n        description: 'Print Screen / F13 (firefox)',\n        unicode: '⎙'\n    },\n    45: {\n        key: 'Insert',\n        keyCode: 45,\n        which: 45,\n        code: 'Numpad0',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'insert',\n        unicode: 'x'\n    },\n    46: {\n        key: 'Delete',\n        keyCode: 46,\n        which: 46,\n        code: 'NumpadDecimal',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'delete',\n        unicode: '⌦'\n    },\n    47: {\n        key: 'Help',\n        description: 'help',\n        keyCode: 47,\n        which: 47,\n        unicode: '⍰'\n    },\n    48: {\n        key: '0',\n        keyCode: 48,\n        which: 48,\n        code: 'Digit0',\n        location: 0,\n        description: '0',\n        unicode: '⓪'\n    },\n    49: {\n        key: '1',\n        keyCode: 49,\n        which: 49,\n        code: 'Digit1',\n        location: 0,\n        description: '1 Key',\n        unicode: '①'\n    },\n    50: {\n        key: '2',\n        keyCode: 50,\n        which: 50,\n        code: 'Digit2',\n        location: 0,\n        description: '2 Key',\n        unicode: '②'\n    },\n    51: {\n        key: '3',\n        keyCode: 51,\n        which: 51,\n        code: 'Digit3',\n        location: 0,\n        description: '3 Key',\n        unicode: '③'\n    },\n    52: {\n        key: '4',\n        keyCode: 52,\n        which: 52,\n        code: 'Digit4',\n        location: 0,\n        description: '4 Key',\n        unicode: '④'\n    },\n    53: {\n        key: '5',\n        keyCode: 53,\n        which: 53,\n        code: 'Digit5',\n        location: 0,\n        description: '5 Key',\n        unicode: '⑤'\n    },\n    54: {\n        key: '6',\n        keyCode: 54,\n        which: 54,\n        code: 'Digit6',\n        location: 0,\n        description: '6 Key',\n        unicode: '⑥'\n    },\n    55: {\n        key: '7',\n        keyCode: 55,\n        which: 55,\n        code: 'Digit7',\n        location: 0,\n        description: '7 Key',\n        unicode: '⑦'\n    },\n    56: {\n        key: '8',\n        keyCode: 56,\n        which: 56,\n        code: 'Digit8',\n        location: 0,\n        description: '8 Key',\n        unicode: '⑧'\n    },\n    57: {\n        key: '9',\n        keyCode: 57,\n        which: 57,\n        code: 'Digit9',\n        location: 0,\n        description: '9 Key',\n        unicode: '⑨'\n    },\n    58: {\n        key: ':',\n        keyCode: 58,\n        which: 58,\n        code: 'Period',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: ':'\n    },\n    59: {\n        key: ';',\n        keyCode: 59,\n        which: 59,\n        code: 'Semicolon',\n        location: 0,\n        description: 'semicolon (firefox), equals'\n    },\n    60: {\n        key: '<',\n        keyCode: 60,\n        which: 60,\n        code: 'Backquote',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '<'\n    },\n    61: {\n        key: '=',\n        keyCode: 61,\n        which: 61,\n        code: 'Equal',\n        location: 0,\n        description: 'equals (firefox)'\n    },\n    63: {\n        key: 'ß',\n        keyCode: 63,\n        which: 63,\n        code: 'Minus',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'ß / ?'\n    },\n    64: {\n        key: '@',\n        description: '@ (firefox)',\n        keyCode: 64,\n        which: 64\n    },\n    65: {\n        key: 'a',\n        keyCode: 65,\n        which: 65,\n        code: 'KeyA',\n        location: 0,\n        description: 'a'\n    },\n    66: {\n        key: 'b',\n        keyCode: 66,\n        which: 66,\n        code: 'KeyB',\n        location: 0,\n        description: 'b'\n    },\n    67: {\n        key: 'c',\n        keyCode: 67,\n        which: 67,\n        code: 'KeyC',\n        location: 0,\n        description: 'c'\n    },\n    68: {\n        key: 'd',\n        keyCode: 68,\n        which: 68,\n        code: 'KeyD',\n        location: 0,\n        description: 'd'\n    },\n    69: {\n        key: 'e',\n        keyCode: 69,\n        which: 69,\n        code: 'KeyE',\n        location: 0,\n        description: 'e'\n    },\n    70: {\n        key: 'f',\n        keyCode: 70,\n        which: 70,\n        code: 'KeyF',\n        location: 0,\n        description: 'f'\n    },\n    71: {\n        key: 'g',\n        keyCode: 71,\n        which: 71,\n        code: 'KeyG',\n        location: 0,\n        description: 'g'\n    },\n    72: {\n        key: 'h',\n        keyCode: 72,\n        which: 72,\n        code: 'KeyH',\n        location: 0,\n        description: 'h'\n    },\n    73: {\n        key: 'i',\n        keyCode: 73,\n        which: 73,\n        code: 'KeyI',\n        location: 0,\n        description: 'i'\n    },\n    74: {\n        key: 'j',\n        keyCode: 74,\n        which: 74,\n        code: 'KeyJ',\n        location: 0,\n        description: 'j'\n    },\n    75: {\n        key: 'k',\n        keyCode: 75,\n        which: 75,\n        code: 'KeyK',\n        location: 0,\n        altKey: true,\n        ctrlKey: false,\n        metaKey: true,\n        shiftKey: false,\n        description: 'k'\n    },\n    76: {\n        key: 'l',\n        keyCode: 76,\n        which: 76,\n        code: 'KeyL',\n        location: 0,\n        altKey: true,\n        ctrlKey: false,\n        metaKey: true,\n        shiftKey: false,\n        description: 'l'\n    },\n    77: {\n        key: 'm',\n        keyCode: 77,\n        which: 77,\n        code: 'KeyM',\n        location: 0,\n        description: 'm'\n    },\n    78: {\n        key: 'n',\n        keyCode: 78,\n        which: 78,\n        code: 'KeyN',\n        location: 0,\n        description: 'n'\n    },\n    79: {\n        key: 'o',\n        keyCode: 79,\n        which: 79,\n        code: 'KeyO',\n        location: 0,\n        description: 'o'\n    },\n    80: {\n        key: 'p',\n        keyCode: 80,\n        which: 80,\n        code: 'KeyP',\n        location: 0,\n        description: 'p'\n    },\n    81: {\n        key: 'q',\n        keyCode: 81,\n        which: 81,\n        code: 'KeyQ',\n        location: 0,\n        description: 'q'\n    },\n    82: {\n        key: 'r',\n        keyCode: 82,\n        which: 82,\n        code: 'KeyR',\n        location: 0,\n        description: 'r'\n    },\n    83: {\n        key: 's',\n        keyCode: 83,\n        which: 83,\n        code: 'KeyS',\n        location: 0,\n        description: 's'\n    },\n    84: {\n        key: 't',\n        keyCode: 84,\n        which: 84,\n        code: 'KeyT',\n        location: 0,\n        description: 't'\n    },\n    85: {\n        key: 'u',\n        keyCode: 85,\n        which: 85,\n        code: 'KeyU',\n        location: 0,\n        description: 'u'\n    },\n    86: {\n        key: 'v',\n        keyCode: 86,\n        which: 86,\n        code: 'KeyV',\n        location: 0,\n        description: 'v'\n    },\n    87: {\n        key: 'w',\n        keyCode: 87,\n        which: 87,\n        code: 'KeyW',\n        location: 0,\n        description: 'w'\n    },\n    88: {\n        key: 'x',\n        keyCode: 88,\n        which: 88,\n        code: 'KeyX',\n        location: 0,\n        description: 'x'\n    },\n    89: {\n        key: 'y',\n        keyCode: 89,\n        which: 89,\n        code: 'KeyY',\n        location: 0,\n        description: 'y'\n    },\n    90: {\n        key: 'z',\n        keyCode: 90,\n        which: 90,\n        code: 'KeyZ',\n        location: 0,\n        description: 'z',\n        unicode: ''\n    },\n    91: {\n        key: 'Meta',\n        keyCode: 91,\n        which: 91,\n        code: 'MetaLeft',\n        location: 1,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: true,\n        shiftKey: false,\n        description: 'Windows Key / Left ⌘ / Chromebook Search key',\n        unicode: '⌘ ⊞'\n    },\n    92: {\n        key: 'Meta',\n        keyCode: 92,\n        which: 92,\n        code: 'MetaRight',\n        location: 2,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: true,\n        shiftKey: true,\n        description: 'Right Windows',\n        unicode: '⌘ ⊞'\n    },\n    93: {\n        key: 'ContextMenu',\n        keyCode: 93,\n        which: 93,\n        code: 'ContextMenu',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'Windows Menu / Right ⌘',\n        unicode: '▤'\n    },\n    95: {\n        key: 'Standby',\n        description: 'sleep',\n        keyCode: 95,\n        which: 95,\n        unicode: '☾'\n    },\n    96: {\n        key: '0',\n        keyCode: 96,\n        which: 96,\n        code: 'Numpad0',\n        location: 3,\n        description: 'Number Pad 0',\n        unicode: '⓪'\n    },\n    97: {\n        key: '1',\n        keyCode: 97,\n        which: 97,\n        code: 'Numpad1',\n        location: 3,\n        description: 'Number Pad 1',\n        unicode: '①'\n    },\n    98: {\n        key: '2',\n        keyCode: 98,\n        which: 98,\n        code: 'Numpad2',\n        location: 3,\n        description: 'Number Pad 2',\n        unicode: '②'\n    },\n    99: {\n        key: '3',\n        keyCode: 99,\n        which: 99,\n        code: 'Numpad3',\n        location: 3,\n        description: 'Number Pad 3',\n        unicode: '③'\n    },\n    100: {\n        key: '4',\n        keyCode: 100,\n        which: 100,\n        code: 'Numpad4',\n        location: 3,\n        description: 'Number Pad 4',\n        unicode: '④'\n    },\n    101: {\n        key: '5',\n        keyCode: 101,\n        which: 101,\n        code: 'Numpad5',\n        location: 3,\n        description: 'Number Pad 5',\n        unicode: '⑤'\n    },\n    102: {\n        key: '6',\n        keyCode: 102,\n        which: 102,\n        code: 'Numpad6',\n        location: 3,\n        description: 'Number Pad 6',\n        unicode: '⑥'\n    },\n    103: {\n        key: '7',\n        keyCode: 103,\n        which: 103,\n        code: 'Numpad7',\n        location: 3,\n        description: 'Number Pad 7',\n        unicode: '⑦'\n    },\n    104: {\n        key: '8',\n        keyCode: 104,\n        which: 104,\n        code: 'Numpad8',\n        location: 3,\n        description: 'Number Pad 8',\n        unicode: '⑧'\n    },\n    105: {\n        key: '9',\n        keyCode: 105,\n        which: 105,\n        code: 'Numpad9',\n        location: 3,\n        description: 'Number Pad 9',\n        unicode: '⑨'\n    },\n    106: {\n        key: '*',\n        keyCode: 106,\n        which: 106,\n        code: 'NumpadMultiply',\n        location: 3,\n        description: 'multiply',\n        unicode: '×'\n    },\n    107: {\n        key: '+',\n        keyCode: 107,\n        which: 107,\n        code: 'NumpadAdd',\n        location: 3,\n        description: 'add'\n    },\n    108: {\n        key: ',',\n        keyCode: 108,\n        which: 108,\n        code: 'NumpadDecimal',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'numpad period (firefox)'\n    },\n    109: {\n        key: '-',\n        keyCode: 109,\n        which: 109,\n        code: 'NumpadSubtract',\n        location: 3,\n        description: 'subtract'\n    },\n    110: {\n        key: '.',\n        keyCode: 110,\n        which: 110,\n        code: 'NumpadDecimal',\n        location: 3,\n        description: 'decimal point'\n    },\n    111: {\n        key: '/',\n        keyCode: 111,\n        which: 111,\n        code: 'NumpadDivide',\n        location: 3,\n        description: 'divide',\n        unicode: '÷'\n    },\n    112: {\n        key: 'F1',\n        keyCode: 112,\n        which: 112,\n        code: 'F1',\n        location: 0,\n        description: 'f1'\n    },\n    113: {\n        key: 'F2',\n        keyCode: 113,\n        which: 113,\n        code: 'F2',\n        location: 0,\n        description: 'f2'\n    },\n    114: {\n        key: 'F3',\n        keyCode: 114,\n        which: 114,\n        code: 'F3',\n        location: 0,\n        description: 'f3'\n    },\n    115: {\n        key: 'F4',\n        keyCode: 115,\n        which: 115,\n        code: 'F4',\n        location: 0,\n        description: 'f4'\n    },\n    116: {\n        key: 'F5',\n        keyCode: 116,\n        which: 116,\n        code: 'F5',\n        location: 0,\n        description: 'f5'\n    },\n    117: {\n        key: 'F6',\n        keyCode: 117,\n        which: 117,\n        code: 'F6',\n        location: 0,\n        description: 'f6'\n    },\n    118: {\n        key: 'F7',\n        keyCode: 118,\n        which: 118,\n        code: 'F7',\n        location: 0,\n        description: 'f7'\n    },\n    119: {\n        key: 'F8',\n        keyCode: 119,\n        which: 119,\n        code: 'F8',\n        location: 0,\n        description: 'f8'\n    },\n    120: {\n        key: 'F9',\n        keyCode: 120,\n        which: 120,\n        code: 'F9',\n        location: 0,\n        description: 'f9'\n    },\n    121: {\n        key: 'F10',\n        keyCode: 121,\n        which: 121,\n        code: 'F10',\n        location: 0,\n        description: 'f10'\n    },\n    122: {\n        key: 'F11',\n        keyCode: 122,\n        which: 122,\n        code: 'F11',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f11'\n    },\n    123: {\n        key: 'F12',\n        keyCode: 123,\n        which: 123,\n        code: 'F12',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f12'\n    },\n    124: {\n        key: 'F13',\n        keyCode: 124,\n        which: 124,\n        code: 'F13',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f13'\n    },\n    125: {\n        key: 'F14',\n        keyCode: 125,\n        which: 125,\n        code: 'F14',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: true,\n        description: 'f14'\n    },\n    126: {\n        key: 'F15',\n        keyCode: 126,\n        which: 126,\n        code: 'F15',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: true,\n        description: 'f15'\n    },\n    127: {\n        key: 'F16',\n        keyCode: 127,\n        which: 127,\n        code: 'F16',\n        location: 0,\n        description: 'f16'\n    },\n    128: {\n        key: 'F17',\n        keyCode: 128,\n        which: 128,\n        code: 'F17',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f17'\n    },\n    129: {\n        key: 'F18',\n        keyCode: 129,\n        which: 129,\n        code: 'F18',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f18'\n    },\n    130: {\n        key: 'F19',\n        keyCode: 130,\n        which: 130,\n        code: 'F19',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'f19'\n    },\n    131: {\n        key: 'F20',\n        code: 'F20',\n        description: 'F20',\n        keyCode: 131,\n        which: 131\n    },\n    132: {\n        key: 'F21',\n        code: 'F21',\n        description: 'F21',\n        keyCode: 132,\n        which: 132\n    },\n    133: {\n        key: 'F22',\n        code: 'F22',\n        description: 'F22',\n        keyCode: 133,\n        which: 133\n    },\n    134: {\n        key: 'F23',\n        code: 'F23',\n        description: 'F23',\n        keyCode: 134,\n        which: 134\n    },\n    135: {\n        key: 'F24',\n        code: 'F24',\n        description: 'F24',\n        keyCode: 135,\n        which: 135\n    },\n    136: {\n        key: 'F25',\n        code: 'F25',\n        description: 'F25',\n        keyCode: 136,\n        which: 136\n    },\n    137: {\n        key: 'F26',\n        code: 'F26',\n        description: 'F26',\n        keyCode: 137,\n        which: 137\n    },\n    138: {\n        key: 'F27',\n        code: 'F27',\n        description: 'F27',\n        keyCode: 138,\n        which: 138\n    },\n    139: {\n        key: 'F28',\n        code: 'F28',\n        description: 'F28',\n        keyCode: 139,\n        which: 139\n    },\n    140: {\n        key: 'F29',\n        code: 'F29',\n        description: 'F29',\n        keyCode: 140,\n        which: 140\n    },\n    141: {\n        key: 'F30',\n        code: 'F30',\n        description: 'F30',\n        keyCode: 141,\n        which: 141\n    },\n    142: {\n        key: 'F31',\n        code: 'F31',\n        description: 'F31',\n        keyCode: 142,\n        which: 142\n    },\n    143: {\n        key: 'F32',\n        code: 'F32',\n        description: 'F32',\n        keyCode: 143,\n        which: 143\n    },\n    144: {\n        key: 'NumLock',\n        keyCode: 144,\n        which: 144,\n        code: 'NumLock',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'num lock',\n        unicode: '⇭'\n    },\n    145: {\n        key: 'ScrollLock',\n        keyCode: 145,\n        which: 145,\n        code: 'ScrollLock',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'scroll lock',\n        unicode: '⤓'\n    },\n    151: {\n        key: '',\n        description: 'airplane mode',\n        keyCode: 151,\n        which: 151\n    },\n    160: {\n        key: '^',\n        keyCode: 160,\n        which: 160,\n        code: 'BracketLeft',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '^'\n    },\n    161: {\n        key: 'Dead',\n        keyCode: 161,\n        which: 161,\n        code: 'BracketRight',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '!'\n    },\n    162: {\n        key: '',\n        description: '؛ (arabic semicolon) / \" / ¢',\n        keyCode: 162,\n        which: 162\n    },\n    163: {\n        key: '#',\n        keyCode: 163,\n        which: 163,\n        code: 'Backquote',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '#'\n    },\n    164: {\n        key: '$',\n        keyCode: 164,\n        which: 164,\n        code: 'Backslash',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '$'\n    },\n    165: {\n        key: '^ù',\n        keyCode: 165,\n        which: 165,\n        code: 'Quote',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'ù'\n    },\n    166: {\n        key: 'BrowserBack',\n        description: 'browser page backward',\n        keyCode: 166,\n        which: 166\n    },\n    167: {\n        key: 'BrowserForward',\n        description: 'browser page forward',\n        keyCode: 167,\n        which: 167\n    },\n    168: {\n        key: 'BrowserRefresh',\n        description: 'browser refresh',\n        keyCode: 168,\n        which: 168\n    },\n    169: {\n        key: ')',\n        keyCode: 169,\n        which: 169,\n        code: 'Minus',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'closing paren (AZERTY)'\n    },\n    170: {\n        key: '*',\n        keyCode: 170,\n        which: 170,\n        code: 'Backslash',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '*'\n    },\n    171: {\n        key: '+',\n        keyCode: 171,\n        which: 171,\n        code: 'BracketRight',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '~ + * key'\n    },\n    172: {\n        key: '|',\n        keyCode: 172,\n        which: 172,\n        description: 'home key, pipe key'\n    },\n    173: {\n        key: '-',\n        keyCode: 173,\n        which: 173,\n        code: 'Minus',\n        location: 0,\n        description: 'minus (firefox), mute/unmute'\n    },\n    174: {\n        key: 'AudioVolumeDown',\n        keyCode: 174,\n        which: 174,\n        code: '',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'decrease volume level'\n    },\n    175: {\n        key: 'AudioVolumeUp',\n        keyCode: 175,\n        which: 175,\n        code: '',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'increase volume level'\n    },\n    176: {\n        key: 'MediaTrackNext',\n        keyCode: 176,\n        which: 176,\n        code: 'MediaTrackNext',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'next'\n    },\n    177: {\n        key: 'MediaTrackPrevious',\n        keyCode: 177,\n        which: 177,\n        code: 'MediaTrackPrevious',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'previous'\n    },\n    178: {\n        key: 'MediaStop',\n        description: 'stop',\n        keyCode: 178,\n        which: 178,\n        unicode: ''\n    },\n    179: {\n        key: 'MediaPlayPause',\n        keyCode: 179,\n        which: 179,\n        code: '',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'play/pause'\n    },\n    180: {\n        key: 'LaunchMail',\n        keyCode: 180,\n        which: 180,\n        code: '',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'e-mail',\n        unicode: '✉'\n    },\n    181: {\n        key: 'AudioVolumeMute',\n        keyCode: 181,\n        which: 181,\n        code: 'VolumeMute',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'mute/unmute (firefox)'\n    },\n    182: {\n        key: 'AudioVolumeDown',\n        keyCode: 182,\n        which: 182,\n        code: 'VolumeDown',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'decrease volume level (firefox)'\n    },\n    183: {\n        key: 'AudioVolumeUp',\n        keyCode: 183,\n        which: 183,\n        code: 'VolumeUp',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        unicode: '',\n        description: 'increase volume level (firefox)'\n    },\n    186: {\n        key: ';',\n        keyCode: 186,\n        which: 186,\n        code: 'Semicolon',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'semi-colon / ñ'\n    },\n    187: {\n        key: '=',\n        keyCode: 187,\n        which: 187,\n        code: 'Equal',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'equal sign'\n    },\n    188: {\n        key: ',',\n        keyCode: 188,\n        which: 188,\n        code: 'Comma',\n        location: 0,\n        description: 'comma'\n    },\n    189: {\n        key: '-',\n        keyCode: 189,\n        which: 189,\n        code: 'Minus',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'dash'\n    },\n    190: {\n        key: '.',\n        keyCode: 190,\n        which: 190,\n        code: 'Period',\n        location: 0,\n        description: 'period'\n    },\n    191: {\n        key: '/',\n        keyCode: 191,\n        which: 191,\n        code: 'Slash',\n        location: 0,\n        description: 'forward slash / ç'\n    },\n    192: {\n        key: '`',\n        keyCode: 192,\n        which: 192,\n        code: 'Backquote',\n        location: 0,\n        description: 'Backtick / grave accent / ñ / æ / ö / § / ±'\n    },\n    193: {\n        key: '/',\n        keyCode: 193,\n        which: 193,\n        code: 'IntlRo',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '?, / or °'\n    },\n    194: {\n        key: '.',\n        keyCode: 194,\n        which: 194,\n        code: 'NumpadComma',\n        location: 3,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'numpad period (chrome)'\n    },\n    219: {\n        key: '[',\n        keyCode: 219,\n        which: 219,\n        code: 'BracketLeft',\n        location: 0,\n        description: 'open bracket'\n    },\n    220: {\n        key: '\\\\',\n        keyCode: 220,\n        which: 220,\n        code: 'Backslash',\n        location: 0,\n        description: 'back slash'\n    },\n    221: {\n        key: ']',\n        keyCode: 221,\n        which: 221,\n        code: 'BracketRight',\n        location: 0,\n        description: 'close bracket / å'\n    },\n    222: {\n        key: \"'\",\n        keyCode: 222,\n        which: 222,\n        code: 'Quote',\n        location: 0,\n        description: 'single quote / ø / ä'\n    },\n    223: {\n        key: '`',\n        keyCode: 223,\n        which: 223,\n        code: 'Backquote',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '`'\n    },\n    224: {\n        key: 'Meta',\n        keyCode: 224,\n        which: 224,\n        code: 'OSLeft',\n        metaKey: true,\n        location: 1,\n        description: 'left or right ⌘ key (firefox)',\n        unicode: '⌘'\n    },\n    225: {\n        key: 'AltGraph',\n        keyCode: 225,\n        which: 225,\n        code: 'AltRight',\n        location: 2,\n        altKey: true,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'altgr',\n        unicode: '⎇ or ⌥'\n    },\n    226: {\n        key: '\\\\',\n        keyCode: 226,\n        which: 226,\n        code: 'IntlBackslash',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: '< /git >, left back slash'\n    },\n    229: {\n        key: 'Dead',\n        keyCode: 229,\n        which: 229,\n        code: 'Backquote',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false\n    },\n    230: {\n        key: '',\n        description: 'GNOME Compose Key',\n        keyCode: 230,\n        which: 230\n    },\n    231: {\n        key: '',\n        description: 'ç',\n        keyCode: 231,\n        which: 231\n    },\n    233: {\n        key: '',\n        description: 'XF86Forward / é',\n        keyCode: 233,\n        which: 233\n    },\n    234: {\n        key: '',\n        description: 'XF86Back / ê',\n        keyCode: 234,\n        which: 234\n    },\n    235: {\n        key: '',\n        description: 'non-conversion / ë',\n        keyCode: 235,\n        which: 235\n    },\n    240: {\n        key: 'Alphanumeric',\n        description: 'alphanumeric / ð',\n        keyCode: 240,\n        which: 240\n    },\n    242: {\n        key: 'HiraganaKatakana',\n        description: 'hiragana/katakana / ò',\n        keyCode: 242,\n        which: 242\n    },\n    243: {\n        key: 'ZenkakuHankaku',\n        description: 'half-width/full-width / ó',\n        keyCode: 243,\n        which: 243\n    },\n    244: {\n        key: 'KanjiMode',\n        description: 'kanji / ô',\n        keyCode: 244,\n        which: 244\n    },\n    251: {\n        key: '',\n        description: 'unlock track pad (Chrome/Edge) / û',\n        keyCode: 251,\n        which: 251\n    },\n    255: {\n        key: 'WakeUp',\n        keyCode: 255,\n        which: 255,\n        code: 'WakeUp',\n        location: 0,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        description: 'WakeUp'\n    }\n};\n//# sourceMappingURL=with-events.js.map","import { keyCodesWithEvents } from './with-events.js';\nexport const deadKeyCodeEvents = [\n    Object.assign(Object.assign({}, keyCodesWithEvents[69]), { key: 'Dead' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[85]), { key: 'Dead' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[73]), { key: 'Dead' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[192]), { key: 'Dead', code: 'IntlBackslash' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[78]), { key: 'Dead' })\n];\nexport const deadKeyCodeEventValues = [\n    ...deadKeyCodeEvents,\n    keyCodesWithEvents[161],\n    keyCodesWithEvents[229]\n];\n//# sourceMappingURL=dead.js.map","import { keyCodesWithEvents } from './with-events.js';\nexport const rightMetaKeyCodeEvents = [\n    Object.assign(Object.assign({}, keyCodesWithEvents[16]), { location: 2, code: 'ShiftRight' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[17]), { location: 2, code: 'ControlRight' }),\n    Object.assign(Object.assign({}, keyCodesWithEvents[18]), { location: 2, code: 'AltRight' })\n];\nexport const metaKeyCodeEvents = [\n    keyCodesWithEvents[16],\n    keyCodesWithEvents[17],\n    keyCodesWithEvents[18],\n    keyCodesWithEvents[91],\n    keyCodesWithEvents[92],\n    keyCodesWithEvents[93],\n    keyCodesWithEvents[224],\n    keyCodesWithEvents[225],\n    ...rightMetaKeyCodeEvents\n];\n//# sourceMappingURL=meta.js.map","import { keyCodesWithEvents } from './with-events.js';\nexport const specialCharacters = {\n    '\"': { keyCode: 222, shiftKey: true },\n    '>': { keyCode: 190, shiftKey: true },\n    '?': { keyCode: 191, shiftKey: true },\n    '!': { keyCode: 49, shiftKey: true },\n    '#': { keyCode: 51, shiftKey: true },\n    '%': { keyCode: 53, shiftKey: true },\n    '(': { keyCode: 57, shiftKey: true },\n    '^': { keyCode: 73, altKey: true },\n    '@': { keyCode: 50, shiftKey: true },\n    '&': { keyCode: 55, shiftKey: true },\n    '}': { keyCode: 221, shiftKey: true },\n    '{': { keyCode: 219, shiftKey: true },\n    '±': { keyCode: 187, shiftKey: true },\n    '§': { keyCode: 54, shiftKey: true },\n    '¡': { keyCode: 49, altKey: true },\n    '²': { keyCode: 50, altKey: true },\n    '³': { keyCode: 51, altKey: true },\n    '¤': { keyCode: 52, altKey: true },\n    '€': { keyCode: 53, altKey: true },\n    '¼': { keyCode: 54, altKey: true },\n    '½': { keyCode: 55, altKey: true },\n    '¾': { keyCode: 56, altKey: true },\n    '‘': { keyCode: 57, altKey: true },\n    '’': { keyCode: 48, altKey: true },\n    '¥': { keyCode: 89, altKey: true },\n    '×': { keyCode: 187, altKey: true },\n    ä: { keyCode: 81, altKey: true },\n    å: { keyCode: 87, altKey: true },\n    é: { keyCode: 69, altKey: true },\n    '®': { keyCode: 82, altKey: true },\n    þ: { keyCode: 84, altKey: true },\n    ü: { keyCode: 89, altKey: true },\n    ú: { keyCode: 85, altKey: true },\n    í: { keyCode: 73, altKey: true },\n    ó: { keyCode: 79, altKey: true },\n    ö: { keyCode: 80, altKey: true },\n    '«': { keyCode: 219, altKey: true },\n    '»': { keyCode: 221, altKey: true },\n    á: { keyCode: 65, altKey: true },\n    ß: { keyCode: 83, altKey: true },\n    ð: { keyCode: 68, altKey: true },\n    ø: { keyCode: 76, altKey: true },\n    '¶': { keyCode: 186, altKey: true },\n    '´': { keyCode: 222, altKey: true },\n    '¬': { keyCode: 220, altKey: true },\n    æ: { keyCode: 90, altKey: true },\n    '©': { keyCode: 67, altKey: true },\n    ñ: { keyCode: 78, altKey: true },\n    µ: { keyCode: 77, altKey: true },\n    ç: { keyCode: 188, altKey: true },\n    '¿': { keyCode: 191, altKey: true },\n    Ω: { keyCode: 90, altKey: true },\n    '≈': { keyCode: 88, altKey: true },\n    œ: { keyCode: 81, altKey: true },\n    Σ: { keyCode: 87, altKey: true },\n    '†': { keyCode: 84, altKey: true },\n    '¨': { keyCode: 85, altKey: true },\n    π: { keyCode: 80, altKey: true },\n    ƒ: { keyCode: 70, altKey: true },\n    '˙': { keyCode: 72, altKey: true },\n    '∆': { keyCode: 74, altKey: true },\n    '°': { keyCode: 75, altKey: true },\n    '√': { keyCode: 86, altKey: true },\n    '∫': { keyCode: 66, altKey: true },\n    '~': { keyCode: 78, altKey: true },\n    '™': { keyCode: 50, altKey: true },\n    '£': { keyCode: 51, altKey: true },\n    '¢': { keyCode: 52, altKey: true },\n    '∞': { keyCode: 53, altKey: true },\n    '…': { keyCode: 186, altKey: true },\n    '•': { keyCode: 56, altKey: true },\n    º: { keyCode: 48, altKey: true },\n    '–': { keyCode: 189, altKey: true },\n    '≠': { keyCode: 187, altKey: true },\n    '≤': { keyCode: 190, altKey: true },\n    '≥': { keyCode: 188, altKey: true },\n    '÷': { keyCode: 191, altKey: true },\n    '”': { keyCode: 219, altKey: true },\n    ª: { keyCode: 57, altKey: true },\n    '˚': { keyCode: 72, altKey: true },\n    '∂': { keyCode: 68, altKey: true },\n    '∑': { keyCode: 87, altKey: true },\n    '“': { keyCode: 219, altKey: true },\n    _: { keyCode: 189, shiftKey: true }\n};\nexport const specialCharactersKeyCodeEvents = Object.entries(specialCharacters).map(([key, keyCodeEvent]) => {\n    return Object.assign(Object.assign(Object.assign({}, keyCodesWithEvents[keyCodeEvent.keyCode]), keyCodeEvent), { key, unicode: key });\n});\n//# sourceMappingURL=special-characters.js.map","import { deadKeyCodeEvents } from './dead.js';\nimport { rightMetaKeyCodeEvents } from './meta.js';\nimport { specialCharactersKeyCodeEvents } from './special-characters.js';\nimport { keyCodesWithEvents } from './with-events.js';\nexport const keyCodeEventValues = [\n    ...Object.values(keyCodesWithEvents),\n    ...rightMetaKeyCodeEvents,\n    ...deadKeyCodeEvents,\n    ...specialCharactersKeyCodeEvents\n];\n//# sourceMappingURL=index.js.map","export var StorageType;\n(function (StorageType) {\n    StorageType[\"IN_MEMORY_CACHE\"] = \"inMemoryCache\";\n    StorageType[\"SESSION_STORAGE\"] = \"sessionStorage\";\n    StorageType[\"LOCAL_STORAGE\"] = \"localStorage\";\n})(StorageType || (StorageType = {}));\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageType } from './interfaces/index.js';\nexport * from \"./interfaces/index.js\";\nexport class CacheManager {\n    /**\n     * Recupera ou define o valor no cache.\n     *\n     * @param key Identificador único para armazenar e recuperar o valor.\n     * @param fetchCallback Função que retorna uma `Promise` com o valor a ser armazenado no cache caso ele não exista ou tenha expirado.\n     * @param storageType Tipo de armazenamento: `'inMemoryCache'`, `'sessionStorage'` ou `'localStorage'`.\n     * @returns Uma `Promise` com o valor armazenado ou obtido via `fetchCallback`.\n     */\n    static getOrSet(key, fetchCallback, storageType = StorageType.IN_MEMORY_CACHE) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cache = this.getCache(storageType);\n            if (cache[key]) {\n                return cache[key].data;\n            }\n            const data = yield fetchCallback();\n            cache[key] = { data };\n            this.saveCache(cache, storageType);\n            return data;\n        });\n    }\n    /**\n     * Remove uma entrada específica do cache.\n     *\n     * @param key Identificador único da entrada a ser removida.\n     * @param storageType Tipo de armazenamento: `'inMemoryCache'`, `'sessionStorage'` ou `'localStorage'`.\n     */\n    static clear(key, storageType = StorageType.IN_MEMORY_CACHE) {\n        const cache = this.getCache(storageType);\n        delete cache[key];\n        this.saveCache(cache, storageType);\n    }\n    /**\n     * Remove todas as entradas do cache.\n     *\n     * @param storageType Tipo de armazenamento: `'inMemoryCache'`, `'sessionStorage'` ou `'localStorage'`.\n     */\n    static clearAll(storageType = StorageType.IN_MEMORY_CACHE) {\n        if (storageType === StorageType.IN_MEMORY_CACHE) {\n            this.inMemoryCache.clear();\n        }\n        else {\n            this.getStorage(storageType).removeItem(this.storageKey);\n        }\n    }\n    /**\n     * Obtém o cache armazenado no armazenamento especificado.\n     * @param storageType Tipo de armazenamento: `'inMemoryCache'`, `'sessionStorage'` ou `'localStorage'`.\n     * @returns Um objeto representando o cache armazenado.\n     */\n    static getCache(storageType) {\n        if (storageType === StorageType.IN_MEMORY_CACHE) {\n            return Object.fromEntries(this.inMemoryCache);\n        }\n        const storage = this.getStorage(storageType);\n        const cache = storage.getItem(this.storageKey);\n        return cache ? JSON.parse(cache) : {};\n    }\n    /**\n     * Salva o cache no armazenamento especificado.\n     * @param cache O objeto representando o cache a ser salvo.\n     * @param storageType Tipo de armazenamento: `'inMemoryCache'`, `'sessionStorage'` ou `'localStorage'`.\n     */\n    static saveCache(cache, storageType) {\n        if (storageType === StorageType.IN_MEMORY_CACHE) {\n            this.inMemoryCache = new Map(Object.entries(cache));\n        }\n        else {\n            const storage = this.getStorage(storageType);\n            storage.setItem(this.storageKey, JSON.stringify(cache));\n        }\n    }\n    /**\n     * Retorna o armazenamento correspondente ao tipo especificado.\n     * @param storageType Tipo de armazenamento: `'sessionStorage'` ou `'localStorage'`.\n     * @returns O objeto de armazenamento correspondente.\n     */\n    static getStorage(storageType) {\n        return storageType === StorageType.LOCAL_STORAGE ? localStorage : sessionStorage;\n    }\n}\n/**\n * Nome da chave utilizada para armazenar o cache no armazenamento.\n */\nCacheManager.storageKey = 'cacheManager';\n/**\n * Estrutura de armazenamento em memória.\n */\nCacheManager.inMemoryCache = new Map();\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CacheManager } from './CacheManager/index.js';\nimport { StorageType } from './CacheManager/interfaces/index.js';\nexport class ServiceUtils {\n    /**\n     * Auxilia no uso do CacheManager, gerando automaticamente uma chave de cache com base no identificador.\n     *\n     * @template T Tipo do dado a ser retornado.\n     * @param identifier Identificadores únicos usados para compor a chave de cache.\n     * @param fetchFunction Função que retorna uma `Promise` com o valor a ser armazenado no cache caso ele não exista ou tenha expirado.\n     * @param storageType Tipo de armazenamento: `'sessionStorage'` ou `'localStorage'`. O padrão é `'sessionStorage'`.\n     * @returns Uma `Promise` com o valor armazenado ou obtido via `fetchFunction`.\n     *\n     * @example\n     * ```typescript\n     * const actions = await useCacheWithService(\n     *  `${this.entityName} - ${this.resourceID}`,\n     *   async () => {\n     *     return await fetchActionsFromAPI();\n     *   }\n     * );\n     * console.log(actions);\n     * ```\n     */\n    static useCacheWithService(identifier, fetchFunction, storageType = StorageType.IN_MEMORY_CACHE) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cacheKey = `${identifier}`;\n            return CacheManager.getOrSet(cacheKey, fetchFunction, storageType);\n        });\n    }\n}\n//# sourceMappingURL=ServiceUtils.js.map","/**\n * Define em qual direção o overflow será observado\n */\nexport var OverflowDirection;\n(function (OverflowDirection) {\n    OverflowDirection[OverflowDirection[\"VERTICAL\"] = 0] = \"VERTICAL\";\n    OverflowDirection[OverflowDirection[\"HORIZONTAL\"] = 1] = \"HORIZONTAL\";\n})(OverflowDirection || (OverflowDirection = {}));\n//# sourceMappingURL=overflow-direction.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StringUtils } from \"./StringUtils.js\";\n/**\n* Define os tipos de operação que o locker pode controlar\n*/\nexport var LockManagerOperation;\n(function (LockManagerOperation) {\n    /**\n        Operação de lock utilizada para controlar cliques nos botoes da taskbar.\n    */\n    LockManagerOperation[\"TASKBAR_CLICK\"] = \"taskbar_click\";\n    /**\n        Operação de lock utilizada para controlar carregamento da aplicação.\n    */\n    LockManagerOperation[\"APP_LOADING\"] = \"app_loading\";\n})(LockManagerOperation || (LockManagerOperation = {}));\nexport class LockManager {\n    static buildContextID() {\n        return StringUtils.generateUUID();\n    }\n    static buildLockerID(ctxId, operation) {\n        if (ctxId == undefined)\n            return undefined;\n        let resolvedID = ctxId;\n        if (resolvedID instanceof HTMLElement) {\n            resolvedID = ctxId.getAttribute(LockManager.ATTRIBUTE_NAME);\n            if (!resolvedID)\n                return undefined;\n        }\n        return `${resolvedID}_${operation}`;\n    }\n    /**\n     * Cria um contexto de locker, caso nao exista, para todos elementos pais iniciados com ez- ou snk-.\n     *\n     * @param startElement - Elemento de de onde o lock deve começar.\n     *\n     * @returns - O id do locker, que pode ser usado para iniciar ou aguardar um lock do contexto.\n     */\n    static addLockManagerCtxId(startElement) {\n        var _a;\n        try {\n            if (!startElement) {\n                console.error(\"Elemento inicial não fornecido.\");\n                return \"\";\n            }\n            const ctxId = (_a = LockManager.findExistingCtxId(startElement)) !== null && _a !== void 0 ? _a : LockManager.buildContextID();\n            let currentElement = startElement;\n            LockManager.traverseAndAddAttr(currentElement, ctxId);\n            return ctxId;\n        }\n        catch (err) {\n            console.warn(`Erro ao registrar locks para o elemento: ${startElement === null || startElement === void 0 ? void 0 : startElement.tagName}`, err);\n            return \"\";\n        }\n    }\n    /**\n     * Reseta todos os locks existentes para um determinado contexto e operação de forma assíncrona\n     * @param id - ID do contexto ou elemento HTML contendo contexto\n     * @param operation - Operação específica para resetar os locks\n     * @returns Promise que será resolvida quando todos os locks forem resetados\n     */\n    static resetLocks(id, operation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const lockerId = this.buildLockerID(id, operation);\n            if (!lockerId)\n                return;\n            const currentLocks = this._locks.get(lockerId);\n            if (currentLocks === null || currentLocks === void 0 ? void 0 : currentLocks.length) {\n                yield Promise.all(currentLocks.map(lock => {\n                    var _a;\n                    lock.done = true;\n                    (_a = lock.resolve) === null || _a === void 0 ? void 0 : _a.call(lock);\n                    return lock.promise;\n                }));\n                this._locks.delete(lockerId);\n            }\n        });\n    }\n    /**\n    * Inicia um locker baseado em um contexto e uma operação.\n    *\n    * @param id - Pode ser um ID do contexto de locker, ou, o elemento contendo um contexto de locker.\n    * @param operation - Operação do contexto que o lock deve ser feito.\n    *\n    * @returns - Uma função que fara a liberação do lock.\n    */\n    static lock(id, operation) {\n        var _a;\n        const lockerId = LockManager.buildLockerID(id, operation);\n        if (!lockerId)\n            return () => { };\n        const lock = { done: false };\n        const promise = new Promise(resolve => lock.resolve = resolve);\n        lock.promise = promise;\n        const currentLocks = (_a = LockManager._locks.get(lockerId)) !== null && _a !== void 0 ? _a : [];\n        currentLocks.push(lock);\n        LockManager._locks.set(lockerId, currentLocks);\n        return () => {\n            var _a;\n            lock.done = true;\n            (_a = lock.resolve) === null || _a === void 0 ? void 0 : _a.call(lock);\n        };\n    }\n    /**\n    * Aguarda todos os lockers de um contexto e operação serem resolvidos.\n    *\n    * @param id - Pode ser um ID do contexto de locker, ou, o elemento contendo um contexto de locker.\n    * @param operation - Operação do contexto que devera aguardar.\n    *\n    * @returns - Promise que será resolvida quando todos lockers forem finalizados.\n    */\n    static whenResolve(id, operation, debounce, timeOut) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const lockerId = LockManager.buildLockerID(id, operation);\n            if (!lockerId)\n                return;\n            if (debounce)\n                yield new Promise(resolve => setTimeout(resolve, debounce));\n            const startTime = Date.now();\n            while ((_a = LockManager._locks.get(lockerId)) === null || _a === void 0 ? void 0 : _a.length) {\n                if (timeOut && Date.now() - startTime >= timeOut) {\n                    yield this.resetLocks(id, operation);\n                    return;\n                }\n                const locks = (_b = LockManager._locks.get(lockerId)) !== null && _b !== void 0 ? _b : [];\n                yield Promise.all(locks.map(lock => lock.promise));\n                //Aguarda listeners da tela reagirem as mudancas de estado do dataunit\n                yield new Promise(resolve => setTimeout(resolve, debounce || 200));\n                LockManager._locks.set(lockerId, locks.filter(lock => !lock.done));\n            }\n        });\n    }\n    static whenHasLock(id, operation, timeOut) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const lockerId = LockManager.buildLockerID(id, operation);\n            if (!lockerId)\n                return;\n            const startTime = Date.now();\n            while (!((_a = LockManager._locks.get(lockerId)) === null || _a === void 0 ? void 0 : _a.length)) {\n                if (timeOut && Date.now() - startTime >= timeOut) {\n                    yield this.resetLocks(id, operation);\n                    return;\n                }\n                yield new Promise(resolve => setTimeout(resolve, 200));\n            }\n        });\n    }\n}\nLockManager._locks = new Map();\n/**\n* Nome do atributo que será utilizado para controlar contexto de locks nos elementos da DOM.\n*/\nLockManager.ATTRIBUTE_NAME = \"data-locker-manger-context-id\";\nLockManager.findExistingCtxId = (element) => {\n    let currentElement = element;\n    while (currentElement) {\n        if (currentElement.hasAttribute(LockManager.ATTRIBUTE_NAME)) {\n            return currentElement.getAttribute(LockManager.ATTRIBUTE_NAME);\n        }\n        const childWithCtxId = Array.from(currentElement.children).find(child => (child instanceof HTMLElement) && child.hasAttribute(LockManager.ATTRIBUTE_NAME));\n        if (childWithCtxId) {\n            return childWithCtxId.getAttribute(LockManager.ATTRIBUTE_NAME);\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n};\nLockManager.traverseAndAddAttr = (element, ctxId) => {\n    if (element.tagName.startsWith('EZ-') || element.tagName.startsWith('SNK-')) {\n        element.setAttribute(LockManager.ATTRIBUTE_NAME, ctxId);\n    }\n    Array.from(element.children).forEach((child) => {\n        if (child instanceof HTMLElement) {\n            LockManager.traverseAndAddAttr(child, ctxId);\n        }\n    });\n};\n//# sourceMappingURL=LockManager.js.map","export var RECORD_DATE_FORMAT;\n(function (RECORD_DATE_FORMAT) {\n    RECORD_DATE_FORMAT[\"DD_MM_YYYY\"] = \"DD/MM/YYYY\";\n    RECORD_DATE_FORMAT[\"ISO\"] = \"ISO\";\n})(RECORD_DATE_FORMAT || (RECORD_DATE_FORMAT = {}));\n//# sourceMappingURL=DataUnitInMemoryLoaderConfig.js.map","import { FieldComparator } from '../dataunit/sorting/FieldComparator.js';\nconst COLUMN_FILTER_PATTERN = /FILTRO_COLUNA_(.+)/;\nexport class ColumnFilterManager {\n    static getColumnFilters(filters, fieldName) {\n        const columnFilters = new Map();\n        if (!(filters === null || filters === void 0 ? void 0 : filters.length)) {\n            return columnFilters;\n        }\n        filters.forEach(filter => {\n            const result = COLUMN_FILTER_PATTERN.exec(filter.name);\n            if (result) {\n                if (fieldName !== result[1]) {\n                    columnFilters.set(filter.name, Object.assign({ columnName: result[1] }, filter));\n                }\n            }\n        });\n        return columnFilters;\n    }\n    static getFilterFunction(dataUnit, filters) {\n        if (!(filters === null || filters === void 0 ? void 0 : filters.length))\n            return undefined;\n        return record => {\n            for (const filter of filters) {\n                if (!ColumnFilterManager.recordMatchesFilter(dataUnit, record, filter)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    static recordMatchesFilter(dataUnit, record, columnFilter) {\n        const fieldDescriptor = dataUnit.getField(columnFilter.columnName);\n        if (!columnFilter.params || !fieldDescriptor)\n            return false;\n        const fieldValue = record[columnFilter.columnName];\n        for (let param of columnFilter.params) {\n            const paramValue = dataUnit.valueFromString(columnFilter.columnName, param.value);\n            if (FieldComparator.compareValues(fieldDescriptor, fieldValue, paramValue) === 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static compileDistinct(fieldName, dataUnit) {\n        const request = dataUnit.getLastLoadRequest();\n        let list = dataUnit.records;\n        return this.doCompileDistinct(request, fieldName, dataUnit, list);\n    }\n    static compileDistinctFromArray(fieldName, dataUnit, records) {\n        const request = dataUnit.getLastLoadRequest();\n        return this.doCompileDistinct(request, fieldName, dataUnit, records);\n    }\n    static doCompileDistinct(request, fieldName, dataUnit, list) {\n        var _a;\n        if (request != undefined) {\n            const columnFilters = Array.from(ColumnFilterManager.getColumnFilters((_a = request === null || request === void 0 ? void 0 : request.filters) !== null && _a !== void 0 ? _a : [], fieldName).values());\n            const filterFunction = ColumnFilterManager.getFilterFunction(dataUnit, columnFilters);\n            if (filterFunction != undefined) {\n                list = list.filter(filterFunction);\n            }\n        }\n        const distinct = new Map(list.map(record => {\n            const fieldValue = record[fieldName];\n            if (fieldValue == undefined) {\n                return [null, { label: null, value: null, check: true }];\n            }\n            const item = { label: dataUnit.getFormattedValue(fieldName, fieldValue), value: fieldValue, check: true };\n            return [item.label, item];\n        }));\n        return Array.from(distinct.values());\n    }\n}\n//# sourceMappingURL=ColumnFilterManager.js.map","import { ColumnFilterManager } from '../../../utils/ColumnFilterManager.js';\nimport SortingUtils from '../../../utils/SortingUtils.js';\nexport class DataUnitLoaderUtils {\n    static applyFilter(records, dataUnit, filters) {\n        const columnFilters = ColumnFilterManager.getColumnFilters(filters, \"\");\n        if (!(columnFilters === null || columnFilters === void 0 ? void 0 : columnFilters.size))\n            return records;\n        const filterFunction = ColumnFilterManager.getFilterFunction(dataUnit, Array.from(columnFilters.values()));\n        return (filterFunction) ? records.filter(filterFunction) : records;\n    }\n    static buildLoadDataResponse(recordsIn, dataUnit, request) {\n        var _a, _b;\n        let records = recordsIn ? [...recordsIn] : [];\n        records = DataUnitLoaderUtils.applyFilter(records, dataUnit, (_a = request === null || request === void 0 ? void 0 : request.filters) !== null && _a !== void 0 ? _a : []);\n        records = DataUnitLoaderUtils.applySorting(records, dataUnit, (_b = request === null || request === void 0 ? void 0 : request.sort) !== null && _b !== void 0 ? _b : []);\n        const { offset, limit } = request;\n        const paginationInfoBuilderParams = {\n            recordsLength: records.length,\n            offset,\n            recordsPerPage: limit,\n        };\n        return Promise.resolve({\n            records: DataUnitLoaderUtils.getPagesByRecords(records, offset, limit),\n            paginationInfo: dataUnit.pageSize ? DataUnitLoaderUtils.buildPaginationInfo(paginationInfoBuilderParams) : undefined,\n        });\n    }\n    static applySorting(records, dataUnit, sorting) {\n        if (sorting == undefined || sorting.length == 0) {\n            return records;\n        }\n        const sortingFunction = SortingUtils.getSortingFunction(dataUnit, sorting);\n        if (sortingFunction == undefined) {\n            return records;\n        }\n        return records.sort(sortingFunction);\n    }\n    static getPagesByRecords(records, offset = 0, limit = 0) {\n        if (!records || !records.length || !this.hasValidLimitAndOffset(offset, limit))\n            return [];\n        if (limit === 0 && offset === 0)\n            return records;\n        return records.slice(offset, offset + limit);\n    }\n    static hasValidLimitAndOffset(offset, limit) {\n        return offset >= 0 && limit >= 0;\n    }\n    static buildPaginationInfo({ recordsLength = 0, offset = 0, recordsPerPage = 0 }) {\n        if (!recordsLength) {\n            return { currentPage: 0, firstRecord: 0, lastRecord: 0, total: 0, hasMore: false };\n        }\n        const lastRecordIndex = offset + recordsPerPage;\n        const lastRecord = lastRecordIndex ? Math.min(lastRecordIndex, recordsLength) : recordsLength;\n        return {\n            currentPage: recordsPerPage === 0 ? 0 : Math.ceil(offset / recordsPerPage),\n            firstRecord: offset + 1,\n            lastRecord: lastRecord,\n            total: recordsLength,\n            hasMore: lastRecord < recordsLength,\n        };\n    }\n}\n//# sourceMappingURL=dataUnitLoaderUtils.js.map","import { ChangeOperation, DataType, DataUnit, DateUtils, StringUtils, } from '../../index.js';\nimport { RECORD_DATE_FORMAT } from './DataUnitInMemoryLoaderConfig.js';\nimport { DataUnitLoaderUtils } from './utils/dataUnitLoaderUtils.js';\nexport class DataUnitInMemoryLoader {\n    constructor(metadata, records, config) {\n        var _a, _b;\n        this._initialRecords = [];\n        this.metadata = metadata;\n        this.recordDateFormat = (_a = config === null || config === void 0 ? void 0 : config.recordDateFormat) !== null && _a !== void 0 ? _a : RECORD_DATE_FORMAT.DD_MM_YYYY;\n        this.records = records !== null && records !== void 0 ? records : [];\n        this._dataUnit = new DataUnit(DataUnitInMemoryLoader.IN_MEMORY_DATA_UNIT_NAME);\n        this._dataUnit.pageSize = (_b = config === null || config === void 0 ? void 0 : config.pageSize) !== null && _b !== void 0 ? _b : DataUnitInMemoryLoader.DEFAULT_PAGE_SIZE;\n        this._dataUnit.metadataLoader = () => this.metadaLoader();\n        this._dataUnit.dataLoader = (dataUnit, request) => this.inMemoryLoader(dataUnit, request, this.getRecordsToLoad());\n        this._dataUnit.saveLoader = (_dataUnit, changes) => this.saveLoader(_dataUnit, changes);\n        this._dataUnit.removeLoader = (_dataUnit, recordIds) => this.removeLoader(_dataUnit, recordIds);\n        this.dataUnit.loadMetadata().then(() => {\n            if ((config === null || config === void 0 ? void 0 : config.autoLoad) !== false) {\n                this.dataUnit.loadData();\n            }\n        });\n    }\n    getRecordsToLoad() {\n        if (this._initialRecords == undefined && this.dataUnit.records.length > 0) {\n            this._initialRecords = this.dataUnit.records;\n        }\n        const addedRecords = this.dataUnit.getAddedRecords();\n        if (addedRecords) {\n            return [...this._initialRecords, ...addedRecords];\n        }\n        return this._initialRecords;\n    }\n    get dataUnit() {\n        return this._dataUnit;\n    }\n    get records() {\n        return this.dataUnit.records;\n    }\n    set records(records) {\n        const columns = this.buildColumns();\n        this._initialRecords = this.buildInitialRecords(records, columns);\n        if (!this._dataUnit)\n            return;\n        //Isso força o refresh internamente no datunit\n        this._dataUnit.loadData();\n    }\n    static getConvertedValue(descriptor, strValue, dateFormat) {\n        if (!descriptor)\n            return strValue;\n        if (descriptor.dataType === DataType.BOOLEAN)\n            return strValue === 'S';\n        if (descriptor.dataType === DataType.NUMBER)\n            return Number(strValue);\n        if (descriptor.dataType === DataType.OBJECT)\n            return JSON.parse(strValue);\n        if (descriptor.dataType === DataType.DATE) {\n            return dateFormat === RECORD_DATE_FORMAT.ISO\n                ? DateUtils.validateDate(new Date(strValue), true)\n                : DateUtils.strToDate(strValue, true);\n        }\n        return strValue;\n    }\n    buildColumns() {\n        return this._metadata\n            ? new Map(this._metadata.fields.map(descriptor => [descriptor.name, descriptor]))\n            : undefined;\n    }\n    buildInitialRecords(records, columns) {\n        const newRecords = records === null || records === void 0 ? void 0 : records.map(record => {\n            if (!record['__record__id__']) {\n                record['__record__id__'] = this.generateUniqueId();\n            }\n            if (!columns)\n                return record;\n            for (const fieldName in record) {\n                const value = record[fieldName];\n                const fieldDescriptor = columns.get(fieldName);\n                if (typeof value === 'string' && fieldDescriptor) {\n                    record[fieldName] = DataUnitInMemoryLoader.getConvertedValue(fieldDescriptor, value, this.recordDateFormat);\n                }\n            }\n            return record;\n        });\n        return newRecords;\n    }\n    get metadata() {\n        return this._metadata;\n    }\n    set metadata(metadata) {\n        this._metadata = metadata;\n        if (this._dataUnit) {\n            this._dataUnit.metadata = metadata;\n        }\n    }\n    generateUniqueId() {\n        return StringUtils.generateUUID();\n    }\n    inMemoryLoader(dataUnit, request, recordsIn) {\n        return DataUnitLoaderUtils.buildLoadDataResponse(recordsIn, dataUnit, request);\n    }\n    metadaLoader() {\n        return Promise.resolve(this._metadata);\n    }\n    saveLoader(_dataUnit, changes) {\n        return new Promise((resolve) => {\n            let dataUnitRecords = [];\n            changes.forEach(change => {\n                let { record, updatingFields, operation } = change;\n                const changedRecord = Object.assign(Object.assign({}, record), updatingFields);\n                if (operation === ChangeOperation.INSERT ||\n                    operation === ChangeOperation.COPY) {\n                    changedRecord['__old__id__'] = record['__record__id__'];\n                    changedRecord['__record__id__'] = this.generateUniqueId();\n                    this.records.push(changedRecord);\n                }\n                else {\n                    const recordIndex = this.records.findIndex(r => r['__record__id__'] == changedRecord['__record__id__']);\n                    this.records[recordIndex] = changedRecord;\n                }\n                dataUnitRecords.push(changedRecord);\n            });\n            resolve(dataUnitRecords);\n        });\n    }\n    removeLoader(_dataUnit, recordIds) {\n        return new Promise((resolve) => resolve(recordIds));\n    }\n}\nDataUnitInMemoryLoader.IN_MEMORY_DATA_UNIT_NAME = 'InMemoryDataUnit';\nDataUnitInMemoryLoader.DEFAULT_PAGE_SIZE = 150;\n//# sourceMappingURL=dataUnitInMemoryLoader.js.map"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","NUMBERINPUTS_REGEX_SCIENTIFIC_PARTS","NumberUtils","value","decimals","multiplier","a","b","negative","indexV","indexP","precision","prettyPrecision","defaultValue","newValue","prettyPrecisionInternal","newValueStr","varSettingPP","formatnumber","StringUtils","ObjectUtils","data","property","keyA","keyB","x","y","obj","key","v","k","obj1","obj2","propToCompare","keyPath","previous","current","ArrayUtils","argument","originalArray","alphabeticalSorting","fieldName","normalizedArgument","filteredArray","item","original","fieldA","fieldB","valueStringA","valueStringB","valueIntA","valueIntB","checkerFn","length","index","array","JSUtils","element","rect","callback","timeout","timer","args","context","style","str","uuid","source","text","entities","entity","removeSpecialChars","hash","chr","len","pad","_","p1","p2","match","bytes","units","base","offSet","unit","strNumber","parts","lastPart","lastPartStr","uppercase","lowercase","replaceList","word","wordAux","whiteSpace","charsWithoutAccentuation","char","specialCharsRegex","charList","strFrom","strTo","pos","ch","matchFields","fieldMD","forceMatch","startHighlightTag","endHighlightTag","valueAux","argumentNumber","replacements","lastMatchIndex","cleanText","r","specialChars","regex","sizeMatch","txtToColor","txtColored","start","end","MaskFormatter","mask","expectedFormattedValue","maskPlaceholders","placeholderCount","validValue","placeholder","literalChar","maskElements","valueMapped","maskChar","trimBefore","result","counter","maxCounter","maskFormatter","type","aChar","formatting","literal","message","fixedChar","FloatingEntry","parent","content","opts","FloatingManager","container","node","id","entry","target","event","innerClickFunction","backClickFunction","propertyName","alreadyFloatingIndex","overlayElement","body","className","styleElement","header","currentZIndex","parsedCurrZIndex","highestZIndex","identifier","oldZIndex","acc","curr","DateUtils","date","adjustDayLightSavingTime","newDate","showSeconds","timeOptions","strValue","monthYearMode","day","month","year","hour","min","sec","withTime","today","hasTime","n","sign","TimeFormatter","validationValue","e","isValid","Method","SortMode","DependencyType","UserInterface","DataUnitTransient","getFormattedValue","descriptor","getFileFormat","DataType","getSearchFormat","getOptionFormat","getNumberFormat","getMask","error","toString","_a","_b","codeValue","label","prop","opt","convertType","dataType","getConvertedValue","isSearchField","userInterface","compareValues","valueA","valueB","onlyLabel","useStringForComparison","optionValueA","optionValueB","convertedValueA","convertedValueB","DataUnitAction","payload","Action","StateManager","reducers","action","oldPresent","hasHistChange","reducer","sliceName","isHistoric","oldSlice","newSlice","selector","slice","name","ErrorException","title","errorCode","WaitingChangeException","AddedRecordsReducerImpl","_stateManager","currentState","AddedRecordsReducer","getAddedRecords","stateManager","state","isAddedRecord","recordId","addedRecords","record","prepareAddedRecordId","parentRecordId","prepareCopiedRecord","RemovedRecordsReducerImpl","records","buffered","RemovedRecordsReducer","getRemovedRecords","RecordsReducerImpl","recordsMap","currentRecords","getRecords","removed","newRecords","sr","newRecord","RecordsReducer","SnapshotReducerImpl","currentSnapshot","buildSnapshot","SnapshotReducer","getSnapshot","getCurrentRecords","snapshot","getSelectionRecords","getModifiedRecords","changes","getChanges","added","modifiedIDs","getSelectedRecord","selection","getFieldValue","getChangedFieldValue","oldSnapshot","removedRecords","snapshotRecords","selectionRecords","getSelection","LoadingControlReducerImpl","updatePaginationInfo","LoadingControlReducer","getPaginationInfo","getCurrentRequest","getCurrentPage","paginationInfo","getLastPage","pageSize","hasMorePages","hasPreviousPages","validateNewRecordOperation","count","firstRecord","lastRecord","total","change","isNewRecordOperation","operation","SelectionReducerImpl","lastSelection","updateSavedIds","currentSelection","getItemIndex","selectionSource","SelectionMode","selectionById","SelectionReducer","getSelectionState","getCurrentSelection","getSelectionInfo","currentRequest","SelectionInfo","hasNext","hasPrevious","map","savedRecords","newSelection","selectionState","WaitingCheangesReducerImpl","newState","WaitingChangesReducer","getWaitingChanges","isWaiting","allWC","getBlockingWaitingChanges","getWaitingChangePromisses","wc","ChangesReducerImpl","rChanges","newChanges","ChangesReducer","isDirty","hasDirtyRecords","recordChanges","getChangesToSave","dataUnit","selectedRecords","Change","ChangeOperation","changedFields","recordsById","UnitMetadataReducerImpl","UnitMetadataReducer","getMetadata","getField","md","fmd","HistReducerImpl","_currentState","HistReducer","canUndo","canRedo","DataUnitStorage","dataUnitName","dataUnitKey","InvalidFieldsReducerImpl","makeInvalid","clearRecord","InvalidFieldsReducer","getInvalidFields","getInvalidFieldMessage","invalidFields","recordInvalidFields","newRecorcInvalidFields","LoadingPropertiesImpl","buildNewState","LoadingPropertiesReducer","getLoadingProperties","FieldComparator","field","recordA","recordB","asc","undefinedComparison","isUndefinedA","isUndefinedB","SortingUtils","sorting","sort","sourceFieldName","ServiceCanceledException","SilentException","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","rejected","DataUnit","parentDataUnit","selectedRecord","cancelPagination","isMultipleEdition","provider","request","executionCtx","checkLastFilter","selectFirstRecord","response","fail","lastRequest","metadata","keepSelection","quickFilter","parentRecord","loadDataRequest","page","notifyPromises","child","accept","responses","promises","blockingWaitingChanges","waitingChange","promisses","recordsByDataUnit","dispatchPromisses","ownerDataUnitName","splittedRecords","ownerDataUnit","changesByDataUnit","cause","allChanges","dataUnitChild","silent","recordIds","cachedRecords","removedIds","currentRecordsKeys","removedIndex","nextIndex","selectionAfterRemove","interceptor","info","children","size","selectionInfo","noRecordSelected","suppressCreateNewRecord","typedValue","currentValue","promise","resolvedValue","fields","waitingChanges","addRecords","sortingFunction","act","fromParent","cancelledAction","ignoreChildren","actionType","interceptors","ite","f","detail","observer","valor","chave","filters","p","fieldDescriptor","standAloneField","loadingLockerResolver","allow","targetFieldName","updates","sourceId","mode","ElementIDUtils","suffix","iDInfo","dataElementID","sufix","validAttribute","tagName","uri","matcher","OnboardingUtils","apiKey","ctx","scriptEl","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","transactionDoneMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","receiver","replaceTraps","wrapFunction","func","unwrap","transformCachableValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","proxiedCursor","isIteratorProp","keyCodesWithEvents","deadKeyCodeEvents","rightMetaKeyCodeEvents","specialCharacters","specialCharactersKeyCodeEvents","keyCodeEvent","keyCodeEventValues","StorageType","CacheManager","fetchCallback","storageType","cache","ServiceUtils","fetchFunction","cacheKey","OverflowDirection","LockManagerOperation","LockManager","ctxId","resolvedID","startElement","currentElement","err","lockerId","currentLocks","lock","debounce","timeOut","startTime","locks","childWithCtxId","RECORD_DATE_FORMAT","COLUMN_FILTER_PATTERN","ColumnFilterManager$1","ColumnFilterManager","columnFilters","filter","columnFilter","fieldValue","param","paramValue","list","filterFunction","distinct","DataUnitLoaderUtils","recordsIn","limit","paginationInfoBuilderParams","recordsLength","recordsPerPage","lastRecordIndex","DataUnitInMemoryLoader","config","_dataUnit","columns","dateFormat","dataUnitRecords","updatingFields","changedRecord","recordIndex"],"mappings":"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ACT,MAAO,GACP,KAAM,cACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,OACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,MACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,eACb,QAAS,OACZ,EACD,GAAI,CACA,IAAK,QACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,aAChB,EACD,GAAI,CACA,IAAK,WACL,QAAS,GACT,MAAO,GACP,KAAM,WACN,SAAU,EACV,YAAa,YACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,eACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,QAChB,EACD,GAAI,CACA,IAAK,eACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,OAChB,EACD,GAAI,CACA,IAAK,SACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,SACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,SACL,YAAa,aACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,WACL,YAAa,iBACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,YAAa,UAChB,EACD,GAAI,CACA,IAAK,SACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,UACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,WACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,YACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,MACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,GAAI,CACA,IAAK,OACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,OACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,YACL,QAAS,GACT,MAAO,GACP,KAAM,YACN,SAAU,EACV,YAAa,aACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,UACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,YAAa,WACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,aACL,QAAS,GACT,MAAO,GACP,KAAM,aACN,SAAU,EACV,YAAa,cACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,YACL,QAAS,GACT,MAAO,GACP,KAAM,YACN,SAAU,EACV,YAAa,aACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,SACL,YAAa,SACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,QACL,YAAa,QACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,UACL,YAAa,UACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,MACL,QAAS,GACT,MAAO,GACP,KAAM,MACN,SAAU,EACV,YAAa,+BACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,SACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,SACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,SACL,QAAS,GACT,MAAO,GACP,KAAM,gBACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,SACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,OACL,YAAa,OACb,QAAS,GACT,MAAO,GACP,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,IACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,YAAa,QACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,SACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,YACN,SAAU,EACV,YAAa,6BAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,YAAa,kBAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,OAChB,EACD,GAAI,CACA,IAAK,IACL,YAAa,cACb,QAAS,GACT,MAAO,EACV,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,GAChB,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,OACN,SAAU,EACV,YAAa,IACb,QAAS,EACZ,EACD,GAAI,CACA,IAAK,OACL,QAAS,GACT,MAAO,GACP,KAAM,WACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,+CACb,QAAS,KACZ,EACD,GAAI,CACA,IAAK,OACL,QAAS,GACT,MAAO,GACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,gBACb,QAAS,KACZ,EACD,GAAI,CACA,IAAK,cACL,QAAS,GACT,MAAO,GACP,KAAM,cACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,yBACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,UACL,YAAa,QACb,QAAS,GACT,MAAO,GACP,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,GAAI,CACA,IAAK,IACL,QAAS,GACT,MAAO,GACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,YAAa,eACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,iBACN,SAAU,EACV,YAAa,WACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,gBACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,yBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,iBACN,SAAU,EACV,YAAa,UAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,gBACN,SAAU,EACV,YAAa,eAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,eACN,SAAU,EACV,YAAa,SACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,KACN,SAAU,EACV,YAAa,IAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,QAAS,IACT,MAAO,IACP,KAAM,MACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,KAChB,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,MACL,KAAM,MACN,YAAa,MACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,UACL,QAAS,IACT,MAAO,IACP,KAAM,UACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,WACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,aACL,QAAS,IACT,MAAO,IACP,KAAM,aACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,cACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,GACL,YAAa,gBACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,cACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,OACL,QAAS,IACT,MAAO,IACP,KAAM,eACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,GACL,YAAa,+BACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,cACL,YAAa,wBACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,iBACL,YAAa,uBACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,iBACL,YAAa,kBACb,QAAS,IACT,MAAO,GACV,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,wBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,eACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,WAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,YAAa,oBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,YAAa,8BAChB,EACD,IAAK,CACD,IAAK,kBACL,QAAS,IACT,MAAO,IACP,KAAM,GACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,uBAChB,EACD,IAAK,CACD,IAAK,gBACL,QAAS,IACT,MAAO,IACP,KAAM,GACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,uBAChB,EACD,IAAK,CACD,IAAK,iBACL,QAAS,IACT,MAAO,IACP,KAAM,iBACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,MAChB,EACD,IAAK,CACD,IAAK,qBACL,QAAS,IACT,MAAO,IACP,KAAM,qBACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,UAChB,EACD,IAAK,CACD,IAAK,YACL,YAAa,OACb,QAAS,IACT,MAAO,IACP,QAAS,EACZ,EACD,IAAK,CACD,IAAK,iBACL,QAAS,IACT,MAAO,IACP,KAAM,GACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,YAChB,EACD,IAAK,CACD,IAAK,aACL,QAAS,IACT,MAAO,IACP,KAAM,GACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,SACb,QAAS,GACZ,EACD,IAAK,CACD,IAAK,kBACL,QAAS,IACT,MAAO,IACP,KAAM,aACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,uBAChB,EACD,IAAK,CACD,IAAK,kBACL,QAAS,IACT,MAAO,IACP,KAAM,aACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,iCAChB,EACD,IAAK,CACD,IAAK,gBACL,QAAS,IACT,MAAO,IACP,KAAM,WACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,QAAS,GACT,YAAa,iCAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,gBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,YAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,YAAa,OAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,MAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,SACN,SAAU,EACV,YAAa,QAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,YAAa,mBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,YAAa,6CAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,SACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,WAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,cACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,wBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,cACN,SAAU,EACV,YAAa,cAChB,EACD,IAAK,CACD,IAAK,KACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,YAAa,YAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,eACN,SAAU,EACV,YAAa,mBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,QACN,SAAU,EACV,YAAa,sBAChB,EACD,IAAK,CACD,IAAK,IACL,QAAS,IACT,MAAO,IACP,KAAM,YACN,SAAU,EACV,OAAQ,GACR,QAAS,GACT,QAAS,GACT,SAAU,GACV,YAAa,GAChB,EACD,IAAK,CACD,IAAK,OACL,QAAS,IACT,MAAO,IACP,KAAM,SACN,QAAS,GACT,SA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55]}
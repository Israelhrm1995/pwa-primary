import{b as o,d as r,e as d,i as c}from"./index-BH6w_YlO.js";import{N as a,S as g,E as n}from"./dataUnitInMemoryLoader-CwDmnNwL.js";import{C as m}from"./CSSVarsUtils-acba92d7-BCgqr3Ak.js";const p=":host{--ez-number-input__min-width:0px;--ez-number-input__max-width:100%;display:block;width:100%}.number__input{height:100%;min-width:var(--ez-number-input__min-width);max-width:var(--ez-number-input__max-width)}",f=class{constructor(e){o(this,e),this.ezChange=r(this,"ezChange"),this.ezStartChange=r(this,"ezStartChange"),this.ezCancelWaitingChange=r(this,"ezCancelWaitingChange"),this._focused=!1,this._changePending=!1,this._valuePromiseCallbacks=[],this._value=void 0,this.label=void 0,this.value=void 0,this.enabled=!0,this.canShowError=!0,this.errorMessage=void 0,this.allowNegative=!0,this.precision=void 0,this.prettyPrecision=void 0,this.mode="regular",this.autoFocus=!1,this.alternativePlaceholder=void 0}async setFocus(e){this._textInput.setFocus(e)}async setBlur(){this._textInput.setBlur()}async isInvalid(){return typeof this.errorMessage=="string"&&this.errorMessage.trim()!==""}async getValueAsync(){return this._changePending?new Promise(e=>{this._valuePromiseCallbacks.push(e)}):Promise.resolve(this.value)}observeLabel(){this._textInput&&(this._textInput.label=this.label)}observeErrorMessage(){var e;this._textInput&&(this._textInput.errorMessage=this.errorMessage,!((e=this.errorMessage)===null||e===void 0)&&e.trim()||this.setInputValue())}observeValue(e,t){this._textInput&&e!=t&&this.handleNewValue(e,t),this._changePending=!1}observePrecision(){this._textInput&&this.setInputValue()}handleNewValue(e,t){const s=this.validateValue(e),u=this.validateValue(t);if(s===null&&(this._value=""),s===u)return;const i=this.getTextValue(s)||"",l=this.getParsedNumber(i);(this._value||"")!==i&&(l!==void 0||!this._focused)&&(this._value=i,this._focused=!1,this.errorMessage="");const h=s===null?void 0:s;this.ezChange.emit(h)}validateValue(e){return isNaN(e)||e===void 0?null:e}getTextValue(e){if(e==null)return;let t=this.precision>=0?a.format(e.toString(),Number(this.precision),Number(this.prettyPrecision)):e.toString();return this.precision===0?g.replaceAll(t,".",""):t}changeValue(e){this.errorMessage="",this.value!=e?this.value=e===void 0?null:e:(this.setInputValue(),this.ezCancelWaitingChange.emit())}setError(e){this.value=null,this.errorMessage=e,this.ezCancelWaitingChange.emit()}handleBlur(){if(this._changePending)try{const e=this.getParsedNumber();if(e!==void 0&&isNaN(e))this.setError("O valor digitado não é um número válido");else try{this.changeValue(e)}catch(t){this.setError(t.message);return}}finally{for(const e of this._valuePromiseCallbacks)e(this.value);this._valuePromiseCallbacks=[]}}handleInput(){this.getParsedNumber()!==this.value&&(this._focused=!0,this._changePending=!0,this.ezStartChange.emit({waitmessage:"",blocking:!1}))}getParsedNumber(e=this._textInput.value){return e!=null&&e.trim()?a.stringToNumber(e):void 0}setInputValue(){const e=this.getTextValue(this.value)||"";(this._value||"")!==e&&(this._value=e,this._textInput.value=this._value)}componentDidLoad(){m.applyVarsTextInput(this._elem,this._textInput),this.setInputValue(),this.autoFocus&&requestAnimationFrame(()=>{this.setFocus({selectText:!0})})}render(){n.addIDInfoIfNotExists(this._elem,"input");let e=this.precision>0?"0123456789,.":"0123456789";return this.allowNegative&&(e+="-"),d("ez-text-input",{class:"number__input","data-element-id":n.getInternalIDInfo("textInput"),ref:t=>this._textInput=t,"data-slave-mode":"true",label:this.label,onBlur:()=>this.handleBlur(),onInput:()=>this.handleInput(),restrict:e,enabled:this.enabled,errorMessage:this.errorMessage,mode:this.mode,canShowError:this.canShowError,value:this._value,alternativePlaceholder:this.alternativePlaceholder})}get _elem(){return c(this)}static get watchers(){return{label:["observeLabel"],errorMessage:["observeErrorMessage"],value:["observeValue"],precision:["observePrecision"],prettyPrecision:["observePrecision"]}}};f.style=p;export{f as ez_number_input};
//# sourceMappingURL=ez-number-input.entry-DxTDpbpf.js.map

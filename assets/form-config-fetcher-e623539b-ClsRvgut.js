import{d as y,D as s}from"./DataFetcher-db08cad0-YRT7v6X1.js";import{O as d}from"./dataUnitInMemoryLoader-CwDmnNwL.js";class f{constructor(){this.templateByQuery=new Map,this.buldTemplates()}buldTemplates(){this.templateByQuery.set("fetchResource",y.gql`query($name: String!) {
                    $queryAlias$: fetchResource(name: $name){
                        resource
                    }
                  }`),this.templateByQuery.set("saveResource",y.gql`mutation($resource: InputResource!) {
                $queryAlias$: saveResource(resource: $resource){
                    name
                    resource                    
                }
              }`)}loadResource(e){if(f._loadingResource.has(e))return f._loadingResource.get(e);const t=new Promise((r,i)=>{s.get().callGraphQL({values:{name:e},query:this.templateByQuery.get("fetchResource")}).then(a=>{r(a==null?void 0:a.resource),f._loadingResource.delete(e)}).catch(a=>{i(a),f._loadingResource.delete(e)})});return f._loadingResource.set(e,t),t}saveResource(e,t){return new Promise((r,i)=>{s.get().callGraphQL({values:{resource:{name:t,resource:JSON.stringify(e)}},query:this.templateByQuery.get("saveResource")}).then(a=>{r(a)}).catch(a=>{i(a)})})}}f._loadingResource=new Map;class q extends f{constructor(){super(),this.queryConfig=new Map,this.buildTemplatesConfig()}buildTemplatesConfig(){this.queryConfig.set("fetchUserAvailableConfigs",y.gql`query($name: String!) {
                    $queryAlias$: fetchUserAvailableConfigs(name: $name){
                        name
                        origin
                        key
                  }
                }`),this.queryConfig.set("fetchLegacyConfig",y.gql`query($name: String!) {
                    $queryAlias$: fetchLegacyConfig(name: $name){
                        name
                        resource
                  }
                }`),this.queryConfig.set("fetchDefaultConfig",y.gql`query($name: String!) {
                    $queryAlias$: fetchDefaultConfig(name: $name){
                        name
                        resource
                  }
                }`)}loadFormConfig(e,t){return new Promise((r,i)=>{Promise.all([this.loadResource(this.getPath(t,e)),this.loadResource(this.getPath(`FormCardState:${t}`,e,"form-card")),this.loadResource(this.getPath(t,e,"summary")),this.loadResource(this.getPath(t,e,"defaultValues"))]).then(([a,o,l,p])=>{let n;if(a!=null){n=Object.assign(Object.assign({},JSON.parse(a)),{emptyConfig:!1});const{tabs:v,fields:g}=n;if(v){const c=new Map(v.map(u=>[u.label,u]));g==null||g.forEach(u=>{var h;return u.tab=((h=c.get(this.getTabName(u.tab)))===null||h===void 0?void 0:h.label)||c.get(this.getTabName(u.tab))})}n.fields=g==null?void 0:g.map(c=>{if("readonly"in c){const u=c.readonly===!0;delete c.readonly,c.readOnly=u}return c})}o!=null&&(n==null&&(n={emptyConfig:!0,fields:[]}),n.cardsState=new Map(JSON.parse(o))),l!=null&&(n==null&&(n={emptyConfig:!0,fields:[]}),n.summary=new Map(Object.entries(JSON.parse(l)))),p!=null&&(n==null&&(n={emptyConfig:!0,fields:[]}),n.defaultVars=new Map(Object.entries(JSON.parse(p)))),r(n)}).catch(a=>{i(a)})})}getTabName(e){return typeof e=="object"?e.label:e}saveCardState(e,t,r){const i=this.getPath(`FormCardState:${r}`,t,"form-card");return new Promise((a,o)=>{this.saveResource(Array.from(e.entries()),i).then(l=>{a(new Map(JSON.parse(l.resource)))}).catch(l=>{o(l)})})}saveConfig(e,t,r){delete e.cardsState,delete e.defaultVars,delete e.summary;const i=this.getPath(r,t);return new Promise((a,o)=>{this.saveResource(e,i).then(l=>{a(JSON.parse(l.resource))}).catch(l=>{o(l)})})}fetchUserAvailableConfigs(e,t){const r=this.getPath(t,e);return new Promise((i,a)=>{s.get().callGraphQL({values:{name:r},query:this.queryConfig.get("fetchUserAvailableConfigs")}).then(o=>{i(o)}).catch(o=>{a(o)})})}fetchLegacyConfig(e,t){const r=this.getPath(t,e);return new Promise((i,a)=>{s.get().callGraphQL({values:{name:r},query:this.queryConfig.get("fetchLegacyConfig")}).then(o=>{i(d.stringToObject((o==null?void 0:o.resource)||""))}).catch(o=>{a(o)})})}fetchDefaultConfig(e,t){const r=this.getPath(t,e);return new Promise((i,a)=>{s.get().callGraphQL({values:{name:r},query:this.queryConfig.get("fetchDefaultConfig")}).then(o=>{o!=null&&o.resource||i(null),i(d.stringToObject(o==null?void 0:o.resource))}).catch(o=>{a(o)})})}getPath(e,t,r="form"){return t?`cfg://${r}/${e}/${t}`:`cfg://${r}/${e}`}async fetchLegacyConfigurableForm(e){const t={requestBody:{config:{chave:e,tipo:"T"}}},r=await s.get().callServiceBroker("SystemUtilsSP.getConf",JSON.stringify(t));if(!d.isEmpty(r))return this.buildLegacyConfigurableForm(r)}async fetchSimpleFormConfig(e){const t={requestBody:{formConfig:{configName:e}}},r=await s.get().callServiceBroker("FormConfig.getFormConfig",JSON.stringify(t));return this.processConfig(r)}async saveSimpleFormConfig(e,t){const r=this.buildSaveSimpleFormConfigPayload(e,t),i=await s.get().callServiceBroker("FormConfig.saveFormConfig",JSON.stringify(r));this.processConfig(i)}processConfig(e){return d.isEmpty(e)?[]:this.getResponseAsArray(e).map(r=>r.name)}getResponseAsArray(e){var t,r,i;const a=(i=(r=(t=e==null?void 0:e.formConfig)===null||t===void 0?void 0:t.layout)===null||r===void 0?void 0:r.field)!==null&&i!==void 0?i:[];return Array.isArray(a)?a:[a]}buildSaveSimpleFormConfigPayload(e,t){const r=t.map(i=>({name:i}));return{formConfig:{configName:e,layout:{field:r},metadata:{field:[]}}}}async restoreFormConfig(e){const t={requestBody:{formConfig:{configName:e}}};await s.get().callServiceBroker("FormConfig.restoreFormConfig",JSON.stringify(t))}buildLegacyConfigurableForm(e){var t,r,i;const a=(i=(r=(t=e==null?void 0:e.formConfig)===null||t===void 0?void 0:t.layout)===null||r===void 0?void 0:r.field)!==null&&i!==void 0?i:[];return{emptyConfig:!1,fields:Array.isArray(a)?a:[a]}}async fetchLayoutFormConfig(e){const t={requestBody:{config:{chave:e,tipo:"T"}}},r=await s.get().callServiceBroker("SystemUtilsSP.getConf",JSON.stringify(t));if(!d.isEmpty(r))return r.config}async saveLayoutFormConfig(e,t){const r={requestBody:{config:Object.assign(Object.assign({},t),{chave:e,tipo:"T"})}},i=await s.get().callServiceBroker("SystemUtilsSP.saveConf",JSON.stringify(r));if(!d.isEmpty(i))return i}}var C;(function(m){m.USER="USER",m.DEFAULT="DEFAULT",m.SHARED="SHARED"})(C||(C={}));export{q as F,f as R,C as U};

{"version":3,"file":"form-config-fetcher-e623539b-VBVHUPpx.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/form-config-fetcher-e623539b.js"],"sourcesContent":["import { d as dist, D as DataFetcher } from './DataFetcher-db08cad0.js';\nimport { ObjectUtils } from '@sankhyalabs/core';\n\nclass ResourceFetcher {\n  constructor() {\n    this.templateByQuery = new Map();\n    this.buldTemplates();\n  }\n  buldTemplates() {\n    this.templateByQuery.set(\"fetchResource\", dist.gql `query($name: String!) {\n                    $queryAlias$: fetchResource(name: $name){\n                        resource\n                    }\n                  }`);\n    this.templateByQuery.set(\"saveResource\", dist.gql `mutation($resource: InputResource!) {\n                $queryAlias$: saveResource(resource: $resource){\n                    name\n                    resource                    \n                }\n              }`);\n  }\n  loadResource(name) {\n    if (ResourceFetcher._loadingResource.has(name)) {\n      return ResourceFetcher._loadingResource.get(name);\n    }\n    const promiseLoadResource = new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name },\n        query: this.templateByQuery.get(\"fetchResource\"),\n      })\n        .then((result) => {\n        resolve(result === null || result === void 0 ? void 0 : result.resource);\n        ResourceFetcher._loadingResource.delete(name);\n      })\n        .catch((error) => {\n        reject(error);\n        ResourceFetcher._loadingResource.delete(name);\n      });\n    });\n    ResourceFetcher._loadingResource.set(name, promiseLoadResource);\n    return promiseLoadResource;\n  }\n  saveResource(resource, name) {\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: {\n          resource: {\n            name: name,\n            resource: JSON.stringify(resource)\n          }\n        },\n        query: this.templateByQuery.get(\"saveResource\")\n      })\n        .then((resp) => {\n        resolve(resp);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n}\nResourceFetcher._loadingResource = new Map();\n\nclass FormConfigFetcher extends ResourceFetcher {\n  constructor() {\n    super();\n    this.queryConfig = new Map();\n    this.buildTemplatesConfig();\n  }\n  buildTemplatesConfig() {\n    this.queryConfig.set(\"fetchUserAvailableConfigs\", dist.gql `query($name: String!) {\n                    $queryAlias$: fetchUserAvailableConfigs(name: $name){\n                        name\n                        origin\n                        key\n                  }\n                }`);\n    this.queryConfig.set(\"fetchLegacyConfig\", dist.gql `query($name: String!) {\n                    $queryAlias$: fetchLegacyConfig(name: $name){\n                        name\n                        resource\n                  }\n                }`);\n    this.queryConfig.set(\"fetchDefaultConfig\", dist.gql `query($name: String!) {\n                    $queryAlias$: fetchDefaultConfig(name: $name){\n                        name\n                        resource\n                  }\n                }`);\n  }\n  loadFormConfig(formName, resourceID) {\n    return new Promise((accept, reject) => {\n      Promise.all([\n        this.loadResource(this.getPath(resourceID, formName)),\n        this.loadResource(this.getPath(`FormCardState:${resourceID}`, formName, \"form-card\")),\n        this.loadResource(this.getPath(resourceID, formName, \"summary\")),\n        this.loadResource(this.getPath(resourceID, formName, \"defaultValues\"))\n      ])\n        .then(([configAsString, formCardState, summary, defaultValues]) => {\n        let config;\n        if (configAsString != undefined) {\n          config = Object.assign(Object.assign({}, JSON.parse(configAsString)), { emptyConfig: false });\n          const { tabs, fields } = config;\n          if (tabs) {\n            const allTabs = new Map(tabs.map(t => [t.label, t]));\n            fields === null || fields === void 0 ? void 0 : fields.forEach(f => { var _a; return f.tab = ((_a = allTabs.get(this.getTabName(f.tab))) === null || _a === void 0 ? void 0 : _a.label) || allTabs.get(this.getTabName(f.tab)); });\n          }\n          config.fields = fields === null || fields === void 0 ? void 0 : fields.map((field) => {\n            if (\"readonly\" in field) {\n              const readOnly = field['readonly'] === true;\n              delete field['readonly'];\n              field.readOnly = readOnly;\n            }\n            return field;\n          });\n        }\n        if (formCardState != undefined) {\n          if (config == undefined) {\n            config = { emptyConfig: true, fields: [] };\n          }\n          config.cardsState = new Map(JSON.parse(formCardState));\n        }\n        if (summary != undefined) {\n          if (config == undefined) {\n            config = { emptyConfig: true, fields: [] };\n          }\n          config.summary = new Map(Object.entries(JSON.parse(summary)));\n        }\n        if (defaultValues != undefined) {\n          if (config == undefined) {\n            config = { emptyConfig: true, fields: [] };\n          }\n          config.defaultVars = new Map(Object.entries(JSON.parse(defaultValues)));\n        }\n        accept(config);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  getTabName(tab) {\n    if (typeof tab === 'object') { // ITabConfig type\n      return tab.label;\n    }\n    return tab; //string type\n  }\n  saveCardState(cardsState, formName, resourceID) {\n    const completePath = this.getPath(`FormCardState:${resourceID}`, formName, \"form-card\");\n    return new Promise((resolve, reject) => {\n      this.saveResource(Array.from(cardsState.entries()), completePath)\n        .then((resp) => {\n        resolve(new Map(JSON.parse(resp.resource)));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  saveConfig(config, formName, resourceID) {\n    //Essas informações não devem ser salvas na configuração\n    delete config.cardsState;\n    delete config.defaultVars;\n    delete config.summary;\n    const completePath = this.getPath(resourceID, formName);\n    return new Promise((resolve, reject) => {\n      this.saveResource(config, completePath)\n        .then((resp) => {\n        resolve(JSON.parse(resp.resource));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  fetchUserAvailableConfigs(formName, resourceID) {\n    const name = this.getPath(resourceID, formName);\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name },\n        query: this.queryConfig.get(\"fetchUserAvailableConfigs\"),\n      })\n        .then((result) => {\n        resolve(result);\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  fetchLegacyConfig(formName, resourceID) {\n    const name = this.getPath(resourceID, formName);\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name },\n        query: this.queryConfig.get(\"fetchLegacyConfig\"),\n      })\n        .then((result) => {\n        resolve(ObjectUtils.stringToObject((result === null || result === void 0 ? void 0 : result.resource) || ''));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  fetchDefaultConfig(formName, resourceID) {\n    const name = this.getPath(resourceID, formName);\n    return new Promise((resolve, reject) => {\n      DataFetcher.get()\n        .callGraphQL({\n        values: { name },\n        query: this.queryConfig.get(\"fetchDefaultConfig\"),\n      })\n        .then((result) => {\n        if (!(result === null || result === void 0 ? void 0 : result.resource)) {\n          resolve(null);\n        }\n        resolve(ObjectUtils.stringToObject(result === null || result === void 0 ? void 0 : result.resource));\n      })\n        .catch((error) => {\n        reject(error);\n      });\n    });\n  }\n  getPath(resourceID, name, authority = \"form\") {\n    if (name) {\n      return `cfg://${authority}/${resourceID}/${name}`;\n    }\n    return `cfg://${authority}/${resourceID}`;\n  }\n  async fetchLegacyConfigurableForm(configName) {\n    const payload = { 'requestBody': { 'config': { 'chave': configName, 'tipo': 'T' } } };\n    const response = await DataFetcher.get().callServiceBroker('SystemUtilsSP.getConf', JSON.stringify(payload));\n    if (ObjectUtils.isEmpty(response))\n      return undefined;\n    return this.buildLegacyConfigurableForm(response);\n  }\n  async fetchSimpleFormConfig(configName) {\n    const payload = { 'requestBody': { 'formConfig': { 'configName': configName } } };\n    const response = await DataFetcher.get().callServiceBroker('FormConfig.getFormConfig', JSON.stringify(payload));\n    return this.processConfig(response);\n  }\n  async saveSimpleFormConfig(configName, fieldList) {\n    const payload = this.buildSaveSimpleFormConfigPayload(configName, fieldList);\n    const response = await DataFetcher.get().callServiceBroker('FormConfig.saveFormConfig', JSON.stringify(payload));\n    this.processConfig(response);\n  }\n  processConfig(response) {\n    if (ObjectUtils.isEmpty(response))\n      return [];\n    const fields = this.getResponseAsArray(response);\n    return fields.map(field => field.name);\n  }\n  getResponseAsArray(response) {\n    var _a, _b, _c;\n    const rawFields = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.formConfig) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.field) !== null && _c !== void 0 ? _c : [];\n    return Array.isArray(rawFields) ? rawFields : [rawFields];\n  }\n  buildSaveSimpleFormConfigPayload(configName, fieldNameList) {\n    const fieldList = fieldNameList.map(fieldName => { return { name: fieldName }; });\n    return {\n      formConfig: {\n        configName,\n        layout: {\n          field: fieldList,\n        },\n        metadata: { field: [] },\n      }\n    };\n  }\n  async restoreFormConfig(configName) {\n    const payload = { 'requestBody': { 'formConfig': { 'configName': configName } } };\n    await DataFetcher.get().callServiceBroker('FormConfig.restoreFormConfig', JSON.stringify(payload));\n  }\n  buildLegacyConfigurableForm(config) {\n    var _a, _b, _c;\n    const rawFields = (_c = (_b = (_a = config === null || config === void 0 ? void 0 : config.formConfig) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.field) !== null && _c !== void 0 ? _c : [];\n    return { emptyConfig: false, fields: Array.isArray(rawFields) ? rawFields : [rawFields] };\n  }\n  async fetchLayoutFormConfig(configName) {\n    const payload = { 'requestBody': { 'config': { 'chave': configName, 'tipo': 'T' } } };\n    const response = await DataFetcher.get().callServiceBroker('SystemUtilsSP.getConf', JSON.stringify(payload));\n    if (ObjectUtils.isEmpty(response))\n      return undefined;\n    return response.config;\n  }\n  async saveLayoutFormConfig(configName, config) {\n    const payload = { 'requestBody': { 'config': Object.assign(Object.assign({}, config), { 'chave': configName, 'tipo': 'T' }) } };\n    const response = await DataFetcher.get().callServiceBroker('SystemUtilsSP.saveConf', JSON.stringify(payload));\n    if (ObjectUtils.isEmpty(response))\n      return undefined;\n    return response;\n  }\n}\nvar UserConfigType;\n(function (UserConfigType) {\n  UserConfigType[\"USER\"] = \"USER\";\n  UserConfigType[\"DEFAULT\"] = \"DEFAULT\";\n  UserConfigType[\"SHARED\"] = \"SHARED\";\n})(UserConfigType || (UserConfigType = {}));\n\nexport { FormConfigFetcher as F, ResourceFetcher as R, UserConfigType as U };\n"],"names":["ResourceFetcher","dist","name","promiseLoadResource","resolve","reject","DataFetcher","result","error","resource","resp","FormConfigFetcher","formName","resourceID","accept","configAsString","formCardState","summary","defaultValues","config","tabs","fields","allTabs","t","f","_a","field","readOnly","tab","cardsState","completePath","ObjectUtils","authority","configName","payload","response","fieldList","_b","_c","rawFields","fieldNameList","fieldName","UserConfigType"],"mappings":"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","x_google_ignoreList":[0]}
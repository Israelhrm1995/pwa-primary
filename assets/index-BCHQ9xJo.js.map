{"version":3,"file":"index-BCHQ9xJo.js","sources":["../../node_modules/@sankhyalabs/core/dist/utils/ElementUtils.js","../../node_modules/@sankhyalabs/core/dist/utils/OverflowWatcher/index.js"],"sourcesContent":["import { OverflowDirection } from './OverflowWatcher/types/overflow-direction.js';\nexport function calcMarginSize(el, scrollDirection) {\n    const computedStyle = getComputedStyle(el);\n    if (OverflowDirection.HORIZONTAL === scrollDirection) {\n        return (parseInt(computedStyle.marginLeft || '0') + parseInt(computedStyle.marginRight || '0'));\n    }\n    return (parseInt(computedStyle.marginTop || '0') + parseInt(computedStyle.marginBottom || '0'));\n}\n//# sourceMappingURL=ElementUtils.js.map","import { JSUtils } from \"../JSUtils.js\";\nimport { OverflowDirection } from \"./types/overflow-direction.js\";\nimport { calcMarginSize } from '../ElementUtils.js';\nexport * from \"./types/overflow-direction.js\";\nexport * from \"./types/overflow-callback.js\";\nexport const OVERFLOWED_CLASS_NAME = 'overflowed';\nexport default class OverflowWatcher {\n    /**\n     * Cria uma instancia do OverflowWatcher\n     *\n     * @param element - Elemento HTML que o overflow será observado.\n     * @param callback - Função que sera chamada quando ocorrer overflow no elemento.\n     * @param overFlowDirection - Indica direção que o overflow será monitorado.\n     * @param deltaSize - Variação de tamanho que será considerada como overflow.\n     * @param debounce - Tempo até execução do callback em milissegundos.\n     * @param notOverFlow - Lista de ids ou data-element-ids dos elementos que não devem sofrer overFlow.\n     */\n    constructor({ element, callback, overFlowDirection = OverflowDirection.HORIZONTAL, debounce = 200, deltaSize = 0, notOverFlow = [] }) {\n        this._lastContainerSize = undefined;\n        this._lastContainerInstance = undefined;\n        this._scrollDirection = OverflowDirection.HORIZONTAL;\n        this._hiddenItemsProps = new Map();\n        this._notOverFlowPros = new Map();\n        this._notOverFlow = [];\n        this.DATA_ELEMENT_ID = 'data-element-id';\n        this._onResize = callback;\n        this._scrollDirection = overFlowDirection;\n        this._propSize = (OverflowDirection.HORIZONTAL === overFlowDirection) ? \"width\" : \"height\";\n        this._resizeObserver = new ResizeObserver(JSUtils.debounce((entries) => this.handleResize(entries), debounce));\n        this._resizeObserver.observe(element);\n        this._deltaSize = deltaSize;\n        this._notOverFlow = notOverFlow;\n    }\n    addNotOverFlowElement(elementId) {\n        if (!this._notOverFlow.includes(elementId)) {\n            this._notOverFlow.push(elementId);\n        }\n    }\n    destroy() {\n        this._resizeObserver.disconnect();\n    }\n    forceUpdate() {\n        if (this._lastContainerSize && this._lastContainerInstance) {\n            this.updateOverFlowedItems(this._lastContainerInstance, this._lastContainerSize);\n        }\n    }\n    handleResize(entries) {\n        if (!entries || entries.length === 0)\n            return;\n        const container = entries[0];\n        const containerSize = container.contentRect[this._propSize];\n        if (!containerSize)\n            return;\n        if (this.hasChangedSize(containerSize)) {\n            this.updateOverFlowedItems(container.target, containerSize);\n        }\n    }\n    updateOverFlowedItems(container, containerSize) {\n        const children = Array.from(container.children);\n        this.registerNotOverflowProps(children);\n        this.proccessElements(containerSize, children);\n        this._lastContainerSize = containerSize;\n        this._lastContainerInstance = container;\n    }\n    registerNotOverflowProps(children) {\n        children.forEach(childElement => {\n            const id = childElement.id || this.getDataElementId(childElement);\n            if (this.canNotRegisterNotOverFlow(id))\n                return;\n            this._notOverFlowPros.set(id, this.getElementSizeProps(childElement));\n        });\n    }\n    canNotRegisterNotOverFlow(id) {\n        return !id || !this._notOverFlow.includes(id);\n    }\n    hasChangedSize(elementSize) {\n        if (!this._lastContainerSize)\n            return true;\n        const variation = elementSize - this._lastContainerSize;\n        if (variation < 0) {\n            const absoluteVariation = Math.abs(variation);\n            return (absoluteVariation > this._deltaSize);\n        }\n        return variation > 0;\n    }\n    proccessElements(elementSize, children) {\n        if (children.length === 0)\n            return;\n        const childrenSize = this.calcChildrenSize(children);\n        let diff = Number((elementSize - childrenSize).toFixed(4));\n        if (diff > 0) {\n            this.clearOverFlow();\n            return;\n        }\n        this.proccessElementsOverFlow(children, elementSize);\n    }\n    clearOverFlow() {\n        this._hiddenItemsProps = new Map();\n        this._onResize([]);\n    }\n    proccessElementsOverFlow(allElements, avaliableSize) {\n        const elementsThatFit = [];\n        const avaliableSizeConsideringDelta = (avaliableSize - this._deltaSize);\n        let sumElementsSize = 0;\n        for (const element of allElements) {\n            sumElementsSize += this.calcElementSize(element);\n            if (this.exceedsAvaliableSize(sumElementsSize, elementsThatFit, avaliableSizeConsideringDelta))\n                break;\n            elementsThatFit.push(element);\n        }\n        const overFlowedElements = allElements.filter(element => this.isElementOverFlowing(elementsThatFit, element));\n        overFlowedElements.forEach(overFlowed => {\n            if (!this._hiddenItemsProps.has(overFlowed)) {\n                this.registerElementSize(overFlowed);\n            }\n        });\n        this._onResize(overFlowedElements);\n    }\n    isElementOverFlowing(elementsThatFit, element) {\n        return !elementsThatFit.includes(element) && this.canOverFlowElement(element);\n    }\n    canOverFlowElement(element) {\n        return !this._notOverFlow.includes(element.id)\n            && !this._notOverFlow.includes(this.getDataElementId(element));\n    }\n    getDataElementId(element) {\n        var _a;\n        return (_a = element.getAttribute('data-element-id')) !== null && _a !== void 0 ? _a : \"\";\n    }\n    exceedsAvaliableSize(sumElementsSize, elements, avaliableSize) {\n        if (!this._notOverFlow.length)\n            return sumElementsSize > avaliableSize;\n        const elementIdsToCalculate = this.canNotOverFlowNotIncludedIds(elements);\n        if (!elementIdsToCalculate.length)\n            return sumElementsSize > avaliableSize;\n        const variation = this.calculateVariation(elementIdsToCalculate);\n        const occupiedSize = sumElementsSize + variation;\n        return occupiedSize > avaliableSize;\n    }\n    calculateVariation(elementIdsToCalculate) {\n        let variation = 0;\n        elementIdsToCalculate.forEach(id => {\n            var _a, _b;\n            const sizeProps = this._notOverFlowPros.get(id);\n            variation += (_a = sizeProps === null || sizeProps === void 0 ? void 0 : sizeProps.size) !== null && _a !== void 0 ? _a : 0;\n            variation += (_b = sizeProps === null || sizeProps === void 0 ? void 0 : sizeProps.margin) !== null && _b !== void 0 ? _b : 0;\n        });\n        return variation;\n    }\n    canNotOverFlowNotIncludedIds(elements) {\n        const elementsIdList = elements.map(el => el.id || this.getDataElementId(el)).filter(id => !!id);\n        return this._notOverFlow.filter(id => !elementsIdList.includes(id));\n    }\n    registerElementSize(element) {\n        const sizeProps = this.getElementSizeProps(element);\n        this._hiddenItemsProps.set(element, sizeProps);\n    }\n    getElementSizeProps(element) {\n        const sizeProps = {\n            size: element.getBoundingClientRect()[this._propSize],\n            margin: calcMarginSize(element, this._scrollDirection),\n        };\n        return sizeProps;\n    }\n    calcChildrenSize(children) {\n        let sumChildren = 0;\n        sumChildren += this._deltaSize;\n        Array.from(children).forEach(el => sumChildren += this.calcElementSize(el));\n        return sumChildren;\n    }\n    calcElementSize(el) {\n        var _a, _b;\n        let size = 0;\n        if (this.isOverFlowed(el)) {\n            const sizeProps = this._hiddenItemsProps.get(el);\n            size += (_a = sizeProps === null || sizeProps === void 0 ? void 0 : sizeProps.size) !== null && _a !== void 0 ? _a : 0;\n            size += (_b = sizeProps === null || sizeProps === void 0 ? void 0 : sizeProps.margin) !== null && _b !== void 0 ? _b : 0;\n            return size;\n        }\n        size += el.getBoundingClientRect()[this._propSize];\n        size += calcMarginSize(el, this._scrollDirection);\n        return size;\n    }\n    isOverFlowed(el) {\n        return el.classList.contains(OVERFLOWED_CLASS_NAME);\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["calcMarginSize","el","scrollDirection","computedStyle","OverflowDirection","OVERFLOWED_CLASS_NAME","OverflowWatcher","element","callback","overFlowDirection","debounce","deltaSize","notOverFlow","JSUtils","entries","elementId","container","containerSize","children","childElement","id","elementSize","variation","childrenSize","allElements","avaliableSize","elementsThatFit","avaliableSizeConsideringDelta","sumElementsSize","overFlowedElements","overFlowed","_a","elements","elementIdsToCalculate","_b","sizeProps","elementsIdList","sumChildren","size"],"mappings":"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","x_google_ignoreList":[0,1]}
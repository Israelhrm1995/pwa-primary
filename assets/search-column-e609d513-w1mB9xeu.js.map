{"version":3,"file":"search-column-e609d513-w1mB9xeu.js","sources":["../../node_modules/@sankhyalabs/ezui/dist/esm/search-column-e609d513.js"],"sourcesContent":["import { UserInterface, Action, StringUtils, ApplicationContext, ObjectUtils, WaitingChangeException, DataUnitAction } from '@sankhyalabs/core';\nimport { A as ApplicationUtils } from './ApplicationUtils-eaf91331.js';\nimport { h } from './index-baa5e267.js';\n\nconst buildFieldMetadata = (descriptor, config) => {\n  let { name, label, group } = Object.assign({}, config);\n  let { readOnly, required } = Object.assign({}, config);\n  let props;\n  let userInterface;\n  if (descriptor) {\n    label = label || descriptor.label;\n    name = name || descriptor.name;\n    required = descriptor.required || (config === null || config === void 0 ? void 0 : config.required);\n    readOnly = descriptor.readOnly || (config === null || config === void 0 ? void 0 : config.readOnly);\n    props = descriptor.properties;\n    userInterface = descriptor.userInterface;\n  }\n  return {\n    name, label, group,\n    readOnly, required,\n    props,\n    userInterface: userInterface || UserInterface.SHORTTEXT,\n  };\n};\n\nclass RecordValidationProcessor {\n  constructor(dataUnit, validationSource, validator) {\n    this._dataUnit = dataUnit;\n    this._validationSource = validationSource;\n    this._validator = validator;\n  }\n  validate(isSaving = true) {\n    return new Promise((accept, reject) => {\n      const records = this._dataUnit.getModifiedRecords();\n      for (let i = 0; i < records.length; i++) {\n        const record = records[i];\n        const invalidResults = [];\n        let validationResult = this.validateRequired(record);\n        if (validationResult && !validationResult.isValid) {\n          invalidResults.push(validationResult);\n        }\n        if (this._validator) {\n          validationResult = this._validator.validateRecord(record);\n          if (validationResult && !validationResult.isValid) {\n            invalidResults.push(validationResult);\n          }\n        }\n        if (invalidResults.length > 0) {\n          if (!isSaving && invalidResults[0].invalidFields.length > 0) {\n            this._validationSource.markAsInvalid(invalidResults[0].invalidFields[0], record.__record__id__);\n            reject();\n            break;\n          }\n          this.processValidationResult(invalidResults, record.__record__id__);\n          reject();\n          break;\n        }\n      }\n      return accept();\n    });\n  }\n  validateRequired(record) {\n    const requiredFields = this._validationSource.getRequiredFields();\n    const invalidFields = [];\n    new Set(requiredFields).forEach(field => {\n      const value = record[field];\n      if (value == undefined || value === \"\") {\n        const errorMessage = this._validationSource.getMessageForField(field, record.__record__id__);\n        if (errorMessage) {\n          invalidFields.push({ name: field, message: errorMessage });\n        }\n        else {\n          invalidFields.push({ name: field, message: \"Essa informação é obrigatória\" });\n        }\n      }\n    });\n    if (invalidFields.length > 0) {\n      return { isValid: false, invalidFields, infoMessage: \"Há pelo menos um campo obrigatório não preenchido.\" };\n    }\n    return undefined;\n  }\n  processValidationResult(validationResult, recordId) {\n    validationResult.forEach(invalidResult => {\n      const invalidFields = invalidResult.invalidFields;\n      this._dataUnit.savingCanceled(invalidFields, recordId);\n      if (invalidFields) {\n        invalidFields.forEach(field => {\n          this.markAsInvalid(field, recordId);\n        });\n      }\n      if (invalidResult.infoMessage) {\n        ApplicationUtils.info(invalidResult.infoMessage);\n      }\n      if (invalidResult.errorMessage) {\n        const { errorTitle, errorMessage } = invalidResult;\n        ApplicationUtils.error(errorTitle, errorMessage);\n      }\n    });\n  }\n  markAsInvalid(field, recordId) {\n    this._dataUnit.setInvalidField(field.name, field.message, recordId);\n    this._validationSource.markAsInvalid(field, recordId);\n  }\n}\n\nclass DataBinder {\n  constructor(dataUnit) {\n    this.onDataUnitEvent = (action) => {\n      var _a;\n      switch (action.type) {\n        case Action.MULTIPLE_EDITION_CHANGED:\n          this.clearInvalid();\n          this.updateAllFieldsValues();\n          break;\n        case Action.DATA_LOADED:\n        case Action.DATA_SAVED:\n        case Action.RECORDS_REMOVED:\n        case Action.RECORDS_ADDED:\n        case Action.RECORDS_COPIED:\n        case Action.EDITION_CANCELED:\n        case Action.SELECTION_CHANGED:\n        case Action.NEXT_SELECTED:\n        case Action.PREVIOUS_SELECTED:\n          this.clearInvalid();\n        case Action.DATA_CHANGED:\n        case Action.CHANGE_UNDONE:\n        case Action.CHANGE_REDONE:\n        case Action.RECORD_LOADED:\n          this.updateAllFieldsValues();\n          this.clearFieldError(Object.keys(action.payload)[0]);\n          break;\n        case Action.FIELD_INVALIDATED:\n          (_a = this._fields) === null || _a === void 0 ? void 0 : _a.forEach(field => {\n            this.updateErrorMessage(field.fieldName, field.field);\n          });\n          break;\n      }\n    };\n    this._uuid = StringUtils.generateUUID();\n    this._fields = new Map();\n    this._dataUnit = dataUnit;\n    this.applyDefaultValues();\n    this._dataUnit.subscribe(this.onDataUnitEvent);\n    this._dataUnit.addInterceptor(this);\n    this.setContextDataBinder(dataUnit);\n  }\n  get dataBinderId() {\n    return this._uuid;\n  }\n  setContextDataBinder(dataUnit) {\n    const dataBindersByDataUnit = ApplicationContext.getContextValue(\"__DATABINDER_BY_DATAUNIT__\") || new Map();\n    const dataBinders = [...(dataBindersByDataUnit.get(dataUnit.dataUnitId) || []), this];\n    dataBindersByDataUnit.set(dataUnit.dataUnitId, dataBinders);\n    ApplicationContext.setContextValue(\"__DATABINDER_BY_DATAUNIT__\", dataBindersByDataUnit);\n  }\n  applyDefaultValues() {\n    const recordIds = (this._dataUnit.getAddedRecords() || []).map(r => r.__record__id__);\n    if (recordIds.length > 0) {\n      const defaultValues = this.getDefaultValues();\n      if (defaultValues) {\n        Object.keys(defaultValues).forEach(field => {\n          this._dataUnit.setFieldValue(field, defaultValues[field], recordIds);\n        });\n      }\n    }\n  }\n  bind(fields, currentContextName, formMetadata, recordsValidator) {\n    fields.forEach(fieldElement => {\n      const { fieldName, contextName } = fieldElement.dataset;\n      if (contextName == undefined || contextName === currentContextName) {\n        this.updateBind(fieldName, fieldElement);\n      }\n    });\n    this._formMetadata = formMetadata;\n    this._recordValidatorProcessor = new RecordValidationProcessor(this._dataUnit, {\n      getRequiredFields: () => this.getFormRequiredFields(),\n      markAsInvalid: field => this.markInvalid(field),\n      getMessageForField: field => this.getErrorMessage(field),\n    }, recordsValidator);\n  }\n  getFormRequiredFields() {\n    return this._formMetadata.getRequiredFields();\n  }\n  disconnectDataUnit() {\n    const dataBindersByDataUnit = ApplicationContext.getContextValue(\"__DATABINDER_BY_DATAUNIT__\") || new Map();\n    const dataBinders = dataBindersByDataUnit.get(this._dataUnit.dataUnitId);\n    const dataBindersFiltered = dataBinders.filter((dataBinder) => dataBinder.dataBinderId !== this.dataBinderId);\n    dataBindersByDataUnit.set(this._dataUnit.dataUnitId, dataBindersFiltered);\n    ApplicationContext.setContextValue(\"__DATABINDER_BY_DATAUNIT__\", dataBindersByDataUnit);\n  }\n  onDisconnectedCallback() {\n    this._dataUnit.unsubscribe(this.onDataUnitEvent);\n    this._dataUnit.removeInterceptor(this);\n    this.disconnectDataUnit();\n  }\n  getCurrentRecordId() {\n    const record = this._dataUnit.getSelectedRecord();\n    return record === null || record === void 0 ? void 0 : record.__record__id__;\n  }\n  markInvalid(field) {\n    if (this._fields.has(field.name)) {\n      const fieldElement = this._fields.get(field.name).field;\n      this.updateErrorMessage(field.name, fieldElement, field.message);\n    }\n  }\n  setFocus(fieldName) {\n    if (!this._fields.has(fieldName)) {\n      return;\n    }\n    const fieldElement = this._fields.get(fieldName).field;\n    if (typeof fieldElement[\"setFocus\"] != \"function\") {\n      return;\n    }\n    fieldElement[\"setFocus\"]();\n  }\n  clearInvalid(recordId) {\n    this._dataUnit.clearInvalid(recordId);\n    this._fields.forEach(fieldBinder => {\n      const fieldElement = fieldBinder.field;\n      fieldElement[\"errorMessage\"] = \"\";\n    });\n  }\n  clearFieldError(fieldName) {\n    var _a;\n    const field = (_a = this._fields.get(fieldName)) === null || _a === void 0 ? void 0 : _a.field;\n    if (field[\"errorMessage\"]) {\n      field[\"errorMessage\"] = \"\";\n      this._dataUnit.clearInvalid(this.getCurrentRecordId(), fieldName);\n    }\n  }\n  updateFieldValue(fieldName, field) {\n    const bind = this._fields.get(fieldName);\n    try {\n      if (bind)\n        bind.listen = false;\n      if (this._dataUnit.isMultipleEdition && this.hasMultipleValuesBetweenRecords(fieldName)) {\n        field['value'] = undefined;\n        field['alternativePlaceholder'] = 'Múltiplos Valores';\n      }\n      else {\n        field[\"value\"] = this._dataUnit.getFieldValue(fieldName);\n        field['alternativePlaceholder'] = undefined;\n      }\n      this.updateErrorMessage(fieldName, field);\n    }\n    finally {\n      if (bind) {\n        bind.listen = true;\n      }\n    }\n  }\n  hasMultipleValuesBetweenRecords(key) {\n    var _a, _b;\n    const selectedRecords = (_b = (_a = this._dataUnit.getSelectionInfo()) === null || _a === void 0 ? void 0 : _a.records) !== null && _b !== void 0 ? _b : [];\n    if (selectedRecords.length <= 1)\n      return false;\n    const firstValue = selectedRecords[0][key];\n    return !selectedRecords.every(record => ObjectUtils.equals(record[key], firstValue));\n  }\n  validate() {\n    return this._recordValidatorProcessor.validate();\n  }\n  static async validateByDataunit(dataUnit) {\n    try {\n      const dataBinders = this.getDataBindersByDataUnit(dataUnit);\n      await Promise.all(dataBinders.map((dataBinder) => dataBinder.validate()));\n      return true;\n    }\n    catch (_a) {\n      return false;\n    }\n  }\n  static getDataBindersByDataUnit(dataUnit) {\n    const dataBindersByDataUnit = ApplicationContext.getContextValue(\"__DATABINDER_BY_DATAUNIT__\");\n    return (dataBindersByDataUnit === null || dataBindersByDataUnit === void 0 ? void 0 : dataBindersByDataUnit.get(dataUnit.dataUnitId)) || [];\n  }\n  updateErrorMessage(fieldName, field, message) {\n    if (message == undefined) {\n      message = this._dataUnit.getInvalidMessage(this.getCurrentRecordId(), fieldName);\n    }\n    if (!field[\"errorMessage\"]) {\n      field[\"errorMessage\"] = message;\n    }\n  }\n  getErrorMessage(fieldName) {\n    if (this._fields.has(fieldName)) {\n      const fieldElement = this._fields.get(fieldName).field;\n      return fieldElement[\"errorMessage\"];\n    }\n    return undefined;\n  }\n  updateBind(fieldName, field) {\n    const oldBind = this._fields.get(fieldName);\n    if (oldBind) {\n      oldBind.destroy();\n    }\n    this.bindSearchOptionsLoader(fieldName, field);\n    this.updateFieldValue(fieldName, field);\n    this.updateErrorMessage(fieldName, field);\n    this._fields.set(fieldName, Bind.create(fieldName, field, (fieldName, waitingChange) => this.changeStarted(fieldName, waitingChange), (fieldName) => this.cancelWaitingChange(fieldName), (fieldName, newValue) => this.setFieldValue(fieldName, newValue)));\n    this.applyEzUploadContext(fieldName, field);\n  }\n  changeStarted(fieldName, waitingChange) {\n    /**\n     * se o waitingChange não é blocante, add um event listener pra\n     * fazer o accept da promise\n     *\n     * se não tiver promise no waitingChange, eu crio uma e resolvo no bind\n     *\n     *\n     */\n    if (this._dataUnit.records.length === 0) {\n      this._dataUnit.addRecord();\n    }\n    if (!waitingChange.blocking && waitingChange.promise == undefined) {\n      const bind = this._fields.get(fieldName);\n      if (bind) {\n        waitingChange.promise = new Promise((resolve, reject) => {\n          bind.waitingChangePromiseResolve = resolve;\n          bind.waitingChangePromiseReject = reject;\n        });\n      }\n    }\n    this._dataUnit.startChange(fieldName, waitingChange);\n  }\n  cancelWaitingChange(fieldName) {\n    if (this._dataUnit.waitingForChange(fieldName)) {\n      this._dataUnit.cancelWaitingChange(fieldName);\n      const bind = this._fields.get(fieldName);\n      if (bind) {\n        bind.rejectWaitingChange(new WaitingChangeException(\"Change canceled\", fieldName));\n      }\n    }\n  }\n  setFieldValue(fieldName, newValue) {\n    if (this._dataUnit.records.length === 0) {\n      this._dataUnit.addRecord();\n    }\n    this._dataUnit.clearInvalid(this.getCurrentRecordId(), fieldName);\n    if (this._dataUnit.isMultipleEdition) {\n      const selectionInfo = this._dataUnit.getSelectionInfo();\n      this._dataUnit.setFieldValue(fieldName, newValue, selectionInfo.recordIds);\n    }\n    else {\n      const record = this._dataUnit.getSelectedRecord();\n      this._dataUnit.setFieldValue(fieldName, newValue, record ? [record.__record__id__] : undefined);\n    }\n    if (this._dataUnit.waitingForChange(fieldName)) {\n      const bind = this._fields.get(fieldName);\n      if (bind) {\n        bind.acceptWaitingChange();\n      }\n    }\n  }\n  bindSearchOptionsLoader(fieldName, field) {\n    if ((field.nodeName === \"EZ-SEARCH\" || field.nodeName === \"EZ-SEARCH-PLUS\") && field[\"optionLoader\"] == undefined) {\n      const isSearchPlus = field.nodeName === \"EZ-SEARCH-PLUS\";\n      const loader = isSearchPlus ? ApplicationContext.getContextValue(\"__EZUI__SEARCH__PLUS__OPTION__LOADER__\") : ApplicationContext.getContextValue(\"__EZUI__SEARCH__OPTION__LOADER__\");\n      if (loader) {\n        field[\"optionLoader\"] = (arg, ctxOptions) => {\n          return loader(arg, fieldName, this._dataUnit, ctxOptions);\n        };\n      }\n    }\n  }\n  applyEzUploadContext(fieldName, field) {\n    var _a, _b;\n    if (field.nodeName === \"EZ-UPLOAD\") {\n      field[\"urlUpload\"] = ApplicationContext.getContextValue(\"__EZUI__UPLOAD__ADD__URL__\");\n      field[\"urlDelete\"] = ApplicationContext.getContextValue(\"__EZUI__UPLOAD__DEL__URL__\");\n      const descriptor = this._dataUnit.getField(fieldName);\n      const destination = (_a = descriptor.properties) === null || _a === void 0 ? void 0 : _a.DESTINATION;\n      if (destination) {\n        field[\"requestHeaders\"] = { XTRAINF: `{\"destination\": \"${destination}\"}` };\n      }\n      field[\"maxFiles\"] = ((_b = descriptor.properties) === null || _b === void 0 ? void 0 : _b.MAX_FILES) || 0;\n    }\n  }\n  updateAllFieldsValues() {\n    var _a;\n    (_a = this._fields) === null || _a === void 0 ? void 0 : _a.forEach(field => {\n      this.updateFieldValue(field.fieldName, field.field);\n    });\n  }\n  interceptAction(action) {\n    if (action.type === Action.RECORDS_COPIED) {\n      const cleanFields = this._formMetadata.getCleanOnCopyFields();\n      if (cleanFields) {\n        const records = action.payload;\n        return new DataUnitAction(Action.RECORDS_COPIED, records.map(record => {\n          const newRecord = Object.assign({}, record);\n          cleanFields.forEach(fieldName => delete newRecord[fieldName]);\n          return newRecord;\n        }));\n      }\n    }\n    if (action.type === Action.SAVING_DATA) {\n      return new Promise((resolve) => {\n        this.validate()\n          .then(() => resolve(action))\n          .catch(() => { });\n      });\n    }\n    if (action.type === Action.RECORDS_ADDED) {\n      const defaultValues = this.getDefaultValues();\n      if (defaultValues) {\n        const records = action.payload;\n        return new DataUnitAction(Action.RECORDS_ADDED, records.map(record => {\n          return Object.assign(Object.assign({}, record), defaultValues);\n        }));\n      }\n    }\n    return action;\n  }\n  getDefaultValues() {\n    var _a;\n    const rawDefaultValues = (_a = this._formMetadata) === null || _a === void 0 ? void 0 : _a.getDefaultValues();\n    if (rawDefaultValues) {\n      const defaultValues = {};\n      for (const field in rawDefaultValues) {\n        defaultValues[field] = this._dataUnit.valueFromString(field, rawDefaultValues[field]);\n      }\n      return defaultValues;\n    }\n    return undefined;\n  }\n}\nclass Bind {\n  constructor() {\n    this.listen = true;\n    this.startChangeEventName = \"ezStartChange\";\n    this.cancelWaitingChangeEventName = \"ezCancelWaitingChange\";\n    this.changeEventName = \"ezChange\";\n  }\n  destroy() {\n    this.field.removeEventListener(this.startChangeEventName, this.startChangeListener);\n    this.field.removeEventListener(this.cancelWaitingChangeEventName, this.cancelWaitingChangeListener);\n    this.field.removeEventListener(this.changeEventName, this.changeListener);\n  }\n  acceptWaitingChange() {\n    if (this.waitingChangePromiseResolve) {\n      this.waitingChangePromiseResolve();\n      this.waitingChangePromiseReject = undefined;\n      this.waitingChangePromiseResolve = undefined;\n    }\n  }\n  rejectWaitingChange(reason) {\n    if (this.waitingChangePromiseReject) {\n      this.waitingChangePromiseReject(reason);\n      this.waitingChangePromiseReject = undefined;\n      this.waitingChangePromiseResolve = undefined;\n    }\n  }\n  static create(fieldName, field, startChangeCallback, cancelWaitingChangeCallback, changeCallback) {\n    const b = new Bind();\n    b.field = field;\n    b.fieldName = fieldName;\n    b.startChangeListener = (evt) => { if (b.listen)\n      startChangeCallback(fieldName, evt.detail); };\n    b.field.addEventListener(b.startChangeEventName, b.startChangeListener);\n    b.cancelWaitingChangeListener = () => { if (b.listen)\n      cancelWaitingChangeCallback(fieldName); };\n    b.field.addEventListener(b.cancelWaitingChangeEventName, b.cancelWaitingChangeListener);\n    b.changeListener = (evt) => { if (b.listen)\n      changeCallback(fieldName, evt.detail); };\n    b.field.addEventListener(b.changeEventName, b.changeListener);\n    return b;\n  }\n}\n\nconst LABEL_SEARCH_FIELD = \"Buscar campos (ctrl+F)\";\nconst LABEL_SEARCH_COLUMN = \"Buscar colunas (Ctrl+F)\";\nconst SHORTCUT_SEARCH_FIELD = \"ctrl+f\";\nconst SEARCH_FIELD_FULL_WIDTH = 240;\nconst SEARCH_FIELD_MARGIN_BOTTOM = \"0px\";\nconst SEARCH_FIELD_WIDTH = String(SEARCH_FIELD_FULL_WIDTH - 30) + \"px\";\nconst buildFieldSearch = (action, optionLoader, onSelectField) => {\n  return h(\"ez-search\", { class: 'ez-padding--small ez-margin--none', style: {\n      \"--ez-text-input__margin-bottom\": SEARCH_FIELD_MARGIN_BOTTOM,\n      \"--ez-search--width\": SEARCH_FIELD_WIDTH\n    }, canShowError: false, showSelectedValue: false, showOptionValue: false, suppressEmptyOption: true, label: action.label, value: null, optionLoader: optionLoader, onEzChange: (evt) => onSelectField(evt.detail), ignoreLimitCharsToSearch: true });\n};\nconst focusOnFieldSerch = async (field) => {\n  requestAnimationFrame(async () => {\n    if (field) {\n      const realElement = field['$elm$'];\n      if (!realElement)\n        return;\n      realElement.value = null;\n      await realElement.setFocus();\n    }\n  });\n};\n\nexport { DataBinder as D, LABEL_SEARCH_FIELD as L, RecordValidationProcessor as R, SHORTCUT_SEARCH_FIELD as S, buildFieldSearch as a, buildFieldMetadata as b, SEARCH_FIELD_FULL_WIDTH as c, LABEL_SEARCH_COLUMN as d, focusOnFieldSerch as f };\n"],"names":["buildFieldMetadata","descriptor","config","name","label","group","readOnly","required","props","userInterface","UserInterface","RecordValidationProcessor","dataUnit","validationSource","validator","isSaving","accept","reject","records","i","record","invalidResults","validationResult","requiredFields","invalidFields","field","value","errorMessage","recordId","invalidResult","ApplicationUtils","errorTitle","DataBinder","action","_a","Action","StringUtils","dataBindersByDataUnit","ApplicationContext","dataBinders","recordIds","r","defaultValues","fields","currentContextName","formMetadata","recordsValidator","fieldElement","fieldName","contextName","dataBindersFiltered","dataBinder","fieldBinder","bind","key","_b","selectedRecords","firstValue","ObjectUtils","message","oldBind","Bind","waitingChange","newValue","resolve","WaitingChangeException","selectionInfo","loader","arg","ctxOptions","destination","cleanFields","DataUnitAction","newRecord","rawDefaultValues","reason","startChangeCallback","cancelWaitingChangeCallback","changeCallback","b","evt","LABEL_SEARCH_FIELD","LABEL_SEARCH_COLUMN","SHORTCUT_SEARCH_FIELD","SEARCH_FIELD_FULL_WIDTH","SEARCH_FIELD_MARGIN_BOTTOM","SEARCH_FIELD_WIDTH","buildFieldSearch","optionLoader","onSelectField","h","focusOnFieldSerch","realElement"],"mappings":"qPAIK,MAACA,EAAqB,CAACC,EAAYC,IAAW,CACjD,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,MAAAC,CAAK,EAAK,OAAO,OAAO,CAAE,EAAEH,CAAM,EACjD,CAAE,SAAAI,EAAU,SAAAC,CAAU,EAAG,OAAO,OAAO,CAAE,EAAEL,CAAM,EACjDM,EACAC,EACJ,OAAIR,IACFG,EAAQA,GAASH,EAAW,MAC5BE,EAAOA,GAAQF,EAAW,KAC1BM,EAAWN,EAAW,WAAaC,GAAW,KAA4B,OAASA,EAAO,UAC1FI,EAAWL,EAAW,WAAaC,GAAW,KAA4B,OAASA,EAAO,UAC1FM,EAAQP,EAAW,WACnBQ,EAAgBR,EAAW,eAEtB,CACL,KAAAE,EAAM,MAAAC,EAAO,MAAAC,EACb,SAAAC,EAAU,SAAAC,EACV,MAAAC,EACA,cAAeC,GAAiBC,EAAc,SAC/C,CACH,EAEA,MAAMC,CAA0B,CAC9B,YAAYC,EAAUC,EAAkBC,EAAW,CACjD,KAAK,UAAYF,EACjB,KAAK,kBAAoBC,EACzB,KAAK,WAAaC,CACtB,CACE,SAASC,EAAW,GAAM,CACxB,OAAO,IAAI,QAAQ,CAACC,EAAQC,IAAW,CACrC,MAAMC,EAAU,KAAK,UAAU,mBAAoB,EACnD,QAASC,EAAI,EAAGA,EAAID,EAAQ,OAAQC,IAAK,CACvC,MAAMC,EAASF,EAAQC,CAAC,EAClBE,EAAiB,CAAE,EACzB,IAAIC,EAAmB,KAAK,iBAAiBF,CAAM,EAUnD,GATIE,GAAoB,CAACA,EAAiB,SACxCD,EAAe,KAAKC,CAAgB,EAElC,KAAK,aACPA,EAAmB,KAAK,WAAW,eAAeF,CAAM,EACpDE,GAAoB,CAACA,EAAiB,SACxCD,EAAe,KAAKC,CAAgB,GAGpCD,EAAe,OAAS,EAAG,CAC7B,GAAI,CAACN,GAAYM,EAAe,CAAC,EAAE,cAAc,OAAS,EAAG,CAC3D,KAAK,kBAAkB,cAAcA,EAAe,CAAC,EAAE,cAAc,CAAC,EAAGD,EAAO,cAAc,EAC9FH,EAAQ,EACR,KACZ,CACU,KAAK,wBAAwBI,EAAgBD,EAAO,cAAc,EAClEH,EAAQ,EACR,KACV,CACA,CACM,OAAOD,EAAQ,CACrB,CAAK,CACL,CACE,iBAAiBI,EAAQ,CACvB,MAAMG,EAAiB,KAAK,kBAAkB,kBAAmB,EAC3DC,EAAgB,CAAE,EAaxB,GAZA,IAAI,IAAID,CAAc,EAAE,QAAQE,GAAS,CACvC,MAAMC,EAAQN,EAAOK,CAAK,EAC1B,GAAIC,GAAS,MAAaA,IAAU,GAAI,CACtC,MAAMC,EAAe,KAAK,kBAAkB,mBAAmBF,EAAOL,EAAO,cAAc,EACvFO,EACFH,EAAc,KAAK,CAAE,KAAMC,EAAO,QAASE,EAAc,EAGzDH,EAAc,KAAK,CAAE,KAAMC,EAAO,QAAS,gCAAiC,CAEtF,CACA,CAAK,EACGD,EAAc,OAAS,EACzB,MAAO,CAAE,QAAS,GAAO,cAAAA,EAAe,YAAa,oDAAsD,CAGjH,CACE,wBAAwBF,EAAkBM,EAAU,CAClDN,EAAiB,QAAQO,GAAiB,CACxC,MAAML,EAAgBK,EAAc,cAUpC,GATA,KAAK,UAAU,eAAeL,EAAeI,CAAQ,EACjDJ,GACFA,EAAc,QAAQC,GAAS,CAC7B,KAAK,cAAcA,EAAOG,CAAQ,CAC5C,CAAS,EAECC,EAAc,aAChBC,EAAiB,KAAKD,EAAc,WAAW,EAE7CA,EAAc,aAAc,CAC9B,KAAM,CAAE,WAAAE,EAAY,aAAAJ,CAAY,EAAKE,EACrCC,EAAiB,MAAMC,EAAYJ,CAAY,CACvD,CACA,CAAK,CACL,CACE,cAAcF,EAAOG,EAAU,CAC7B,KAAK,UAAU,gBAAgBH,EAAM,KAAMA,EAAM,QAASG,CAAQ,EAClE,KAAK,kBAAkB,cAAcH,EAAOG,CAAQ,CACxD,CACA,CAEA,MAAMI,CAAW,CACf,YAAYpB,EAAU,CACpB,KAAK,gBAAmBqB,GAAW,CACjC,IAAIC,EACJ,OAAQD,EAAO,KAAI,CACjB,KAAKE,EAAO,yBACV,KAAK,aAAc,EACnB,KAAK,sBAAuB,EAC5B,MACF,KAAKA,EAAO,YACZ,KAAKA,EAAO,WACZ,KAAKA,EAAO,gBACZ,KAAKA,EAAO,cACZ,KAAKA,EAAO,eACZ,KAAKA,EAAO,iBACZ,KAAKA,EAAO,kBACZ,KAAKA,EAAO,cACZ,KAAKA,EAAO,kBACV,KAAK,aAAc,EACrB,KAAKA,EAAO,aACZ,KAAKA,EAAO,cACZ,KAAKA,EAAO,cACZ,KAAKA,EAAO,cACV,KAAK,sBAAuB,EAC5B,KAAK,gBAAgB,OAAO,KAAKF,EAAO,OAAO,EAAE,CAAC,CAAC,EACnD,MACF,KAAKE,EAAO,mBACTD,EAAK,KAAK,WAAa,MAAQA,IAAO,QAAkBA,EAAG,QAAQT,GAAS,CAC3E,KAAK,mBAAmBA,EAAM,UAAWA,EAAM,KAAK,CAChE,CAAW,EACD,KACV,CACK,EACD,KAAK,MAAQW,EAAY,aAAc,EACvC,KAAK,QAAU,IAAI,IACnB,KAAK,UAAYxB,EACjB,KAAK,mBAAoB,EACzB,KAAK,UAAU,UAAU,KAAK,eAAe,EAC7C,KAAK,UAAU,eAAe,IAAI,EAClC,KAAK,qBAAqBA,CAAQ,CACtC,CACE,IAAI,cAAe,CACjB,OAAO,KAAK,KAChB,CACE,qBAAqBA,EAAU,CAC7B,MAAMyB,EAAwBC,EAAmB,gBAAgB,4BAA4B,GAAK,IAAI,IAChGC,EAAc,CAAC,GAAIF,EAAsB,IAAIzB,EAAS,UAAU,GAAK,GAAK,IAAI,EACpFyB,EAAsB,IAAIzB,EAAS,WAAY2B,CAAW,EAC1DD,EAAmB,gBAAgB,6BAA8BD,CAAqB,CAC1F,CACE,oBAAqB,CACnB,MAAMG,GAAa,KAAK,UAAU,gBAAe,GAAM,CAAE,GAAE,IAAIC,GAAKA,EAAE,cAAc,EACpF,GAAID,EAAU,OAAS,EAAG,CACxB,MAAME,EAAgB,KAAK,iBAAkB,EACzCA,GACF,OAAO,KAAKA,CAAa,EAAE,QAAQjB,GAAS,CAC1C,KAAK,UAAU,cAAcA,EAAOiB,EAAcjB,CAAK,EAAGe,CAAS,CAC7E,CAAS,CAET,CACA,CACE,KAAKG,EAAQC,EAAoBC,EAAcC,EAAkB,CAC/DH,EAAO,QAAQI,GAAgB,CAC7B,KAAM,CAAE,UAAAC,EAAW,YAAAC,CAAa,EAAGF,EAAa,SAC5CE,GAAe,MAAaA,IAAgBL,IAC9C,KAAK,WAAWI,EAAWD,CAAY,CAE/C,CAAK,EACD,KAAK,cAAgBF,EACrB,KAAK,0BAA4B,IAAIlC,EAA0B,KAAK,UAAW,CAC7E,kBAAmB,IAAM,KAAK,sBAAuB,EACrD,cAAec,GAAS,KAAK,YAAYA,CAAK,EAC9C,mBAAoBA,GAAS,KAAK,gBAAgBA,CAAK,CACxD,EAAEqB,CAAgB,CACvB,CACE,uBAAwB,CACtB,OAAO,KAAK,cAAc,kBAAmB,CACjD,CACE,oBAAqB,CACnB,MAAMT,EAAwBC,EAAmB,gBAAgB,4BAA4B,GAAK,IAAI,IAEhGY,EADcb,EAAsB,IAAI,KAAK,UAAU,UAAU,EAC/B,OAAQc,GAAeA,EAAW,eAAiB,KAAK,YAAY,EAC5Gd,EAAsB,IAAI,KAAK,UAAU,WAAYa,CAAmB,EACxEZ,EAAmB,gBAAgB,6BAA8BD,CAAqB,CAC1F,CACE,wBAAyB,CACvB,KAAK,UAAU,YAAY,KAAK,eAAe,EAC/C,KAAK,UAAU,kBAAkB,IAAI,EACrC,KAAK,mBAAoB,CAC7B,CACE,oBAAqB,CACnB,MAAMjB,EAAS,KAAK,UAAU,kBAAmB,EACjD,OAAOA,GAAW,KAA4B,OAASA,EAAO,cAClE,CACE,YAAYK,EAAO,CACjB,GAAI,KAAK,QAAQ,IAAIA,EAAM,IAAI,EAAG,CAChC,MAAMsB,EAAe,KAAK,QAAQ,IAAItB,EAAM,IAAI,EAAE,MAClD,KAAK,mBAAmBA,EAAM,KAAMsB,EAActB,EAAM,OAAO,CACrE,CACA,CACE,SAASuB,EAAW,CAClB,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAS,EAC7B,OAEF,MAAMD,EAAe,KAAK,QAAQ,IAAIC,CAAS,EAAE,MAC7C,OAAOD,EAAa,UAAe,YAGvCA,EAAa,SAAa,CAC9B,CACE,aAAanB,EAAU,CACrB,KAAK,UAAU,aAAaA,CAAQ,EACpC,KAAK,QAAQ,QAAQwB,GAAe,CAClC,MAAML,EAAeK,EAAY,MACjCL,EAAa,aAAkB,EACrC,CAAK,CACL,CACE,gBAAgBC,EAAW,CACzB,IAAId,EACJ,MAAMT,GAASS,EAAK,KAAK,QAAQ,IAAIc,CAAS,KAAO,MAAQd,IAAO,OAAS,OAASA,EAAG,MACrFT,EAAM,eACRA,EAAM,aAAkB,GACxB,KAAK,UAAU,aAAa,KAAK,mBAAkB,EAAIuB,CAAS,EAEtE,CACE,iBAAiBA,EAAWvB,EAAO,CACjC,MAAM4B,EAAO,KAAK,QAAQ,IAAIL,CAAS,EACvC,GAAI,CACEK,IACFA,EAAK,OAAS,IACZ,KAAK,UAAU,mBAAqB,KAAK,gCAAgCL,CAAS,GACpFvB,EAAM,MAAW,OACjBA,EAAM,uBAA4B,sBAGlCA,EAAM,MAAW,KAAK,UAAU,cAAcuB,CAAS,EACvDvB,EAAM,uBAA4B,QAEpC,KAAK,mBAAmBuB,EAAWvB,CAAK,CAC9C,QACY,CACF4B,IACFA,EAAK,OAAS,GAEtB,CACA,CACE,gCAAgCC,EAAK,CACnC,IAAIpB,EAAIqB,EACR,MAAMC,GAAmBD,GAAMrB,EAAK,KAAK,UAAU,iBAAgB,KAAQ,MAAQA,IAAO,OAAS,OAASA,EAAG,WAAa,MAAQqB,IAAO,OAASA,EAAK,CAAE,EAC3J,GAAIC,EAAgB,QAAU,EAC5B,MAAO,GACT,MAAMC,EAAaD,EAAgB,CAAC,EAAEF,CAAG,EACzC,MAAO,CAACE,EAAgB,MAAMpC,GAAUsC,EAAY,OAAOtC,EAAOkC,CAAG,EAAGG,CAAU,CAAC,CACvF,CACE,UAAW,CACT,OAAO,KAAK,0BAA0B,SAAU,CACpD,CACE,aAAa,mBAAmB7C,EAAU,CACxC,GAAI,CACF,MAAM2B,EAAc,KAAK,yBAAyB3B,CAAQ,EAC1D,aAAM,QAAQ,IAAI2B,EAAY,IAAKY,GAAeA,EAAW,SAAQ,CAAE,CAAC,EACjE,EACb,MACe,CACT,MAAO,EACb,CACA,CACE,OAAO,yBAAyBvC,EAAU,CACxC,MAAMyB,EAAwBC,EAAmB,gBAAgB,4BAA4B,EAC7F,OAAQD,GAA0B,KAA2C,OAASA,EAAsB,IAAIzB,EAAS,UAAU,IAAM,CAAE,CAC/I,CACE,mBAAmBoC,EAAWvB,EAAOkC,EAAS,CACxCA,GAAW,OACbA,EAAU,KAAK,UAAU,kBAAkB,KAAK,mBAAoB,EAAEX,CAAS,GAE5EvB,EAAM,eACTA,EAAM,aAAkBkC,EAE9B,CACE,gBAAgBX,EAAW,CACzB,GAAI,KAAK,QAAQ,IAAIA,CAAS,EAE5B,OADqB,KAAK,QAAQ,IAAIA,CAAS,EAAE,MAC7B,YAG1B,CACE,WAAWA,EAAWvB,EAAO,CAC3B,MAAMmC,EAAU,KAAK,QAAQ,IAAIZ,CAAS,EACtCY,GACFA,EAAQ,QAAS,EAEnB,KAAK,wBAAwBZ,EAAWvB,CAAK,EAC7C,KAAK,iBAAiBuB,EAAWvB,CAAK,EACtC,KAAK,mBAAmBuB,EAAWvB,CAAK,EACxC,KAAK,QAAQ,IAAIuB,EAAWa,EAAK,OAAOb,EAAWvB,EAAO,CAACuB,EAAWc,IAAkB,KAAK,cAAcd,EAAWc,CAAa,EAAId,GAAc,KAAK,oBAAoBA,CAAS,EAAG,CAACA,EAAWe,IAAa,KAAK,cAAcf,EAAWe,CAAQ,CAAC,CAAC,EAC3P,KAAK,qBAAqBf,EAAWvB,CAAK,CAC9C,CACE,cAAcuB,EAAWc,EAAe,CAYtC,GAHI,KAAK,UAAU,QAAQ,SAAW,GACpC,KAAK,UAAU,UAAW,EAExB,CAACA,EAAc,UAAYA,EAAc,SAAW,KAAW,CACjE,MAAMT,EAAO,KAAK,QAAQ,IAAIL,CAAS,EACnCK,IACFS,EAAc,QAAU,IAAI,QAAQ,CAACE,EAAS/C,IAAW,CACvDoC,EAAK,4BAA8BW,EACnCX,EAAK,2BAA6BpC,CAC5C,CAAS,EAET,CACI,KAAK,UAAU,YAAY+B,EAAWc,CAAa,CACvD,CACE,oBAAoBd,EAAW,CAC7B,GAAI,KAAK,UAAU,iBAAiBA,CAAS,EAAG,CAC9C,KAAK,UAAU,oBAAoBA,CAAS,EAC5C,MAAMK,EAAO,KAAK,QAAQ,IAAIL,CAAS,EACnCK,GACFA,EAAK,oBAAoB,IAAIY,EAAuB,kBAAmBjB,CAAS,CAAC,CAEzF,CACA,CACE,cAAcA,EAAWe,EAAU,CAKjC,GAJI,KAAK,UAAU,QAAQ,SAAW,GACpC,KAAK,UAAU,UAAW,EAE5B,KAAK,UAAU,aAAa,KAAK,mBAAkB,EAAIf,CAAS,EAC5D,KAAK,UAAU,kBAAmB,CACpC,MAAMkB,EAAgB,KAAK,UAAU,iBAAkB,EACvD,KAAK,UAAU,cAAclB,EAAWe,EAAUG,EAAc,SAAS,CAC/E,KACS,CACH,MAAM9C,EAAS,KAAK,UAAU,kBAAmB,EACjD,KAAK,UAAU,cAAc4B,EAAWe,EAAU3C,EAAS,CAACA,EAAO,cAAc,EAAI,MAAS,CACpG,CACI,GAAI,KAAK,UAAU,iBAAiB4B,CAAS,EAAG,CAC9C,MAAMK,EAAO,KAAK,QAAQ,IAAIL,CAAS,EACnCK,GACFA,EAAK,oBAAqB,CAElC,CACA,CACE,wBAAwBL,EAAWvB,EAAO,CACxC,IAAKA,EAAM,WAAa,aAAeA,EAAM,WAAa,mBAAqBA,EAAM,cAAmB,KAAW,CAEjH,MAAM0C,EADe1C,EAAM,WAAa,iBACVa,EAAmB,gBAAgB,wCAAwC,EAAIA,EAAmB,gBAAgB,kCAAkC,EAC9K6B,IACF1C,EAAM,aAAkB,CAAC2C,EAAKC,IACrBF,EAAOC,EAAKpB,EAAW,KAAK,UAAWqB,CAAU,EAGlE,CACA,CACE,qBAAqBrB,EAAWvB,EAAO,CACrC,IAAIS,EAAIqB,EACR,GAAI9B,EAAM,WAAa,YAAa,CAClCA,EAAM,UAAea,EAAmB,gBAAgB,4BAA4B,EACpFb,EAAM,UAAea,EAAmB,gBAAgB,4BAA4B,EACpF,MAAMrC,EAAa,KAAK,UAAU,SAAS+C,CAAS,EAC9CsB,GAAepC,EAAKjC,EAAW,cAAgB,MAAQiC,IAAO,OAAS,OAASA,EAAG,YACrFoC,IACF7C,EAAM,eAAoB,CAAE,QAAS,oBAAoB6C,CAAW,IAAM,GAE5E7C,EAAM,WAAgB8B,EAAKtD,EAAW,cAAgB,MAAQsD,IAAO,OAAS,OAASA,EAAG,YAAc,CAC9G,CACA,CACE,uBAAwB,CACtB,IAAIrB,GACHA,EAAK,KAAK,WAAa,MAAQA,IAAO,QAAkBA,EAAG,QAAQT,GAAS,CAC3E,KAAK,iBAAiBA,EAAM,UAAWA,EAAM,KAAK,CACxD,CAAK,CACL,CACE,gBAAgBQ,EAAQ,CACtB,GAAIA,EAAO,OAASE,EAAO,eAAgB,CACzC,MAAMoC,EAAc,KAAK,cAAc,qBAAsB,EAC7D,GAAIA,EAAa,CACf,MAAMrD,EAAUe,EAAO,QACvB,OAAO,IAAIuC,EAAerC,EAAO,eAAgBjB,EAAQ,IAAIE,GAAU,CACrE,MAAMqD,EAAY,OAAO,OAAO,CAAA,EAAIrD,CAAM,EAC1C,OAAAmD,EAAY,QAAQvB,GAAa,OAAOyB,EAAUzB,CAAS,CAAC,EACrDyB,CACjB,CAAS,CAAC,CACV,CACA,CACI,GAAIxC,EAAO,OAASE,EAAO,YACzB,OAAO,IAAI,QAAS6B,GAAY,CAC9B,KAAK,SAAQ,EACV,KAAK,IAAMA,EAAQ/B,CAAM,CAAC,EAC1B,MAAM,IAAM,CAAA,CAAG,CAC1B,CAAO,EAEH,GAAIA,EAAO,OAASE,EAAO,cAAe,CACxC,MAAMO,EAAgB,KAAK,iBAAkB,EAC7C,GAAIA,EAAe,CACjB,MAAMxB,EAAUe,EAAO,QACvB,OAAO,IAAIuC,EAAerC,EAAO,cAAejB,EAAQ,IAAIE,GACnD,OAAO,OAAO,OAAO,OAAO,GAAIA,CAAM,EAAGsB,CAAa,CAC9D,CAAC,CACV,CACA,CACI,OAAOT,CACX,CACE,kBAAmB,CACjB,IAAIC,EACJ,MAAMwC,GAAoBxC,EAAK,KAAK,iBAAmB,MAAQA,IAAO,OAAS,OAASA,EAAG,iBAAkB,EAC7G,GAAIwC,EAAkB,CACpB,MAAMhC,EAAgB,CAAE,EACxB,UAAWjB,KAASiD,EAClBhC,EAAcjB,CAAK,EAAI,KAAK,UAAU,gBAAgBA,EAAOiD,EAAiBjD,CAAK,CAAC,EAEtF,OAAOiB,CACb,CAEA,CACA,CACA,MAAMmB,CAAK,CACT,aAAc,CACZ,KAAK,OAAS,GACd,KAAK,qBAAuB,gBAC5B,KAAK,6BAA+B,wBACpC,KAAK,gBAAkB,UAC3B,CACE,SAAU,CACR,KAAK,MAAM,oBAAoB,KAAK,qBAAsB,KAAK,mBAAmB,EAClF,KAAK,MAAM,oBAAoB,KAAK,6BAA8B,KAAK,2BAA2B,EAClG,KAAK,MAAM,oBAAoB,KAAK,gBAAiB,KAAK,cAAc,CAC5E,CACE,qBAAsB,CAChB,KAAK,8BACP,KAAK,4BAA6B,EAClC,KAAK,2BAA6B,OAClC,KAAK,4BAA8B,OAEzC,CACE,oBAAoBc,EAAQ,CACtB,KAAK,6BACP,KAAK,2BAA2BA,CAAM,EACtC,KAAK,2BAA6B,OAClC,KAAK,4BAA8B,OAEzC,CACE,OAAO,OAAO3B,EAAWvB,EAAOmD,EAAqBC,EAA6BC,EAAgB,CAChG,MAAMC,EAAI,IAAIlB,EACd,OAAAkB,EAAE,MAAQtD,EACVsD,EAAE,UAAY/B,EACd+B,EAAE,oBAAuBC,GAAQ,CAAMD,EAAE,QACvCH,EAAoB5B,EAAWgC,EAAI,MAAM,CAAI,EAC/CD,EAAE,MAAM,iBAAiBA,EAAE,qBAAsBA,EAAE,mBAAmB,EACtEA,EAAE,4BAA8B,IAAM,CAAMA,EAAE,QAC5CF,EAA4B7B,CAAS,CAAI,EAC3C+B,EAAE,MAAM,iBAAiBA,EAAE,6BAA8BA,EAAE,2BAA2B,EACtFA,EAAE,eAAkBC,GAAQ,CAAMD,EAAE,QAClCD,EAAe9B,EAAWgC,EAAI,MAAM,CAAI,EAC1CD,EAAE,MAAM,iBAAiBA,EAAE,gBAAiBA,EAAE,cAAc,EACrDA,CACX,CACA,CAEK,MAACE,EAAqB,yBACrBC,EAAsB,0BACtBC,EAAwB,SACxBC,EAA0B,IAC1BC,EAA6B,MAC7BC,EAAqB,OAAOF,EAA0B,EAAE,EAAI,KAC5DG,EAAmB,CAACtD,EAAQuD,EAAcC,IACvCC,EAAE,YAAa,CAAE,MAAO,oCAAqC,MAAO,CACvE,iCAAkCL,EAClC,qBAAsBC,CACvB,EAAE,aAAc,GAAO,kBAAmB,GAAO,gBAAiB,GAAO,oBAAqB,GAAM,MAAOrD,EAAO,MAAO,MAAO,KAAM,aAAcuD,EAAc,WAAaR,GAAQS,EAAcT,EAAI,MAAM,EAAG,yBAA0B,EAAI,CAAE,EAEjPW,EAAoB,MAAOlE,GAAU,CACzC,sBAAsB,SAAY,CAChC,GAAIA,EAAO,CACT,MAAMmE,EAAcnE,EAAM,MAC1B,GAAI,CAACmE,EACH,OACFA,EAAY,MAAQ,KACpB,MAAMA,EAAY,SAAU,CAClC,CACA,CAAG,CACH","x_google_ignoreList":[0]}
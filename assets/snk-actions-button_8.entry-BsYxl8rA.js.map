{"version":3,"file":"snk-actions-button_8.entry-BsYxl8rA.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-actions-button_8.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement, c as createEvent } from './index-479e1293.js';\nimport { ApplicationContext, StringUtils, ErrorException, WarningException, ObjectUtils, DateUtils, ServiceUtils, StorageType, ArrayUtils, ElementIDUtils } from '@sankhyalabs/core';\nimport { D as DataFetcher } from './DataFetcher-db08cad0.js';\nimport { P as ParamType } from './ParamType-d5152b06.js';\nimport './ISave-da565824.js';\nimport './index-b40568ff.js';\nimport '@sankhyalabs/ezui/dist/collection/utils/constants';\nimport '@sankhyalabs/core/dist/dataunit/metadata/UnitMetadata';\nimport './dataunit-fetcher-1b78797a.js';\nimport './filter-item-type.enum-d45e026f.js';\nimport { F as FormConfigFetcher } from './form-config-fetcher-e623539b.js';\nimport { O as ORDER_VALUES } from './constants-7b422de0.js';\nimport { g as getSelectedRecordsIDsInfo } from './GetSelectedRecordsIDsInfo-9fa41508.js';\nimport { R as ResourceIDUtils } from './ResourceIDUtils-a114189a.js';\nimport { ApplicationUtils, DialogType, FormLayout } from '@sankhyalabs/ezui/dist/collection/utils';\nimport { C as ConfigStorage } from './ConfigStorage-89154c4e.js';\nimport './PrintUtils-3e4ff0f5.js';\nimport '@sankhyalabs/ezui/dist/collection/components/ez-grid/utils';\nimport '@sankhyalabs/core/dist/utils/SortingUtils';\n\nconst SERVICE_ACTION_EXECUTE_JAVA = 'ActionButtonsSP.executeJava';\nclass JavaExecutor {\n  execute(action) {\n    var _a;\n    const execSource = {\n      actionID: action.actionID,\n      refreshType: (_a = action.actionConfig.javaCall) === null || _a === void 0 ? void 0 : _a.refreshType\n    };\n    return new Promise((resolve) => {\n      resolve({ execSource, callback: this.callExecJava });\n    });\n  }\n  async callExecJava(execSource) {\n    const request = {\n      requestBody: {\n        javaCall: execSource\n      }\n    };\n    await DataFetcher.get().callServiceBroker(SERVICE_ACTION_EXECUTE_JAVA, JSON.stringify(request));\n  }\n}\n\nconst SERVICE_ACTION_EXECUTE_SCRIPT = 'ActionButtonsSP.executeScript';\nclass JavascriptExecutor {\n  execute(action) {\n    var _a;\n    const execSource = {\n      actionID: action.actionID,\n      refreshType: (_a = action.actionConfig.runScript) === null || _a === void 0 ? void 0 : _a.refreshType\n    };\n    return new Promise((resolve) => {\n      resolve({ execSource, callback: this.callExecScript });\n    });\n  }\n  async callExecScript(execSource) {\n    const request = {\n      runScript: execSource\n    };\n    await DataFetcher.get().callServiceBroker(SERVICE_ACTION_EXECUTE_SCRIPT, request);\n  }\n}\n\nclass LaunchScreenExecutor {\n  constructor() {\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n  }\n  async execute(action, dataUnit) {\n    const resourceID = action.resourceID;\n    if (!resourceID)\n      return;\n    let launchObject = await this.buildLaunchObject(action, dataUnit);\n    this._application.openApp(resourceID, launchObject);\n    return null;\n  }\n  buildLaunchObject(action, dataUnit) {\n    return new Promise((resolve) => {\n      let params = action.actionConfig.params.param;\n      if (params && params.length > 0) {\n        let launchObject = {};\n        let processedParams = [];\n        params.forEach(param => {\n          const localField = param.localField;\n          let value = dataUnit.getFieldValue(localField);\n          if (!value) {\n            let localFieldLabel = dataUnit.getField(localField).label;\n            localFieldLabel = StringUtils.isEmpty(dataUnit.getField(localField).label) ? localField : localFieldLabel;\n            throw new ErrorException(this._application.messagesBuilder.getMessage(\"snkActionsButton.title.error\", undefined), this._application.messagesBuilder.getMessage(\"snkActionsButton.launchScreen.emptyField\", { description: action.description, localFieldLabel: localFieldLabel }));\n          }\n          value = StringUtils.isEmpty(value.toString()) ? undefined : value.toString();\n          launchObject[param.targetField] = value;\n          processedParams.push({\n            fieldName: param.targetField,\n            value: value\n          });\n        });\n        launchObject.ACTION_PARAMETERS = processedParams;\n        launchObject.call_time = Date.now();\n        resolve(launchObject);\n      }\n      resolve(null);\n    });\n  }\n}\n\nconst SERVICE_ACTION_EXECUTE_STP = 'ActionButtonsSP.executeSTP';\nclass ProcedureExecutor {\n  execute(action) {\n    var _a, _b, _c;\n    const procName = (_a = action.actionConfig.dbCall) === null || _a === void 0 ? void 0 : _a.name;\n    const rootEntity = (_b = action.actionConfig.dbCall) === null || _b === void 0 ? void 0 : _b.rootEntity;\n    const execSource = {\n      actionID: action.actionID,\n      refreshType: (_c = action.actionConfig.dbCall) === null || _c === void 0 ? void 0 : _c.refreshType,\n      procName: procName,\n      rootEntity: rootEntity\n    };\n    return new Promise((resolve) => {\n      resolve({ execSource, callback: this.callExecProcedure });\n    });\n  }\n  async callExecProcedure(execSource) {\n    const request = {\n      requestBody: {\n        stpCall: execSource\n      }\n    };\n    await DataFetcher.get().callServiceBroker(SERVICE_ACTION_EXECUTE_STP, JSON.stringify(request));\n  }\n}\n\nvar ActionsType;\n(function (ActionsType) {\n  ActionsType[\"LAUNCH_SCREEN\"] = \"LC\";\n  ActionsType[\"JAVASCRIPT\"] = \"SC\";\n  ActionsType[\"JAVA\"] = \"RJ\";\n  ActionsType[\"PROCEDURE\"] = \"SP\";\n  ActionsType[\"EMBEDDED\"] = \"EB\";\n})(ActionsType || (ActionsType = {}));\n\nclass ExecutorFactory {\n  constructor(actionType) {\n    this.actionType = actionType;\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n  }\n  get executor() {\n    switch (this.actionType) {\n      case ActionsType.LAUNCH_SCREEN:\n        return new LaunchScreenExecutor();\n      case ActionsType.JAVASCRIPT:\n        return new JavascriptExecutor();\n      case ActionsType.JAVA:\n        return new JavaExecutor();\n      case ActionsType.PROCEDURE:\n        return new ProcedureExecutor();\n      default:\n        throw new ErrorException(this._application.messagesBuilder.getMessage(\"snkActionsButton.title.error\", undefined), this._application.messagesBuilder.getMessage(\"snkActionsButton.action.nonExistentType\", { actionType: this.actionType }));\n    }\n  }\n}\n\nvar RefreshType;\n(function (RefreshType) {\n  RefreshType[\"NONE\"] = \"NONE\";\n  RefreshType[\"PARENT\"] = \"PARENT\";\n  RefreshType[\"MASTER\"] = \"MASTER\";\n  RefreshType[\"ALL\"] = \"ALL\";\n})(RefreshType || (RefreshType = {}));\n\nconst MASTER_ROW_PROPERTY = \"__MASTER_ROW__\";\nconst ENTITY_NAME_PROPERTY = '__ENTITY_NAME__';\nconst SERVICE_GET_CONFIGURATIONS = 'SystemUtilsSP.getConf';\nclass Actions {\n  constructor(actionsExecuteInterface, dataUnit, appResourceId) {\n    var _a;\n    this._lastValuesCache = {};\n    this._actionsExecuteInterface = actionsExecuteInterface;\n    this._dataUnit = dataUnit;\n    this._selectedRows = ((_a = dataUnit === null || dataUnit === void 0 ? void 0 : dataUnit.getSelectionInfo()) === null || _a === void 0 ? void 0 : _a.isAllRecords()) ? [] : dataUnit === null || dataUnit === void 0 ? void 0 : dataUnit.getSelectionInfo().records;\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    this._appResourceId = appResourceId;\n  }\n  getPrimaryKeys() {\n    const ids = getSelectedRecordsIDsInfo(this._dataUnit);\n    return ids.map(({ name }) => name);\n  }\n  apply(action, hasParamsToSave) {\n    this._application.closePopUp();\n    this._actionsExecuteInterface.execute(action, this._dataUnit)\n      .then(({ execSource, callback }) => {\n      this.resolvePromptParams(action, execSource, hasParamsToSave)\n        .then(() => {\n        this.actionExecute(execSource, callback);\n      });\n    });\n  }\n  ;\n  async execute(action) {\n    var _a;\n    if (!action.actionConfig) {\n      throw new WarningException(this._application.messagesBuilder.getMessage(\"snkActionsButton.title.warning\", undefined), this._application.messagesBuilder.getMessage(\"snkActionsButton.action.incorrectAction\", { description: action.description }));\n    }\n    if (!!((_a = action.actionConfig.params) === null || _a === void 0 ? void 0 : _a.promptParam)) {\n      const paramsSource = action.actionConfig.params.promptParam;\n      let hasParamsToSave = false;\n      for (let i = 0; i < paramsSource.length; i++) {\n        let paramSource = paramsSource[i];\n        if (!hasParamsToSave && paramSource.saveLast === 'true') {\n          hasParamsToSave = true;\n          break;\n        }\n      }\n      if (hasParamsToSave) {\n        action.actionConfig.params.promptParam = await this.loadSavedValuesIntoParams(action);\n      }\n      const form = document.createElement(\"snk-actions-form\");\n      window.document.body.appendChild(form);\n      form.action = ObjectUtils.copy(action);\n      form.applyParameters = (resultAction) => {\n        this.apply(resultAction, hasParamsToSave);\n      };\n      form.openPopup();\n    }\n    else if (action.type != ActionsType.LAUNCH_SCREEN) {\n      this._actionsExecuteInterface.execute(action, this._dataUnit)\n        .then(({ execSource, callback }) => {\n        this.actionExecute(execSource, callback);\n      });\n    }\n    else {\n      this._actionsExecuteInterface.execute(action, this._dataUnit);\n    }\n  }\n  loadSavedValuesIntoParams(action) {\n    return this.loadLastValues(action)\n      .then((lastParams) => {\n      let resultParams = action.actionConfig.params.promptParam;\n      if (lastParams) {\n        lastParams.param.forEach(lastParam => {\n          resultParams = resultParams.map((param) => {\n            if (param.name !== lastParam.paramName)\n              return param;\n            if (param.paramType === 'B') {\n              return Object.assign(Object.assign({}, param), { value: lastParam.$ === 'S' });\n            }\n            return Object.assign(Object.assign({}, param), { value: lastParam.$ });\n          });\n        });\n      }\n      return resultParams;\n    });\n  }\n  async actionExecute(execSource, callback) {\n    execSource.virtualPage = this.buildVirtualPage();\n    await this.prepareAndExecute(execSource, callback);\n    this.recordsReloader(execSource.refreshType);\n  }\n  resolvePromptParams(action, execSource, hasParamsToSave) {\n    return new Promise(resolve => {\n      const paramsSource = action.actionConfig.params.promptParam;\n      let params = [];\n      paramsSource.forEach(paramSource => {\n        params.push(this.buildPromptParam(paramSource));\n      });\n      this.putParamsOnExecSource(params, execSource);\n      if (hasParamsToSave) {\n        this.saveLastValues(action, params);\n      }\n      resolve();\n    });\n  }\n  buildPromptParam(param) {\n    let type = param.paramType;\n    let isCheckbox = false;\n    let fieldProps;\n    let entityPK;\n    let value = param.value;\n    switch (type) {\n      case ParamType.DATE:\n        type = 'D';\n        break;\n      case ParamType.DATETIME:\n        type = 'H';\n        break;\n      case ParamType.DECIMAL:\n        type = 'F';\n        fieldProps = {\n          'sk-precision': Number(param.precision)\n        };\n        break;\n      case ParamType.BOOLEAN:\n        type = 'S';\n        isCheckbox = true;\n        value = param.value ? 'S' : 'N';\n        break;\n      case ParamType.ENTITY:\n        fieldProps = {\n          'sk-entity-name': param.entityName,\n          'sk-allow-show-hierarchical-mode': param.hierarchyEntity,\n          'sk-data-type': 'S'\n        };\n        if (param.hierarchyEntity && param.entityPK) {\n          entityPK = param.entityPK;\n        }\n        value = param.value ? Number(param.value) : null;\n        break;\n      case ParamType.OPTIONS:\n        type = 'O';\n        let options = param.options.split(';').map(function (opc, index) {\n          let data;\n          let value;\n          if (opc.indexOf('=') > -1) {\n            let opcArr = opc.split('=');\n            data = opcArr[0];\n            value = opcArr[1];\n          }\n          else {\n            data = (index + 1);\n            value = opc;\n          }\n          return {\n            data: data,\n            value: value\n          };\n        });\n        fieldProps = {\n          'sk-options': options\n        };\n        break;\n    }\n    return {\n      description: param.label,\n      required: param.required == 'true',\n      fieldName: param.name,\n      fieldNameOri: param.name,\n      entityPK: entityPK,\n      paramType: param.paramType,\n      type: type,\n      isCheckbox: isCheckbox,\n      saveLast: param.saveLast,\n      fieldProp: fieldProps,\n      value: value,\n      isGeneratedName: param.isGeneratedName\n    };\n  }\n  putParamsOnExecSource(params, execSource) {\n    execSource.params = {\n      param: []\n    };\n    params.forEach(param => {\n      if (param.isGeneratedName && param.value) {\n        throw new ErrorException(this._application.messagesBuilder.getMessage(\"snkActionsButton.title.error\", undefined), this._application.messagesBuilder.getMessage(\"snkActionsButton.action.emptyParamName\", undefined));\n      }\n      if (!StringUtils.isEmpty(param.value)) {\n        execSource.params.param.push({\n          type: this.getParamDataType(param.paramType),\n          paramName: param.fieldName,\n          $: this.getParamValue(param)\n        });\n      }\n    });\n  }\n  getParamDataType(type) {\n    let dataType;\n    switch (type) {\n      case \"D\":\n        dataType = \"F\";\n        break;\n      case \"DT\":\n      case \"DH\":\n        dataType = \"D\";\n        break;\n      case \"B\":\n      case \"ENTITY\":\n      case \"SO\":\n        dataType = \"S\";\n        break;\n      default:\n        dataType = type;\n    }\n    return dataType;\n  }\n  getParamValue(param) {\n    let value = param.value;\n    if (!value) {\n      return value;\n    }\n    if (param.paramType == 'DT') {\n      value = DateUtils.formatDate(value);\n    }\n    else if (param.paramType == 'DH') {\n      value = DateUtils.formatDateTime(value);\n    }\n    return value;\n  }\n  async loadLastValues(action) {\n    const resourceId = await this.buildResourceId(action.actionID);\n    return new Promise((resolve, reject) => {\n      if (this._lastValuesCache[resourceId]) {\n        resolve(this._lastValuesCache[resourceId]);\n      }\n      else {\n        const config = {\n          config: {\n            chave: resourceId,\n            tipo: 'T'\n          }\n        };\n        DataFetcher.get().callServiceBroker(SERVICE_GET_CONFIGURATIONS, config)\n          .then((result) => {\n          var _a, _b;\n          let lastParams;\n          if ((_b = (_a = result.config) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.params) {\n            lastParams = result.config.data.params;\n            if (!Array.isArray(lastParams.param)) {\n              lastParams.param = [lastParams.param];\n            }\n          }\n          this._lastValuesCache[resourceId] = lastParams;\n          resolve(lastParams);\n        }).catch((error) => {\n          reject(error);\n        });\n      }\n    });\n  }\n  async saveLastValues(action, params) {\n    if (this._application) {\n      let config = {\n        params: {\n          param: []\n        }\n      };\n      params.forEach(param => {\n        if (param.saveLast == 'true') {\n          config.params.param.push({\n            paramName: param.fieldName,\n            $: param.value\n          });\n        }\n      });\n      const resourceId = await this.buildResourceId(action.actionID);\n      this._lastValuesCache[resourceId] = config.params;\n      this._application.saveConfig(resourceId, config);\n    }\n  }\n  async buildResourceId(actionId) {\n    return this._appResourceId + '.actionconfig.' + actionId;\n  }\n  async prepareAndExecute(execSource, executeAction) {\n    this.addRows(execSource);\n    await executeAction(execSource);\n  }\n  addRows(execSource) {\n    const primaryKeys = this.getPrimaryKeys();\n    const rows = {\n      row: []\n    };\n    const sourceRows = this._selectedRows;\n    for (const i in sourceRows) {\n      const sourceRow = sourceRows[i];\n      const row = {};\n      if (sourceRow.hasOwnProperty(MASTER_ROW_PROPERTY)) {\n        row.master = 'S';\n        row.entityName = sourceRow.__ENTITY_NAME__;\n        delete sourceRow[MASTER_ROW_PROPERTY];\n        delete sourceRow[ENTITY_NAME_PROPERTY];\n      }\n      if (!row.field) {\n        row.field = [];\n      }\n      for (const primaryKey of primaryKeys) {\n        row.field.push({\n          fieldName: primaryKey,\n          $: sourceRow[primaryKey]\n        });\n      }\n      rows.row.push(row);\n    }\n    if (rows.row.length > 0) {\n      execSource.rows = rows;\n    }\n  }\n  recordsReloader(refreshType) {\n    switch (refreshType) {\n      case RefreshType.NONE:\n        break;\n      case RefreshType.PARENT:\n      case RefreshType.MASTER:\n      case RefreshType.ALL:\n        this._dataUnit.loadData();\n        break;\n      default:\n        this._dataUnit.reloadCurrentRecord();\n    }\n  }\n  ;\n  buildVirtualPage() {\n    var _a, _b, _c, _d;\n    if ((_b = (_a = this._dataUnit) === null || _a === void 0 ? void 0 : _a.getSelectionInfo()) === null || _b === void 0 ? void 0 : _b.isAllRecords()) {\n      const virtualPage = {\n        filters: { filters: (_c = this._dataUnit) === null || _c === void 0 ? void 0 : _c.getAppliedFilters() },\n        orders: { orders: (_d = this._dataUnit) === null || _d === void 0 ? void 0 : _d.getSort() },\n      };\n      return virtualPage;\n    }\n  }\n}\n\nconst CONFIRMACAO = \"__CONFIRMACAO__\";\nconst ESCOLHA_SIM_NAO = \"__ESCOLHA_SIMNAO__\";\nclass ClientEventConfirm {\n  async clientConfirm(clientEvent, recaller) {\n    return new Promise((resolve) => {\n      const application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n      let actionType = \"\";\n      if (clientEvent.content.event.hasOwnProperty('stpCall')) {\n        recaller.requestBody = clientEvent.content.event.stpCall;\n        actionType = ActionsType.PROCEDURE;\n      }\n      else if (clientEvent.content.event.hasOwnProperty('runScript')) {\n        recaller.requestBody = clientEvent.content.event.runScript;\n        actionType = ActionsType.JAVASCRIPT;\n      }\n      else if (clientEvent.content.event.hasOwnProperty('javaCall')) {\n        recaller.requestBody = clientEvent.content.event.javaCall;\n        actionType = ActionsType.JAVA;\n      }\n      let param = {\n        type: 'S',\n        sequence: clientEvent.content.event.sequence\n      };\n      if (!recaller.requestBody.params) {\n        recaller.requestBody.params = {\n          param: []\n        };\n      }\n      else {\n        if (!Array.isArray(recaller.requestBody.params.param)) {\n          recaller.requestBody.params.param = [recaller.requestBody.params.param];\n        }\n      }\n      recaller.requestBody.params.param.push(param);\n      const title = clientEvent.content.event.title.$;\n      const message = clientEvent.content.event.message.$;\n      let requestBody;\n      switch (actionType) {\n        case ActionsType.JAVASCRIPT:\n          requestBody = { runScript: recaller.requestBody };\n          break;\n        case ActionsType.PROCEDURE:\n          requestBody = {\n            requestBody: {\n              stpCall: recaller.requestBody\n            }\n          };\n          break;\n        case ActionsType.JAVA:\n          requestBody = {\n            requestBody: {\n              javaCall: recaller.requestBody\n            }\n          };\n          break;\n      }\n      if (clientEvent.content.event.showNoOption == 'S') {\n        param.paramName = ESCOLHA_SIM_NAO;\n        const form = document.createElement(\"snk-client-confirm\");\n        window.document.body.appendChild(form);\n        form.titleMessage = title;\n        form.message = message;\n        form.accept = async () => {\n          param.$ = 'S';\n          await recaller.reCall(requestBody);\n          resolve();\n        };\n        form.cancel = async () => {\n          param.$ = 'N';\n          await recaller.reCall(requestBody);\n          resolve();\n        };\n        form.openPopup();\n      }\n      else {\n        application.confirm(title, message, null, 'warn', {\n          labelCancel: \"Cancelar\",\n          labelConfirm: \"Sim\"\n        }).then(async (confirmResult) => {\n          if (confirmResult) {\n            param.paramName = CONFIRMACAO;\n            param.$ = 'S';\n            await recaller.reCall(requestBody);\n            resolve();\n          }\n        });\n      }\n    });\n  }\n}\n\nconst snkActionsButtonCss = \".sc-snk-actions-button-h{display:flex;width:fit-content;height:fit-content}.snk-actions-button.sc-snk-actions-button{display:flex;width:fit-content;height:fit-content}.snk-actions-button__dropdown--show.sc-snk-actions-button{display:flex;flex-direction:column;position:fixed}.snk-actions-button__dropdown.sc-snk-actions-button>ez-dropdown.sc-snk-actions-button{position:relative}.snk-actions-button__dropdown.sc-snk-actions-button{display:none}\";\n\nconst SnkActionsButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.CLIENT_EVENT_CONFIRM_NAME = \"br.com.sankhya.actionbutton.clientconfirm\";\n    this._actions = [];\n    this.handleClick = (evt) => {\n      const selectedAction = this._actions.find((action) => action.actionID == evt.detail.id);\n      const executor = new ExecutorFactory(selectedAction.type).executor;\n      const action = new Actions(executor, this._dataUnit, this._resourceID);\n      action.execute(Object.assign({}, selectedAction));\n      this._showDropdown = false;\n    };\n    this._items = [];\n    this._showDropdown = false;\n  }\n  async getActions() {\n    const actions = await ServiceUtils.useCacheWithService(`SnkActionsButton_${this._entityName}-${this._resourceID}`, async () => {\n      var _a;\n      const param = {\n        param: {\n          entityName: this._entityName,\n          resourceID: this._resourceID,\n        },\n      };\n      const result = await DataFetcher.get().callServiceBroker('ActionButtonsSP.getActions', param);\n      return ((_a = result.actions) === null || _a === void 0 ? void 0 : _a.action) || [];\n    }, StorageType.IN_MEMORY_CACHE);\n    this._actions = SnkActionsButton.parameters.isOrderActions\n      ? ArrayUtils.sortAlphabetically(actions, 'description')\n      : actions;\n  }\n  controlDropdown() {\n    this._showDropdown = !this._showDropdown;\n  }\n  canShowDropdown() {\n    var _a;\n    return this._showDropdown && ((_a = this._items) === null || _a === void 0 ? void 0 : _a.length) > 0;\n  }\n  positionDropdown() {\n    var _a;\n    const bounding = (_a = this._ezButton) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n    if (!bounding || !this._dropdownParent)\n      return;\n    this._dropdownParent.style.top = (bounding.y + bounding.height + 5) + \"px\";\n    this._dropdownParent.style.left = bounding.x + \"px\";\n  }\n  closeDropdown(evt) {\n    const target = evt === null || evt === void 0 ? void 0 : evt.target;\n    if (!target)\n      return;\n    if (!target.closest(\".snk-actions-button\")) {\n      this._showDropdown = false;\n    }\n  }\n  setEvents() {\n    document.removeEventListener(\"click\", this.closeDropdown.bind(this));\n    document.addEventListener(\"click\", this.closeDropdown.bind(this));\n    document.removeEventListener(\"scroll\", this.positionDropdown.bind(this));\n    document.addEventListener(\"scroll\", this.positionDropdown.bind(this));\n  }\n  async componentWillLoad() {\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    await this.loadParameters();\n    const snkDataUnit = this._element.parentElement;\n    this._dataUnit = snkDataUnit === null || snkDataUnit === void 0 ? void 0 : snkDataUnit.dataUnit;\n    this._resourceID = snkDataUnit === null || snkDataUnit === void 0 ? void 0 : snkDataUnit.resourceID;\n    this._entityName = this._dataUnit.name.split('/')[2];\n    if (this._resourceID == undefined) {\n      this._resourceID = await ResourceIDUtils.getResourceID();\n    }\n    this.setEvents();\n    await this.getActions();\n    this.loadItems();\n  }\n  async componentDidLoad() {\n    if (!this._element)\n      return;\n    ElementIDUtils.addIDInfo(this._element);\n    this.positionDropdown();\n    if (!(await this._application.hasClientEvent(this.CLIENT_EVENT_CONFIRM_NAME))) {\n      const clientEventConfirm = new ClientEventConfirm();\n      this._application.addClientEvent(this.CLIENT_EVENT_CONFIRM_NAME, clientEventConfirm.clientConfirm);\n    }\n  }\n  componentDidUpdate() {\n    this.positionDropdown();\n  }\n  loadItems() {\n    if (!this._actions || this._actions.length == 0)\n      return;\n    this._actions.forEach(action => {\n      this._items.push({ id: action.actionID, label: action.description });\n    });\n  }\n  getElementID(sufix) {\n    return {\n      [ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME]: ElementIDUtils.getInternalIDInfo(sufix)\n    };\n  }\n  async loadParameters() {\n    if (SnkActionsButton.parameters.isOrderActions != null)\n      return;\n    SnkActionsButton.parameters.isOrderActions = await this._application.getBooleanParam('global.ordenar.acoes.personalizadas');\n  }\n  render() {\n    return (h(Host, null, (this._actions && this._actions.length > 0) &&\n      (h(\"div\", { class: `ez-padding-left--medium snk-actions-button\n                            ${this.canShowDropdown() ? \" ez-elevation--16\" : \"\"}\n                        ` }, h(\"ez-button\", Object.assign({ ref: (ref) => this._ezButton = ref, iconName: \"acao\", size: \"small\", mode: \"icon\", title: this._application.messagesBuilder.getMessage(\"snkActionsButton.title.actions\", undefined), onClick: () => this.controlDropdown() }, this.getElementID(\"button\"))), h(\"div\", Object.assign({ ref: (ref) => this._dropdownParent = ref, class: `${this.canShowDropdown() ?\n          \"snk-actions-button__dropdown--show\" :\n          \"snk-actions-button__dropdown\"}\n                            ` }, this.getElementID(\"dropdown\")), (this.canShowDropdown()) &&\n        (h(\"ez-dropdown\", Object.assign({ items: this._items, onEzClick: (evt) => this.handleClick(evt) }, this.getElementID(\"dropdown\"))))))), (this.canShowDropdown()) &&\n      (h(\"div\", Object.assign({ class: \"ez-scrim ez-scrim--light\" }, this.getElementID(\"ezScrim\"))))));\n  }\n  get _element() { return getElement(this); }\n};\nSnkActionsButton.parameters = {\n  isOrderActions: null\n};\nSnkActionsButton.style = snkActionsButtonCss;\n\nconst snkGridConfigCss = \".sc-snk-grid-config-h{--snk-grid-config__footer--padding-top:var(--space--medium, 12px);--snk-grid-config__main--padding-right:var(--space--medium, 12px);--snk-grid-config__tabselector-container--padding:var(--space--medium, 12px);--snk-grid-config__button-close--padding-left:var(--space--medium, 12px);--snk-grid-config__title--color:var(--title--primary, #2B3A54);--snk-grid-config__title--font-family:var(--font-pattern, \\\"Roboto\\\");--snk-grid-config__title--font-size:var(--title--large, 20px);--snk-grid-config__title--font-weight:var(--text-weight--extra-large, 700);--snk-grid-config__subtitle--font-family:var(--font-pattern, \\\"Roboto\\\");--snk-grid-config__subtitle--font-size:var(--text--medium, 14px);--snk-grid-config__group--font-family:var(--font-pattern, \\\"Roboto\\\");--snk-grid-config__group--font-size:var(--text--medium, 14px);--snk-grid-config__group--font-weight:var(--text-weight--large, 600);--snk-grid-config__group--padding-bottom:var(--space-small, 6px);--snk-grid-config__scrollbar--color-default:var(--scrollbar--default, #626e82);--snk-grid-config__scrollbar--color-background:var(--scrollbar--background, #E5EAF0);--snk-grid-config__scrollbar--color-hover:var(--scrollbar--hover, #2B3A54);--snk-grid-config__scrollbar--color-clicked:var(--scrollbar--clicked, #a2abb9);--snk-grid-config__scrollbar--border-radius:var(--border--radius-small, 6px);--snk-grid-config__scrollbar--width:var(--space--small, 6px);display:flex;flex-direction:column;max-height:100%;width:100%}.grid-config__body.sc-snk-grid-config{overflow:auto}.padding-right--medium.sc-snk-grid-config{padding-right:var(--space--medium)}ez-list.sc-snk-grid-config{height:100%}.height-calc.sc-snk-grid-config{max-height:calc(100% - 24px)}.grid-config__footer.sc-snk-grid-config{display:flex;justify-content:flex-end;width:100%;padding-top:var(--snk-grid-config__footer--padding-top)}.hidden.sc-snk-grid-config{display:none}.tabselector-container.sc-snk-grid-config{padding:var(--snk-grid-config__tabselector-container--padding) 0}.button-close.sc-snk-grid-config{padding-left:var(--snk-grid-config__button-close--padding-left)}.title-container.sc-snk-grid-config{display:flex;justify-content:space-between;align-items:center;width:100%}.title.sc-snk-grid-config{display:flex;margin:0;line-height:normal;letter-spacing:0em;text-align:left;color:var(--snk-grid-config__title--color);font-size:var(--snk-grid-config__title--font-size);font-family:var(--snk-grid-config__title--font-family);font-weight:var(--snk-grid-config__title--font-weight)}.subtitle.sc-snk-grid-config{color:var(--text--primary);font-size:var(--snk-grid-config__subtitle--font-size);font-family:var(--snk-grid-config__subtitle--font-family)}.grid-config__main.sc-snk-grid-config{overflow-y:auto;scrollbar-width:thin;width:100%;padding-bottom:20px;scrollbar-color:var(--snk-grid-config__scrollbar--color-clicked) var(--snk-grid-config__scrollbar--color-background)}.group-name.sc-snk-grid-config{font-family:var(--snk-grid-config__group--font-family);font-size:var(--snk-grid-config__group--font-size);font-weight:var(--snk-grid-config__group--font-weight);padding-bottom:var(--snk-grid-config__group--padding-bottom)}\";\n\nconst SnkGridConfig = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.configChange = createEvent(this, \"configChange\", 7);\n    this.configCancel = createEvent(this, \"configCancel\", 7);\n    this._orderListItems = [];\n    this._orderPriorityList = [];\n    this._visibleList = [];\n    this._hiddenList = [];\n    this._columListItems = [];\n    this._dataChanged = false;\n    this._componenteInternalKey = Date.now();\n    this.selectedIndex = 0;\n    this.columns = undefined;\n    this.config = undefined;\n    this.configName = undefined;\n    this.resourceID = undefined;\n    this._collapsibleBoxListOrder = true;\n    this._collapsibleBoxListSelect = false;\n  }\n  /* Creation Methods */\n  /**\n   * Conforme mecanismo de mensagens, é possível customizar as mensagens dos blocos de construção\n   * através de um pequeno modulo na estrutura da aplicação:\n   * - Criar um arquivo no seguinte caminho: /messages/appmessages.msg.js.\n   * Para conhecer os detalhes do módulo, vide o arquivo neste projeto \"/src/lib/message/resources/snk-grid.msg.ts\"\n   */\n  getMessage(key, params) {\n    const application = ApplicationContext.getContextValue('__SNK__APPLICATION__');\n    return application.messagesBuilder.getMessage(key, params);\n  }\n  getSortableColumns() {\n    let newList = [];\n    this.columns.filter(col => { var _a; return StringUtils.getBooleanValue((_a = col === null || col === void 0 ? void 0 : col.props) === null || _a === void 0 ? void 0 : _a.get('sortable'), true); }).forEach((column) => {\n      var _a, _b;\n      let configItem = (_a = this.config) === null || _a === void 0 ? void 0 : _a.columns.find((item) => item.name === column.name);\n      let item = { label: column.label, sort: (_b = column === null || column === void 0 ? void 0 : column.sort) !== null && _b !== void 0 ? _b : ORDER_VALUES.asc.value, id: column.name };\n      if (configItem) {\n        item['orderIndex'] = configItem.orderIndex;\n        item['ascending'] = configItem.ascending;\n      }\n      if (!column.hidden) {\n        newList.push(item);\n      }\n    });\n    return newList;\n  }\n  createOrderList() {\n    let newSortableList = this.getSortableColumns();\n    newSortableList.sort((a, b) => {\n      //OS dois tem order index 0 e pelo menos um deles tem orientação de ordenação.\n      if (a.orderIndex == 0 && b.orderIndex == 0 && (a.ascending != undefined || b.ascending != undefined)) {\n        if (a.ascending != undefined)\n          return -1;\n        if (b.ascending != undefined)\n          return 1;\n        return 0;\n        //Pelo menos um deles tem order index diferente de 0 e os dois tem orientação de ordenação.\n      }\n      else if (a.ascending != undefined && b.ascending != undefined) {\n        return (a.orderIndex - b.orderIndex);\n        //Pelo menos um deles tem order index diferente de 0 e pelo menos um deles tem orientação de ordenação.\n      }\n      else if (a.ascending != undefined || b.ascending != undefined) {\n        if (a.ascending != undefined)\n          return -1;\n        if (b.ascending != undefined)\n          return 1;\n        return 0;\n      }\n      return (a.orderIndex - b.orderIndex);\n    });\n    this._orderListItems = newSortableList;\n  }\n  createColumnList() {\n    let visibleGroup = {\n      group: this.getMessage('snkGridConfig.group.visible'),\n      items: [],\n    };\n    let hiddenGroup = {\n      group: this.getMessage('snkGridConfig.group.hidden'),\n      items: [],\n      sort: ORDER_VALUES.asc.value,\n    };\n    this.columns.forEach((column) => {\n      var _a;\n      let item = {\n        label: column.label,\n        selected: false,\n        sort: (_a = column === null || column === void 0 ? void 0 : column.sort) !== null && _a !== void 0 ? _a : ORDER_VALUES.asc.value,\n        id: column.name,\n      };\n      if (column.hidden) {\n        hiddenGroup.items.push(item);\n      }\n      else {\n        visibleGroup.items.push(item);\n      }\n    });\n    this._columListItems = [visibleGroup, hiddenGroup];\n    this._visibleList = visibleGroup.items;\n    this._hiddenList = hiddenGroup.items;\n    this.createOrderList();\n  }\n  createOrderListSlotDataElementId(item) {\n    return `${this._element.getAttribute(ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME)}_configItem_${StringUtils.toCamelCase(item.label)}`;\n  }\n  buildOrderListSlot(item) {\n    const dataElementId = this.createOrderListSlotDataElementId(item);\n    let selectedOption = ORDER_VALUES.none.value;\n    if ((item === null || item === void 0 ? void 0 : item.ascending) != undefined) {\n      selectedOption = item.ascending == true ? ORDER_VALUES.asc.value : ORDER_VALUES.desc.value;\n    }\n    return (h(\"snk-select-box\", { selectedOption: selectedOption, key: 'snk-select-box-' + this._componenteInternalKey + '-' + item, \"data-element-id\": dataElementId, onEzChange: (evt) => {\n        evt.stopPropagation();\n        this.updateOrder(evt.detail, item.label);\n      }, preventAutoFocus: true }));\n  }\n  updateOrder(sortOrder, updatedItemLabel) {\n    var _a;\n    this._dataChanged = true;\n    let newList = [...this.columns];\n    let newItem = newList.find((item) => item.label === updatedItemLabel);\n    if (newItem) {\n      newItem.sort = sortOrder.value === ORDER_VALUES.none.value ? undefined : sortOrder.value;\n    }\n    let orderArray;\n    if (((_a = this._orderPriorityList) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      this._orderPriorityList.find((item) => item.label === newItem.label).sort = sortOrder;\n      this._orderPriorityList.filter((item) => item.sort).forEach((item, index) => {\n        if (item.label === newItem.label) {\n          newItem.sortIndex = index;\n        }\n      });\n    }\n    else {\n      orderArray = newList.filter((item) => item.sort && item.hidden !== true)\n        .map((item, index) => {\n        return { label: item.label, orderIndex: index };\n      });\n      orderArray.forEach((element) => {\n        newList.find((item) => item.label === element.label).sortIndex = element.orderIndex;\n      });\n    }\n    this.columns = newList;\n  }\n  finish() {\n    if (!this._dataChanged) {\n      this.closeConfig();\n      return;\n    }\n    let newColumnList = [];\n    this._columListItems.forEach((group) => {\n      group.items.forEach((item) => {\n        const baseColumn = this.columns.find((column) => column.label === item.label);\n        let newColumnItem = Object.assign({}, baseColumn);\n        if (group.group === this.getMessage('snkGridConfig.group.hidden')) {\n          newColumnItem.hidden = true;\n        }\n        else {\n          newColumnItem.hidden = false;\n        }\n        newColumnList.push(newColumnItem);\n      });\n    });\n    this.columns = newColumnList;\n    this._dataChanged = false;\n    this.closeConfig();\n    this.save();\n  }\n  saveGridConfigOnStorage(_newConfig) {\n    ConfigStorage.saveGridConfig(_newConfig, this.configName, this.resourceID)\n      .then((savedConfig) => {\n      this.configChange.emit(savedConfig);\n      ApplicationUtils.info(this.getMessage('snkGridConfig.info.successfullyConfigSaved'), { iconName: 'check' });\n    });\n  }\n  reOrderPriorityColumns(columns, orderPriorityList) {\n    let orderArray = [];\n    orderArray = columns.filter((item) => item.sort && item.hidden !== true)\n      .map((item) => {\n      return { label: item.label, orderIndex: 0 };\n    });\n    let indexCount = 0;\n    let newOrderArray = [];\n    orderPriorityList.forEach((orderPriorityItem) => {\n      let item = orderArray.find((column) => column.label === orderPriorityItem.label);\n      if (item) {\n        item.orderIndex = indexCount;\n        newOrderArray.push(item);\n        indexCount++;\n      }\n    });\n    if (newOrderArray.length > 0) {\n      orderArray = newOrderArray;\n    }\n    return orderArray;\n  }\n  save() {\n    var _a;\n    let _newConfig;\n    if (this.config) {\n      _newConfig = this.config;\n    }\n    else {\n      _newConfig = this.createConfigFromState(this.columns);\n    }\n    let _newColumnConfigList = [];\n    let orderArray;\n    if (((_a = this._orderPriorityList) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      orderArray = this.reOrderPriorityColumns(this.columns, this._orderPriorityList);\n    }\n    this.columns.forEach((column) => {\n      let _newColumnConfig = _newConfig.columns.find((_newColumnConfig) => column.name === _newColumnConfig.name);\n      if (column.hidden === true && _newColumnConfig)\n        return;\n      if (_newColumnConfig) {\n        _newColumnConfig.width = column.width;\n      }\n      else if (column.hidden === false) {\n        _newColumnConfig = { name: column.name, width: column.width, orderIndex: 0 };\n      }\n      if (_newColumnConfig) {\n        if (column.sort) {\n          _newColumnConfig.ascending = column.sort.toUpperCase() === ORDER_VALUES.asc.value ? true : false;\n          if (orderArray) {\n            adjustPriorityOrder(column, _newColumnConfig);\n          }\n          else {\n            _newColumnConfig.orderIndex = column.sortIndex;\n          }\n        }\n        else {\n          delete _newColumnConfig.ascending;\n          _newColumnConfig.orderIndex = 0;\n        }\n        _newColumnConfig.configVersion = SnkGridConfig.CURRENT_CONFIG_VERSION;\n        _newColumnConfigList.push(_newColumnConfig);\n      }\n    });\n    _newConfig.columns = _newColumnConfigList;\n    this.saveGridConfigOnStorage(_newConfig);\n    function adjustPriorityOrder(column, _newColumnConfig) {\n      if (orderArray) {\n        let orderItem = orderArray.find((item) => item.label === column.label);\n        if (orderItem) {\n          _newColumnConfig.orderIndex = orderItem.orderIndex;\n        }\n      }\n    }\n  }\n  createConfigFromState(state) {\n    let newConfig = { columns: [] };\n    state.forEach((columnState) => {\n      if (!columnState.hidden) {\n        let newConfigColumn = { name: columnState.name };\n        if (columnState.width) {\n          newConfigColumn['width'] = columnState.width;\n        }\n        if (columnState.sort) {\n          newConfigColumn['ascending'] = (columnState.sort.toUpperCase() === ORDER_VALUES.asc.value);\n          newConfigColumn['orderIndex'] = columnState.sortIndex;\n        }\n        else {\n          newConfigColumn['orderIndex'] = 0;\n        }\n        if (newConfigColumn) {\n          newConfig.columns.push(newConfigColumn);\n        }\n      }\n    });\n    return newConfig;\n  }\n  closeConfig() {\n    if (this._dataChanged) {\n      let options = {\n        canClose: false,\n        labelCancel: this.getMessage('snkGridConfig.confirm.cancel'),\n        labelConfirm: this.getMessage('snkGridConfig.confirm.save'),\n        btnConfirmDanger: false,\n      };\n      ApplicationUtils.confirm(this.getMessage('snkGridConfig.confirm.alert'), this.getMessage('snkGridConfig.confirm.msgCancel'), null, DialogType.WARN, options)\n        .then((response) => {\n        if (!response) {\n          this._dataChanged = false;\n          this.configCancel.emit();\n          this._componenteInternalKey = Date.now();\n        }\n        else {\n          this.finish();\n        }\n      });\n    }\n    else {\n      this.configCancel.emit();\n    }\n  }\n  handleColumnListChange(evt) {\n    var _a;\n    if (evt.detail) {\n      let visibleItems = (_a = evt.detail.find((group) => group.group === this.getMessage('snkGridConfig.group.visible'))) === null || _a === void 0 ? void 0 : _a.items;\n      if (visibleItems) {\n        this._dataChanged = true;\n        this._orderListItems = visibleItems;\n      }\n    }\n  }\n  handleOrderListChange(evt) {\n    if (evt.detail) {\n      let orderPriorityList = evt.detail;\n      if (orderPriorityList) {\n        this._dataChanged = true;\n        this._orderPriorityList = orderPriorityList;\n      }\n    }\n  }\n  componentWillRender() {\n    var _a;\n    if (((_a = this.columns) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      this.createColumnList();\n    }\n  }\n  componentDidLoad() {\n    ElementIDUtils.addIDInfo(this._element);\n  }\n  handleRightListChange(rightList) {\n    const visibleGroup = this._columListItems.find(group => group.group === this.getMessage('snkGridConfig.group.visible'));\n    if (visibleGroup && visibleGroup.items != rightList) {\n      visibleGroup.items = rightList;\n      this._dataChanged = true;\n    }\n  }\n  getListSlots() {\n    return {\n      RIGHT_LIST: {\n        itemRightSlotBuilder: (item) => this.buildOrderListSlot(item),\n      },\n    };\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: \"grid-config__header\" }, h(\"div\", { class: \"title-container\" }, h(\"div\", { class: \"ez-margin-bottom--medium\" }, h(\"label\", { class: \"title\" }, this.getMessage('snkGridConfig.gridConfiguration')), h(\"label\", { class: \"subtitle\" }, this.getMessage('snkGridConfig.columnVisibilityOrder'))), h(\"div\", { class: \"button-close\" }, h(\"ez-button\", { mode: \"icon\", iconName: \"close\", size: \"medium\", class: \"ez-button--tertiary\", onClick: () => this.closeConfig() })))), h(\"div\", { class: \"grid-config__body\" }, h(\"ez-collapsible-box\", { id: 'group-select-columns', label: this.getMessage('snkGridConfig.columnsSelection'), \"header-size\": \"medium\", key: 'key_group-select-columns', value: this._collapsibleBoxListSelect, onEzChange: ({ detail }) => this._collapsibleBoxListOrder = !detail }, h(\"div\", { class: \"grid-config__main\" }, h(\"ez-double-list\", { leftList: this._hiddenList, leftTitle: this.getMessage('snkGridConfig.availableColumns'), rightList: this._visibleList, rightTitle: this.getMessage('snkGridConfig.selectedColumns'), onEzRightListChanged: ({ detail }) => this.handleRightListChange(detail), emptyMessage: {\n        LEFT_LIST: this.getMessage('snkGridConfig.emptyMensage.left'),\n        RIGHT_LIST: this.getMessage('snkGridConfig.emptyMensage.right'),\n      }, entityLabel: 'coluna', entityLabelPlural: 'colunas' }))), h(\"ez-collapsible-box\", { id: 'ID_group-order-columns', label: this.getMessage('snkGridConfig.dataOrdering'), \"header-size\": \"medium\", key: 'KEY_group-order-columns', value: this._collapsibleBoxListOrder, onEzChange: ({ detail }) => this._collapsibleBoxListSelect = !detail }, h(\"div\", { class: \"grid-config__main\" }, h(\"ez-double-list\", { rightList: this._orderListItems, rightTitle: this.getMessage('snkGridConfig.selectedColumns'), useOnlyRightList: true, slotsListBuilder: this.getListSlots(), emptyMessage: {\n        RIGHT_LIST: this.getMessage('snkGridConfig.emptyMensage.right'),\n      }, entityLabel: 'coluna', entityLabelPlural: 'colunas' })))), h(\"div\", { class: \"grid-config__footer\" }, h(\"ez-button\", { class: \"padding-right--medium\", label: this.getMessage('snkGridConfig.cancel'), onClick: () => this.closeConfig() }), h(\"ez-button\", { label: this.getMessage('snkGridConfig.complete'), class: \"ez-button--primary\", onClick: () => this.finish() }))));\n  }\n  static get assetsDirs() { return [\"../assets\"]; }\n  get _element() { return getElement(this); }\n};\nSnkGridConfig.CURRENT_CONFIG_VERSION = 1;\nSnkGridConfig.style = snkGridConfigCss;\n\nconst snkLayoutFormConfigCss = \".sc-snk-layout-form-config-h{display:block}\";\n\nconst FORM_COL_CONFIG_PREFIX = 'formColCfg.';\nconst SnkLayoutFormConfig = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._formConfigFetcher = new FormConfigFetcher();\n    this.layoutType = FormLayout.CASCADE;\n  }\n  /**\n   * Salva o tipo de layout escolhido. Sem retorno.\n   */\n  async save() {\n    this._LayoutFormConfigSingleton.setConfig(this.layoutType);\n    this._formConfigFetcher.saveLayoutFormConfig(FORM_COL_CONFIG_PREFIX + this._resourceID, { config: this.layoutType, newConfig: true });\n  }\n  async componentWillLoad() {\n    const _application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    this._LayoutFormConfigSingleton = await (_application === null || _application === void 0 ? void 0 : _application.getLayoutFormConfig());\n    this._resourceID = await (_application === null || _application === void 0 ? void 0 : _application.getResourceID());\n    this.setLayoutInit();\n  }\n  setLayoutInit() {\n    if (!this._LayoutFormConfigSingleton)\n      return;\n    const { config } = this._LayoutFormConfigSingleton;\n    this.layoutType = Number(config) in FormLayout ? Number(config) : FormLayout.CASCADE;\n  }\n  toggleLayout(key) {\n    this.layoutType = key;\n  }\n  render() {\n    return (h(\"div\", { class: \"ez-flex ez-flex--column\" }, h(\"div\", { class: \"ez-margin-bottom--small\" }, h(\"ez-check\", { label: \"Layout em cascata\", class: \"ez-margin-bottom--small\", onEzChange: () => this.toggleLayout(FormLayout.CASCADE), value: this.layoutType === FormLayout.CASCADE }), h(\"snk-view-representation\", { mode: FormLayout.CASCADE }), h(\"label\", { class: \"ez-label ez-margin--small ez-flex ez-text--medium\" }, \"Todos os campos ser\\u00E3o organizados em uma coluna \\u00FAnica.\")), h(\"div\", null, h(\"ez-check\", { label: \"Layout lado a lado\", class: \"ez-margin-bottom--small\", onEzChange: () => this.toggleLayout(FormLayout.SIDE_BY_SIDE), value: this.layoutType === FormLayout.SIDE_BY_SIDE }), h(\"snk-view-representation\", { mode: FormLayout.SIDE_BY_SIDE }), h(\"label\", { class: \"ez-label ez-margin--small ez-flex ez-text--medium\" }, \"Todos os campos ser\\u00E3o dispostos lado a lado, ajustando-se automaticamente \\u00E0 largura da tela.\"))));\n  }\n};\nSnkLayoutFormConfig.style = snkLayoutFormConfigCss;\n\nconst snkSelectBoxCss = \"ez-combo-box{width:100px;--ez-text-input__margin-bottom:0px}.grid-config-combo{--ez-text-input--height:28px;--ez-text-input__input--background-color:#fff;--ez-text-input__input--border-color:#dce0e8}\";\n\nconst SelectBox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ezChange = createEvent(this, \"ezChange\", 7);\n    this.selectedOption = ORDER_VALUES.none;\n    this.preventAutoFocus = false;\n  }\n  render() {\n    return (h(\"ez-combo-box\", { class: \"grid-config-combo ez-input--inverted\", label: \"\", suppressSearch: true, value: this.selectedOption, enabled: true, canShowError: false, suppressEmptyOption: true, preventAutoFocus: this.preventAutoFocus }, Object.keys(ORDER_VALUES).map((key) => {\n      return h(\"option\", { value: ORDER_VALUES[key].value }, ORDER_VALUES[key].label);\n    })));\n  }\n  static get assetsDirs() { return [\"../assets\"]; }\n};\nSelectBox.style = snkSelectBoxCss;\n\nconst snkSimpleFormConfigCss = \":host{display:block}.config-container{display:flex;flex-direction:column;align-items:center;justify-content:space-between}.config-lists{width:100%;margin-bottom:12px}.config-actions{display:flex;flex-direction:row;justify-content:flex-end;width:100%;gap:12px}\";\n\nconst SnkSimpleFormConfig = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.snkConfigSaved = createEvent(this, \"snkConfigSaved\", 7);\n    this._formConfigFetcher = new FormConfigFetcher();\n    this.fieldsToSave = [];\n    this.dataUnit = undefined;\n    this.configName = undefined;\n    this.avaliableFields = [];\n    this.selectedFields = [];\n  }\n  /**\n   * Responsável por abrir o configurador.\n   */\n  async show() {\n    var _a;\n    await ((_a = this.ezDoubleListRef) === null || _a === void 0 ? void 0 : _a.resetSelectedLists());\n    await this.initializeFormConfig();\n    this.ezPopupRef.opened = true;\n  }\n  ;\n  async initializeFormConfig() {\n    if (!this.configName)\n      return;\n    const allFields = this.getAllVisibleFieldsFromDataUnit();\n    const displayedFieldNameList = await this.getConfig();\n    //Quando não retorna dados, é por quê não existe configuração do usuário salva.\n    if (displayedFieldNameList.length === 0) {\n      this.avaliableFields = [];\n      this.selectedFields = [...allFields];\n      this.fieldsToSave = [...this.selectedFields];\n      return;\n    }\n    const selectedFieldsAux = this.sortDisplayedFields(displayedFieldNameList, allFields);\n    const avaliableFieldsAux = allFields.filter(field => !displayedFieldNameList.includes(field.id));\n    this.avaliableFields = [...avaliableFieldsAux];\n    this.selectedFields = [...selectedFieldsAux];\n    this.fieldsToSave = [...this.selectedFields];\n  }\n  async getConfig() {\n    const fieldList = await this._formConfigFetcher.fetchSimpleFormConfig(this.configName);\n    return [...this.removeDuplicates(fieldList)];\n  }\n  removeDuplicates(strings) {\n    return strings.filter((item, index) => strings.indexOf(item) === index);\n  }\n  sortDisplayedFields(displayedFieldNameList, allFields) {\n    const selectedFieldsAux = [];\n    //É preciso garantir a ordem na qual os campos vieram na resposta do fetchSimpleFormConfig.\n    displayedFieldNameList.forEach(fieldName => {\n      const field = allFields.find(field => field.id === fieldName);\n      if (!field)\n        return;\n      selectedFieldsAux.push(field);\n    });\n    return selectedFieldsAux;\n  }\n  getAllVisibleFieldsFromDataUnit() {\n    var _a, _b, _c;\n    const visibleFields = ((_c = (_b = (_a = this.dataUnit) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.fields) !== null && _c !== void 0 ? _c : []).filter(field => field.visible);\n    return visibleFields.map(field => {\n      return { id: field.name, label: field.label };\n    });\n  }\n  close() {\n    this.ezPopupRef.opened = false;\n  }\n  async handleResetConfigs() {\n    await this._formConfigFetcher.restoreFormConfig(this.configName);\n    await this.initializeFormConfig();\n    await this.handleSave();\n  }\n  handleCancel() {\n    this.close();\n  }\n  async handleSave() {\n    const saveList = this.fieldsToSave.map(field => field.id);\n    await this._formConfigFetcher.saveSimpleFormConfig(this.configName, saveList);\n    this.close();\n    this.snkConfigSaved.emit();\n  }\n  render() {\n    return (h(\"ez-popup\", { ref: (ref) => this.ezPopupRef = ref, heightMode: 'auto', size: 'medium', ezTitle: 'Configurar formul\\u00E1rio' }, h(\"div\", { class: 'config-container' }, h(\"div\", { class: 'config-lists' }, h(\"ez-double-list\", { ref: (ref) => this.ezDoubleListRef = ref, leftList: this.avaliableFields, leftTitle: 'Campos disponíveis', rightList: this.selectedFields, rightTitle: 'Campos selecionados', onEzRightListChanged: ({ detail }) => this.fieldsToSave = [...detail], entityLabel: 'campo', entityLabelPlural: 'campos' })), h(\"div\", { class: 'config-actions' }, h(\"ez-button\", { label: 'Restaurar', onClick: this.handleResetConfigs.bind(this), size: 'small' }), h(\"ez-button\", { label: 'Cancelar', onClick: this.handleCancel.bind(this), size: 'small' }), h(\"ez-button\", { label: 'Salvar', class: 'ez-button--primary', onClick: this.handleSave.bind(this), size: 'small' })))));\n  }\n};\nSnkSimpleFormConfig.style = snkSimpleFormConfigCss;\n\nconst snkViewRepresentationCss = \".sc-snk-view-representation-h{display:block}.svg-container.sc-snk-view-representation{display:flex;width:185px;height:125px;border-radius:8px;background-color:#f7f7f7;padding:10px 12px;box-sizing:border-box;position:relative}.svg-container__background.sc-snk-view-representation{display:flex;flex-direction:column;width:100%}.svg-container__header.sc-snk-view-representation{display:flex;gap:2px;margin-bottom:12px}.svg-container__circle.sc-snk-view-representation{width:9px;height:9px;border-radius:50%}.svg-container__circle--red.sc-snk-view-representation{background-color:#ed7678}.svg-container__circle--yellow.sc-snk-view-representation{background-color:#eddb76}.svg-container__circle--green.sc-snk-view-representation{background-color:#7ad08e}.svg-container__section.sc-snk-view-representation{width:100%}.svg-container__collumn.sc-snk-view-representation{width:100%;display:flex;flex-direction:column}.svg-container__inline.sc-snk-view-representation{display:flex;flex-direction:row;gap:6px}.svg-container__line.sc-snk-view-representation{height:13px;border-radius:4px;background-color:#d9d9d9;margin-bottom:4px}.svg-container__line--short.sc-snk-view-representation{width:39.68px;height:7px;border-radius:3.5px}.svg-container__line--long.sc-snk-view-representation{width:100%}\";\n\nconst SnkViewRepresentation = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mode = FormLayout.SIDE_BY_SIDE;\n  }\n  renderCascadeLayout() {\n    return (h(\"div\", { class: \"svg-container__collumn\" }, [...Array(3)].map(() => (h(\"div\", { class: \"svg-container__section\" }, h(\"div\", { class: \"svg-container__line svg-container__line--short\" }), h(\"div\", { class: \"svg-container__line svg-container__line--long\" }))))));\n  }\n  renderSideBySideLayout() {\n    return (h(\"div\", { class: \"svg-container__inline\" }, [...Array(2)].map(() => this.renderCascadeLayout())));\n  }\n  render() {\n    return (h(\"div\", { class: \"svg-container ez-margin-left--small\" }, h(\"div\", { class: \"svg-container__background\" }, h(\"div\", { class: \"svg-container__header\" }, h(\"div\", { class: \"svg-container__circle svg-container__circle--red\" }), h(\"div\", { class: \"svg-container__circle svg-container__circle--yellow\" }), h(\"div\", { class: \"svg-container__circle svg-container__circle--green\" })), this.mode === FormLayout.CASCADE\n      ? this.renderCascadeLayout()\n      : this.renderSideBySideLayout())));\n  }\n};\nSnkViewRepresentation.style = snkViewRepresentationCss;\n\nconst taskbarActionsButtonCss = \".sc-taskbar-actions-button-h{--ez-dropdown--min-width:150px;display:flex;width:fit-content;height:fit-content}.ez-dropdown-container.sc-taskbar-actions-button{position:relative;display:inline-block}.ez-dropdown--sticky.sc-taskbar-actions-button{position:absolute;display:block;min-width:var(--ez-dropdown--min-width)}\";\n\nconst TaskbarActionsButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.taskbarActionSelected = createEvent(this, \"taskbarActionSelected\", 7);\n    this.taskbarActionsOpened = createEvent(this, \"taskbarActionsOpened\", 7);\n    this.taskbarActionsButtonDisconnected = createEvent(this, \"taskbarActionsButtonDisconnected\", 7);\n    this._showDropdown = false;\n    this.title = undefined;\n    this.enabled = undefined;\n    this.actions = undefined;\n  }\n  async handleKeyDown(event) {\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      await this.hideActions();\n    }\n  }\n  async handleClose() {\n    await this.hideActions();\n  }\n  /**\n   * Exibe a lista de ações.\n   */\n  async showActions() {\n    this._showDropdown = true;\n    requestAnimationFrame(() => {\n      this._element.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'nearest' });\n    });\n  }\n  /**\n   * Esaconde a lista de ações.\n   */\n  async hideActions() {\n    this._showDropdown = false;\n  }\n  /**\n   * Informa se a lista de ações está aberta.\n   */\n  async isOpened() {\n    return this._showDropdown;\n  }\n  controlDropdown() {\n    this._showDropdown = !this._showDropdown;\n  }\n  loadItems() {\n    return this.actions.filter(action => action !== undefined).map(action => {\n      var _a;\n      return {\n        id: action.value,\n        label: action.label,\n        value: action.value,\n        type: (_a = action.type) !== null && _a !== void 0 ? _a : 'item',\n        children: action.children,\n        iconName: action.iconName,\n        subAction: action.subAction,\n        group: action.group,\n        disableCloseOnSelect: action.disableCloseOnSelect,\n      };\n    });\n  }\n  canShowDropdown() {\n    var _a;\n    return this._showDropdown && ((_a = this.actions) === null || _a === void 0 ? void 0 : _a.length) > 0;\n  }\n  onSelectAction(iAction) {\n    const actions = this.actions.map(action => (Object.assign(Object.assign({}, action), { id: action.value })));\n    const selectedAction = this.getSelectedAction(iAction.id, actions);\n    this.taskbarActionSelected.emit(selectedAction);\n    if (!selectedAction.disableCloseOnSelect) {\n      this._showDropdown = false;\n    }\n  }\n  getSelectedAction(id, actions) {\n    let selectedItem = null;\n    for (const item of actions) {\n      if (item.id === id) {\n        selectedItem = item;\n        break;\n      }\n      if (!(item === null || item === void 0 ? void 0 : item.children))\n        continue;\n      selectedItem = this.getSelectedAction(id, item.children);\n      if (selectedItem)\n        break;\n    }\n    return selectedItem;\n  }\n  dropdownItemBuilder(item, _level) {\n    const itemAction = this.actions.find(action => action.value === item.id);\n    if (!itemAction || !itemAction.itemBuilder) {\n      return undefined;\n    }\n    const customContent = itemAction.itemBuilder(this._element, itemAction);\n    if (typeof customContent === 'string') {\n      return h(\"div\", { innerHTML: customContent });\n    }\n    return customContent;\n  }\n  /**\n   * Existem algumas actions que precisam ser inicializadas assim que o componente é carregado,\n   * pois necessitam de algumas informações, como por exemplo a referência do elemento taskbar-actions-button na tela.\n   * É o caso do searchColumn/searhField\n   */\n  initializeEagerItems() {\n    var _a;\n    (_a = this.actions) === null || _a === void 0 ? void 0 : _a.forEach(action => {\n      var _a;\n      if (action && action.eagerInitialize && action.itemBuilder) {\n        (_a = action.itemBuilder) === null || _a === void 0 ? void 0 : _a.call(action, this._element, action);\n      }\n    });\n  }\n  componentDidLoad() {\n    this.initializeEagerItems();\n  }\n  componentDidRender() {\n    if (this._showDropdown) {\n      this.taskbarActionsOpened.emit(this._element);\n    }\n  }\n  disconnectedCallback() {\n    this.taskbarActionsButtonDisconnected.emit();\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: `${this.canShowDropdown() ? ' ez-elevation--16' : ''} ez-dropdown-container` }, h(\"ez-button\", { title: this.title, mode: 'icon', iconName: 'dots-vertical', size: 'small', enabled: this.enabled, onClick: () => this.controlDropdown() }), this.canShowDropdown() && h(\"ez-dropdown\", { class: `ez-dropdown--sticky`, items: this.loadItems(), onEzClick: (evt) => this.onSelectAction(evt.detail), onEzOutsideClick: () => this._showDropdown = false, itemBuilder: (item, level) => this.dropdownItemBuilder(item, level) }))));\n  }\n  get _element() { return getElement(this); }\n};\nTaskbarActionsButton.style = taskbarActionsButtonCss;\n\nconst taskbarSplitButtonCss = \"\";\n\nconst TaskbarSplitButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._showDropdown = false;\n    this.iconName = undefined;\n    this.action = undefined;\n    this.name = undefined;\n    this.className = undefined;\n    this.dataElementId = undefined;\n    this.title = undefined;\n    this.enabled = undefined;\n    this.actions = undefined;\n  }\n  initializeEagerItems() {\n    var _a;\n    (_a = this.actions) === null || _a === void 0 ? void 0 : _a.forEach(action => {\n      var _a;\n      if (action && action.eagerInitialize && action.itemBuilder) {\n        (_a = action.itemBuilder) === null || _a === void 0 ? void 0 : _a.call(action, this._splitButtonRef, action);\n      }\n    });\n  }\n  componentDidLoad() {\n    this.initializeEagerItems();\n  }\n  dropdownItemBuilder(item, _level) {\n    const itemAction = this.actions.find(action => action.value === item.id);\n    if (!itemAction || !itemAction.itemBuilder) {\n      return undefined;\n    }\n    const customContent = itemAction.itemBuilder(this._splitButtonRef, itemAction);\n    if (typeof customContent === 'string') {\n      return h(\"div\", { innerHTML: customContent });\n    }\n    return customContent;\n  }\n  loadItems() {\n    return this.actions.filter(action => action !== undefined).map(action => {\n      var _a;\n      return {\n        id: action.value,\n        label: action.label,\n        value: action.value,\n        type: (_a = action.type) !== null && _a !== void 0 ? _a : 'item',\n        children: action.children,\n        iconName: action.iconName,\n        subAction: action.subAction,\n        group: action.group,\n        disableCloseOnSelect: action.disableCloseOnSelect,\n      };\n    });\n  }\n  render() {\n    return (h(Host, null, h(\"ez-split-button\", { ref: (ref) => this._splitButtonRef = ref, key: this.dataElementId, class: `${this.className} \"ez-split-button--tertiary ez-padding--medium\"`, items: this.loadItems(), mode: \"icon-only\", iconName: this.iconName, enabled: this.enabled, show: this._showDropdown, onButtonClick: () => this.action(this.name), itemBuilder: (item, level) => this.dropdownItemBuilder(item, level) })));\n  }\n};\nTaskbarSplitButton.style = taskbarSplitButtonCss;\n\nexport { SnkActionsButton as snk_actions_button, SnkGridConfig as snk_grid_config, SnkLayoutFormConfig as snk_layout_form_config, SelectBox as snk_select_box, SnkSimpleFormConfig as snk_simple_form_config, SnkViewRepresentation as snk_view_representation, TaskbarActionsButton as taskbar_actions_button, TaskbarSplitButton as taskbar_split_button };\n"],"names":["SERVICE_ACTION_EXECUTE_JAVA","JavaExecutor","action","_a","execSource","resolve","request","DataFetcher","SERVICE_ACTION_EXECUTE_SCRIPT","JavascriptExecutor","LaunchScreenExecutor","ApplicationContext","dataUnit","resourceID","launchObject","params","processedParams","param","localField","value","localFieldLabel","StringUtils","ErrorException","SERVICE_ACTION_EXECUTE_STP","ProcedureExecutor","_b","_c","procName","rootEntity","ActionsType","ExecutorFactory","actionType","RefreshType","MASTER_ROW_PROPERTY","ENTITY_NAME_PROPERTY","SERVICE_GET_CONFIGURATIONS","Actions","actionsExecuteInterface","appResourceId","getSelectedRecordsIDsInfo","name","hasParamsToSave","callback","WarningException","paramsSource","i","paramSource","form","ObjectUtils","resultAction","lastParams","resultParams","lastParam","type","isCheckbox","fieldProps","entityPK","ParamType","opc","index","data","opcArr","dataType","DateUtils","resourceId","reject","config","result","error","actionId","executeAction","primaryKeys","rows","sourceRows","sourceRow","row","primaryKey","refreshType","_d","CONFIRMACAO","ESCOLHA_SIM_NAO","ClientEventConfirm","clientEvent","recaller","application","title","message","requestBody","confirmResult","snkActionsButtonCss","SnkActionsButton","hostRef","registerInstance","evt","selectedAction","executor","actions","ServiceUtils","StorageType","ArrayUtils","bounding","target","snkDataUnit","ResourceIDUtils","ElementIDUtils","clientEventConfirm","sufix","h","Host","ref","getElement","snkGridConfigCss","SnkGridConfig","createEvent","key","newList","col","column","configItem","item","ORDER_VALUES","newSortableList","a","b","visibleGroup","hiddenGroup","dataElementId","selectedOption","sortOrder","updatedItemLabel","newItem","orderArray","element","newColumnList","group","baseColumn","newColumnItem","_newConfig","ConfigStorage","savedConfig","ApplicationUtils","columns","orderPriorityList","indexCount","newOrderArray","orderPriorityItem","_newColumnConfigList","_newColumnConfig","adjustPriorityOrder","orderItem","state","newConfig","columnState","newConfigColumn","options","DialogType","response","visibleItems","rightList","detail","snkLayoutFormConfigCss","FORM_COL_CONFIG_PREFIX","SnkLayoutFormConfig","FormConfigFetcher","FormLayout","_application","snkSelectBoxCss","SelectBox","snkSimpleFormConfigCss","SnkSimpleFormConfig","allFields","displayedFieldNameList","selectedFieldsAux","avaliableFieldsAux","field","fieldList","strings","fieldName","saveList","snkViewRepresentationCss","SnkViewRepresentation","taskbarActionsButtonCss","TaskbarActionsButton","event","iAction","id","selectedItem","_level","itemAction","customContent","level","taskbarSplitButtonCss","TaskbarSplitButton"],"mappings":"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","x_google_ignoreList":[0]}
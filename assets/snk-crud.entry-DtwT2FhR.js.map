{"version":3,"file":"snk-crud.entry-DtwT2FhR.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-crud.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-479e1293.js';\nimport { StringUtils, ElementIDUtils, ApplicationContext, KeyboardManager } from '@sankhyalabs/core';\nimport { T as TaskbarElement } from './taskbar-elements-171476d4.js';\nimport './DataFetcher-db08cad0.js';\nimport './ISave-da565824.js';\nimport { P as PresentationMode, E as ExporterStrategy } from './index-b40568ff.js';\nimport '@sankhyalabs/ezui/dist/collection/utils/constants';\nimport '@sankhyalabs/core/dist/dataunit/metadata/UnitMetadata';\nimport './dataunit-fetcher-1b78797a.js';\nimport './filter-item-type.enum-d45e026f.js';\nimport './form-config-fetcher-e623539b.js';\nimport { V as VIEW_MODE } from './constants-7b422de0.js';\nimport { A as AutorizationType } from './auth-fetcher-43c8d76b.js';\nimport './index-b72af127.js';\nimport './PrintUtils-3e4ff0f5.js';\nimport '@sankhyalabs/ezui/dist/collection/components/ez-grid/utils';\nimport '@sankhyalabs/core/dist/utils/SortingUtils';\nimport './ResourceIDUtils-a114189a.js';\n\nconst snkCrudCss = \".sc-snk-crud-h{display:flex;flex-direction:column;height:100%;width:100%}\";\n\nconst SnkCrud = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.actionClick = createEvent(this, \"actionClick\", 7);\n    this.configuratorSave = createEvent(this, \"configuratorSave\", 7);\n    this.configuratorCancel = createEvent(this, \"configuratorCancel\", 7);\n    this.formItemsReady = createEvent(this, \"formItemsReady\", 7);\n    this.viewModeChanged = createEvent(this, \"viewModeChanged\", 7);\n    this._viewHistory = [];\n    this._customEditors = new Map();\n    this._customRenders = new Map();\n    this._dataUnit = undefined;\n    this._dataState = undefined;\n    this.attachmentRegisterKey = undefined;\n    this._currentViewMode = VIEW_MODE.GRID;\n    this._canEdit = undefined;\n    this._resourceID = undefined;\n    this.enableLockManagerLoadingComp = false;\n    this.enableLockManagerTaskbarClick = false;\n    this.configName = undefined;\n    this.filterBarTitle = undefined;\n    this.selectionToastConfig = undefined;\n    this.showActionButtons = false;\n    this.actionsList = undefined;\n    this.taskbarManager = undefined;\n    this.recordsValidator = undefined;\n    this.statusResolver = undefined;\n    this.multipleSelection = true;\n    this.presentationMode = PresentationMode.PRIMARY;\n    this.messagesBuilder = undefined;\n    this.useEnterLikeTab = false;\n    this.gridLegacyConfigName = undefined;\n    this.filterBarLegacyConfigName = undefined;\n    this.formLegacyConfigName = undefined;\n    this.disablePersonalizedFilter = undefined;\n    this.autoLoad = undefined;\n    this.autoFocus = true;\n    this.enableGridInsert = false;\n    this.domainMessagesBuilder = undefined;\n    this.ignoreReadOnlyFormFields = undefined;\n    this.setCustomFormTitle = undefined;\n    this.strategyExporter = ExporterStrategy.SERVER_SIDE;\n    this.layoutFormConfig = false;\n    this.multipleEditionEnabled = true;\n    this.paginationCounterMode = 'auto';\n    this.layoutFormConfig = false;\n    this.customContainerId = `SNK-CRUD-CUSTOM-CONTAINER-${StringUtils.generateUUID()}`;\n  }\n  /**\n   * Usado para alternar a visão entre GRID e FORM externamente.\n   */\n  async goToView(mode) {\n    this.executeAction(mode);\n  }\n  /**\n   * Usado para abrir o configurator do CRUD\n   */\n  async openConfigurator() {\n    var _a;\n    (_a = this._snkConfigurator) === null || _a === void 0 ? void 0 : _a.open();\n  }\n  /**\n   * Usado para fechar o configurator do CRUD\n   */\n  async closeConfigurator() {\n    var _a;\n    (_a = this._snkConfigurator) === null || _a === void 0 ? void 0 : _a.close();\n  }\n  /**\n   * Faz o recarregamento da filter-bar do crud, buscando o state no servidor.\n   */\n  async reloadFilterBar() {\n    var _a;\n    (_a = this._snkGrid) === null || _a === void 0 ? void 0 : _a.reloadFilterBar();\n  }\n  /**\n   * Retorna o elemento da filter-bar da grade.\n   */\n  async getFilterBar() {\n    return await this._snkGrid.getFilterBar();\n  }\n  /**\n   * Registra um editor customizado para campos da grade e formulário.\n   */\n  async addCustomEditor(fieldName, customEditor) {\n    if (this._guidesViewer && this._snkGrid) {\n      this._guidesViewer.addCustomEditor(fieldName, customEditor);\n      this._snkGrid.addCustomEditor(fieldName, customEditor);\n      return;\n    }\n    const newCustomEditors = new Map(this._customEditors);\n    newCustomEditors.set(fieldName, customEditor);\n    this._customEditors = newCustomEditors;\n  }\n  /**\n   * Registra um render customizado para colunas da grid.\n   */\n  async addGridCustomRender(fieldName, customRender) {\n    if (this._snkGrid) {\n      this._snkGrid.addGridCustomRender(fieldName, customRender);\n      return;\n    }\n    const newCustomRenders = new Map(this._customRenders);\n    newCustomRenders.set(fieldName, customRender);\n    this._customRenders = newCustomRenders;\n  }\n  /**\n   * Registra um formatador de valores para uma coluna da grid.\n   */\n  async addCustomValueFormatter(columnName, customFormatter) {\n    this._snkGrid.addCustomValueFormatter(columnName, customFormatter);\n  }\n  /**\n   * Remove o formatador de valores de uma coluna da grid.\n   */\n  async removeCustomValueFormatter(columnName) {\n    this._snkGrid.removeCustomValueFormatter(columnName);\n  }\n  /**\n   * Altera/adiciona uma propriedade nos metadados do campo.\n   */\n  async setFieldProp(fieldName, propName, value) {\n    await this._guidesViewer.setFieldProp(fieldName, propName, value);\n  }\n  currentViewModeWatcher(currentView) {\n    this._viewHistory = [...this._viewHistory.slice(-1), currentView];\n  }\n  async gridToForm(keepFormMode = false) {\n    this._backToGrid = !keepFormMode && await this._viewStack.getSelectedIndex() === VIEW_MODE.GRID;\n    this.setViewMode(VIEW_MODE.FORM);\n  }\n  async executeAction(act) {\n    switch (act) {\n      case TaskbarElement.GRID_MODE:\n        return this.setViewMode(VIEW_MODE.GRID);\n      case TaskbarElement.FORM_MODE:\n      case TaskbarElement.UPDATE:\n        return this.gridToForm(act !== TaskbarElement.UPDATE);\n      case TaskbarElement.UPDATE_MULTIPLE:\n        this._dataUnit.isMultipleEdition = true;\n        return this.setViewMode(VIEW_MODE.FORM);\n      case TaskbarElement.CONFIGURATOR:\n        return this._snkConfigurator.open();\n      case TaskbarElement.ATTACH:\n        return this.setViewMode(VIEW_MODE.ATTACHMENT);\n    }\n  }\n  backView() {\n    const lastView = this._viewHistory.at(-2) || VIEW_MODE.GRID;\n    this.setViewMode(lastView);\n  }\n  setViewMode(viewMode) {\n    this._viewStack.show(viewMode);\n    this._currentViewMode = viewMode;\n    if (viewMode === VIEW_MODE.GRID) {\n      this._dataUnit.isMultipleEdition = false;\n      this._snkGrid.setFocus();\n    }\n    else if (viewMode === VIEW_MODE.FORM) {\n      this._guidesViewer.setFocus();\n    }\n    this.viewModeChanged.emit(viewMode);\n  }\n  openConfig(viewMode) {\n    this._snkConfigurator.close();\n    if (viewMode === VIEW_MODE.GRID) {\n      this._snkGrid.showConfig();\n    }\n    else if (viewMode === VIEW_MODE.FORM) {\n      this._guidesViewer.showFormConfig();\n    }\n  }\n  addDataElementID() {\n    const dataInfo = { dataUnit: this._dataUnit };\n    ElementIDUtils.addIDInfo(this._element, null, dataInfo);\n  }\n  insertionModeHandler() {\n    if (this.enableGridInsert)\n      return;\n    this.gridToForm();\n  }\n  cancelHandler() {\n    if (this._backToGrid) {\n      this.setViewMode(VIEW_MODE.GRID);\n    }\n  }\n  async getAttachmentRegisterKey() {\n    if (!this._snkDataUnit)\n      return;\n    const recordCriteria = await this._snkDataUnit.getSelectedRecordsIDsInfo();\n    const joinedPrimaryKeys = recordCriteria.map(({ value }) => value).join('_');\n    return joinedPrimaryKeys;\n  }\n  setCustomRenders() {\n    if (!this._snkGrid) {\n      return;\n    }\n    for (const [fieldName, customRender] of this._customRenders) {\n      this._snkGrid.addGridCustomRender(fieldName, customRender);\n      this._customRenders.delete(fieldName);\n    }\n  }\n  setCustomEditors() {\n    if (!this._snkGrid || !this._guidesViewer) {\n      return;\n    }\n    for (const [fieldName, customEditor] of this._customEditors) {\n      this._guidesViewer.addCustomEditor(fieldName, customEditor);\n      this._snkGrid.addCustomEditor(fieldName, customEditor);\n      this._customEditors.delete(fieldName);\n    }\n  }\n  componentDidRender() {\n    this.setCustomRenders();\n    this.setCustomEditors();\n  }\n  componentWillLoad() {\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    let parent = this._element.parentElement;\n    this._application\n      .hasAccess(AutorizationType.UPDATE, this._resourceID)\n      .then(canEdit => this._canEdit = canEdit);\n    while (parent) {\n      if (parent.tagName.toUpperCase() === \"SNK-DATA-UNIT\") {\n        this._snkDataUnit = parent;\n        this._snkDataUnit.addEventListener(\"insertionMode\", () => this.insertionModeHandler());\n        this._snkDataUnit.addEventListener(\"cancelEdition\", () => this.cancelHandler());\n        this._snkDataUnit.domainMessagesBuilder = this.domainMessagesBuilder;\n        this._dataUnit = this._snkDataUnit.dataUnit;\n        this._dataState = this._snkDataUnit.dataState;\n        if (!this._dataUnit) {\n          this._snkDataUnit.addEventListener(\"dataUnitReady\", (evt) => {\n            this._dataUnit = evt.detail;\n            this.initDataUnit();\n          });\n        }\n        else {\n          this.initDataUnit();\n        }\n        this._snkDataUnit.addEventListener(\"dataStateChange\", this.handleDataStateChange.bind(this));\n        break;\n      }\n      parent = parent.parentElement;\n    }\n    if (!this.configName) {\n      this.configName = this._application.configName;\n    }\n  }\n  componentDidLoad() {\n    this.initKeyboardManager();\n  }\n  disconnectedCallback() {\n    this.removeShortcuts();\n  }\n  async handleDataStateChange(evt) {\n    var _a;\n    this._dataState = evt.detail;\n    if (this._dataState.selectedRecord !== undefined) {\n      this.attachmentRegisterKey = await this.getAttachmentRegisterKey();\n    }\n    const fieldsWithRmPrecision = await this._snkDataUnit.getFieldsWithRmPrecision();\n    for (const field of fieldsWithRmPrecision || []) {\n      if (!field) {\n        continue;\n      }\n      const rmPrecision = (_a = this._dataState.rowMetadata) === null || _a === void 0 ? void 0 : _a.getProp('rm_precision', field);\n      if (!rmPrecision && rmPrecision !== 0) {\n        continue;\n      }\n      await this.setFieldProp(field, 'precision', rmPrecision);\n      await this.setFieldProp(field, 'prettyPrecision', rmPrecision);\n    }\n  }\n  async initKeyboardManager() {\n    this._keyboardManager = new KeyboardManager({ propagate: false, element: this._element });\n    const dataUnit = this._dataUnit || await this._snkDataUnit.getDataUnit();\n    async function saveDataUnitHandlingFocus() {\n      const element = document.activeElement;\n      const isDocumentBody = (element == document.body);\n      if (!isDocumentBody)\n        element.blur();\n      await dataUnit.saveData();\n      if (!isDocumentBody && element.setFocus != undefined) {\n        element.setFocus();\n        return;\n      }\n      if (!isDocumentBody)\n        element.focus();\n    }\n    async function handleAddRecord() {\n      if (!dataUnit.hasNewRecord()) {\n        dataUnit.addRecord();\n      }\n    }\n    if (this._keyboardManager) {\n      this._keyboardManager\n        .bind(\"F6\", this.toggleView.bind(this), { description: \"Alterna entre modo formulário e grade.\", element: this._element })\n        .bind(\"F7\", saveDataUnitHandlingFocus.bind(this), { description: \"Salva os dados.\", element: this._element })\n        .bind(\"ctrl + \\\\\", saveDataUnitHandlingFocus.bind(this), { description: \"Salva os dados.\", element: this._element })\n        .bind(\"F8\", handleAddRecord.bind(this), { description: \"Adiciona um novo registro.\", element: this._element })\n        .bind(\"F9\", dataUnit.removeSelectedRecords.bind(dataUnit), { description: \"Remove o registro selecionado.\", element: this._element })\n        .bind(\"ctrl + F9\", dataUnit.removeSelectedRecords.bind(dataUnit), { description: \"Remove o registro selecionado.\", element: this._element })\n        .bind(\"F5\", async () => {\n        const currentView = await this._viewStack.getSelectedIndex();\n        if (VIEW_MODE.GRID === currentView) {\n          dataUnit.loadData();\n        }\n      }, { description: \"Atualiza os dados.\", element: this._element })\n        .bind(\"Escape\", () => {\n        if (dataUnit.isDirty()) {\n          dataUnit.cancelEdition();\n        }\n      }, {\n        debounceTime: 1000,\n        description: \"Cancela uma ação.\", element: this._element\n      });\n    }\n  }\n  async removeShortcuts() {\n    var _a;\n    (_a = this._keyboardManager) === null || _a === void 0 ? void 0 : _a.unbindAllShortcutKeys();\n  }\n  async toggleView() {\n    const currentView = await this._viewStack.getSelectedIndex();\n    this.setViewMode(VIEW_MODE.GRID === currentView ? VIEW_MODE.FORM : VIEW_MODE.GRID);\n  }\n  async initDataUnit() {\n    this.addDataElementID();\n    if (!this.messagesBuilder) {\n      this.messagesBuilder = this._snkDataUnit.messagesBuilder;\n    }\n    if (this._resourceID == undefined) {\n      //Tenta pegar o resourceID do snkDataUnit;\n      this._resourceID = this._snkDataUnit.resourceID;\n      if (this._resourceID == undefined) {\n        this._resourceID = await this._application.getResourceID();\n      }\n    }\n  }\n  handleConfiguratorEvent(evt, type) {\n    evt.stopImmediatePropagation();\n    if (type === 'SAVE') {\n      this.configuratorSave.emit();\n      return;\n    }\n    this.configuratorCancel.emit();\n  }\n  render() {\n    if (this._resourceID == undefined) {\n      return;\n    }\n    this._snkDataUnit.ignoreSaveMessage = (this._currentViewMode === VIEW_MODE.GRID && !this.enableGridInsert);\n    return (h(Host, null, h(\"ez-view-stack\", { ref: (ref) => this._viewStack = ref, \"data-element-id\": \"crud\" }, h(\"stack-item\", { class: 'ez-flex ez-flex--column ez-size-height--full ez-size-width--full ez-padding--medium' }, h(\"snk-grid\", { ref: (ref) => this._snkGrid = ref, class: 'ez-flex ez-flex--column ez-size-height--full ez-size-width--full', filterBarTitle: this.filterBarTitle, \"data-element-id\": \"crud_grid\", configName: this.configName, onGridDoubleClick: () => this.gridToForm(true), taskbarManager: this.taskbarManager, onActionClick: evt => this.executeAction(evt.detail), messagesBuilder: this.messagesBuilder, actionsList: this.actionsList, statusResolver: this.statusResolver, multipleSelection: this.multipleSelection, presentationMode: this.presentationMode, recordsValidator: this.recordsValidator, selectionToastConfig: this.selectionToastConfig, useEnterLikeTab: this.useEnterLikeTab, canEdit: this._canEdit, resourceID: this._resourceID, disablePersonalizedFilter: this.disablePersonalizedFilter, gridLegacyConfigName: this.gridLegacyConfigName, filterBarLegacyConfigName: this.filterBarLegacyConfigName, autoLoad: this.autoLoad, autoFocus: this.autoFocus, enableGridInsert: this.enableGridInsert, enableLockManagerTaskbarClick: this.enableLockManagerTaskbarClick, enableLockManagerLoadingComp: this.enableLockManagerLoadingComp, strategyExporter: this.strategyExporter, multipleEditionEnabled: this.multipleEditionEnabled, paginationCounterMode: this.paginationCounterMode }, h(\"slot\", { name: \"GRID_TASKBAR_CUSTOM_ELEMENTS\" }), h(\"slot\", { name: \"GRID_HEADER_CUSTOM_ELEMENTS\" }), h(\"slot\", { name: \"SnkGridHeader\" }), h(\"slot\", { name: \"SnkGridFooter\" }), h(\"slot\", { name: \"SnkGridTaskBar\" }))), h(\"stack-item\", null, h(\"snk-guides-viewer\", { ref: ref => this._guidesViewer = ref, entityPath: this._snkDataUnit.entityName, messagesBuilder: this.messagesBuilder, onExit: () => this.setViewMode(VIEW_MODE.GRID), dataState: this._dataState, dataUnit: this._dataUnit, actionsList: this.actionsList, taskbarManager: this.taskbarManager, configName: this.configName, onActionClick: evt => this.executeAction(evt.detail), presentationMode: this.presentationMode, \"data-element-id\": \"crud_form\", canEdit: this._canEdit, recordsValidator: this.recordsValidator, resourceID: this._resourceID, detailTaskbarCustomContainerId: this.customContainerId, formLegacyConfigName: this.formLegacyConfigName, enableGridInsert: this.enableGridInsert, getCustomTitle: this.setCustomFormTitle, ignoreReadOnlyFormFields: this.ignoreReadOnlyFormFields }, h(\"slot\", { name: \"GUIDES_VIEWER_TASKBAR_CUSTOM_ELEMENTS\" }), h(\"slot\", { name: \"SnkFormTaskBar\" }))), h(\"stack-item\", { tabIndex: \"0\" }, h(\"snk-attach\", { registerKey: this.attachmentRegisterKey, messagesBuilder: this.messagesBuilder, entityName: this._snkDataUnit.entityName, onBack: this.backView.bind(this) })), h(\"snk-configurator\", { ref: (ref) => this._snkConfigurator = ref, viewMode: this._currentViewMode, messagesBuilder: this.messagesBuilder, onConfigSelected: (evt) => this.setViewMode(evt.detail), onOpenConfig: (evt) => this.openConfig(evt.detail), showActionButtons: this.showActionButtons, onSave: evt => this.handleConfiguratorEvent(evt, 'SAVE'), onCancel: evt => this.handleConfiguratorEvent(evt, 'CANCEL'), resourceID: this._resourceID, customContainerId: this.customContainerId, layoutFormConfig: this.layoutFormConfig })), h(\"div\", { id: `${this.customContainerId}` }, h(\"slot\", { name: \"SnkConfigContainerSlot\" }), h(\"slot\", { name: \"DETAIL_GRID_HEADER_CUSTOM_ELEMENTS\" }), h(\"slot\", { name: \"DETAIL_GRID_TASKBAR_CUSTOM_ELEMENTS\" }), h(\"slot\", { name: \"DETAIL_TASKBAR_CUSTOM_ELEMENTS\" }))));\n  }\n  get _element() { return getElement(this); }\n  static get watchers() { return {\n    \"_currentViewMode\": [\"currentViewModeWatcher\"]\n  }; }\n};\nSnkCrud.style = snkCrudCss;\n\nexport { SnkCrud as snk_crud };\n"],"names":["snkCrudCss","SnkCrud","hostRef","registerInstance","createEvent","VIEW_MODE","PresentationMode","ExporterStrategy","StringUtils","mode","_a","fieldName","customEditor","newCustomEditors","customRender","newCustomRenders","columnName","customFormatter","propName","value","currentView","keepFormMode","act","TaskbarElement","lastView","viewMode","dataInfo","ElementIDUtils","ApplicationContext","parent","AutorizationType","canEdit","evt","fieldsWithRmPrecision","field","rmPrecision","KeyboardManager","dataUnit","saveDataUnitHandlingFocus","element","isDocumentBody","handleAddRecord","type","h","Host","ref","getElement"],"mappings":"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","x_google_ignoreList":[0]}
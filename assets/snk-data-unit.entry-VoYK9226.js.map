{"version":3,"file":"snk-data-unit.entry-VoYK9226.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-data-unit-c12986b7.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './index-479e1293.js';\nimport { Action, ObjectUtils, DataUnitAction, StringUtils, ApplicationContext } from '@sankhyalabs/core';\nimport { ApplicationUtils, DialogType } from '@sankhyalabs/ezui/dist/collection/utils';\nimport { O as OperationMap, S as SnkMessageBuilder } from './SnkMessageBuilder-c8b452b6.js';\nimport { g as getRecordValue, a as DatasetStrategy } from './dataunit-fetcher-1b78797a.js';\nimport { convertType } from '@sankhyalabs/core/dist/dataunit/metadata/DataType';\nimport { g as getSelectedRecordsIDsInfo } from './GetSelectedRecordsIDsInfo-9fa41508.js';\n\nconst NO_TAB_NAME = \"__NO_TAB_NAME__\";\nconst MAIN_TAB_NAME = \"__main\";\nasync function showConfirmMultipleUpdatePopup({ title, labelBtnConfirm, labelBtnCancel, message, changingFields, }) {\n  return new Promise((resolve) => {\n    const popup = builPopup(title, resolve);\n    const contentContainer = buildContentContainer();\n    contentContainer.appendChild(buildMessage(message));\n    contentContainer.appendChild(buildChangesContainer(changingFields));\n    const actionsContainer = buildActionsContainer();\n    actionsContainer.appendChild(buildCancelBtn(popup, labelBtnCancel, resolve));\n    actionsContainer.appendChild(buildConfirmBtn(popup, labelBtnConfirm, resolve));\n    contentContainer.appendChild(actionsContainer);\n    popup.appendChild(contentContainer);\n    document.body.appendChild(popup);\n  });\n}\nfunction groupChanges(changingFields) {\n  const changesMap = new Map();\n  changingFields.forEach(change => {\n    var _a;\n    const key = (_a = change.tabName) !== null && _a !== void 0 ? _a : NO_TAB_NAME;\n    if (!changesMap.has(key))\n      changesMap.set(key, []);\n    changesMap.get(key).push(change);\n  });\n  return changesMap;\n}\nfunction getTabName(tabName) {\n  switch (tabName) {\n    case NO_TAB_NAME:\n      return \"\";\n    case MAIN_TAB_NAME:\n      return \"Principal\";\n    default:\n      return tabName;\n  }\n}\nfunction buildChangesDiv(tabName, changes) {\n  const changeLabel = document.createElement('span');\n  changeLabel.innerText = getTabName(tabName);\n  changeLabel.style.display = 'block';\n  changeLabel.style.fontWeight = 'var(--text-weight--large, 500)';\n  changeLabel.style.fontSize = 'var(--text--medium, 14px)';\n  changeLabel.style.marginBottom = 'var(--space--small, 6px)';\n  const changeDiv = document.createElement('div');\n  changeDiv.style.padding = 'var(--space--medium, 12px) 0';\n  changeDiv.style.borderTop = '1px solid var(--color--disable-secondary, #f2f5f8)';\n  changeDiv.appendChild(changeLabel);\n  changes.forEach(change => {\n    const changeLine = document.createElement('span');\n    changeLine.innerHTML = `${change.label}: <span style=\"color: var(--text--primary, #626e82)\">${change.value}</span>`;\n    changeLine.style.display = 'block';\n    changeLine.style.marginBottom = 'var(--space--extra-small, 3px)';\n    changeDiv.appendChild(changeLine);\n  });\n  return changeDiv;\n}\nfunction buildChangesContainer(changingFields) {\n  const changesContainer = document.createElement('div');\n  changesContainer.style.flexDirection = 'column';\n  changesContainer.style.display = 'flex';\n  changesContainer.style.overflow = 'auto';\n  changesContainer.style.maxHeight = '300px';\n  const changesMap = groupChanges(changingFields);\n  changesMap.forEach((changes, key) => {\n    changesContainer.appendChild(buildChangesDiv(key, changes));\n  });\n  return changesContainer;\n}\nfunction buildMessage(messageContent) {\n  const message = document.createElement('p');\n  message.textContent = messageContent;\n  message.style.fontSize = 'var(--text--medium, 14px)';\n  return message;\n}\nfunction buildContentContainer() {\n  const contentContainer = document.createElement('div');\n  contentContainer.style.display = 'flex';\n  contentContainer.style.flexDirection = 'column';\n  contentContainer.style.fontFamily = 'var(--font-pattern, Roboto)';\n  contentContainer.style.fontSize = 'var(--text--medium, 14px)';\n  return contentContainer;\n}\nfunction buildActionsContainer() {\n  const actionsContainer = document.createElement('div');\n  actionsContainer.style.display = 'flex';\n  actionsContainer.style.flexDirection = 'row';\n  actionsContainer.style.justifyContent = 'flex-end';\n  actionsContainer.style.gap = '5px';\n  return actionsContainer;\n}\nfunction builPopup(title, resolve) {\n  const popup = document.createElement('ez-popup');\n  popup.opened = true;\n  popup.size = 'small';\n  popup.ezTitle = title;\n  popup.heightMode = 'auto';\n  popup.addEventListener('ezClosePopup', () => {\n    document.body.removeChild(popup);\n    resolve(false);\n  }, { once: true });\n  popup.addEventListener('ezPopupAction', () => {\n    document.body.removeChild(popup);\n    resolve(false);\n  }, { once: true });\n  return popup;\n}\nfunction buildConfirmBtn(popup, confirmBtnLabel, resolve) {\n  const confirmBtn = document.createElement('ez-button');\n  confirmBtn.label = confirmBtnLabel;\n  confirmBtn.size = 'medium';\n  confirmBtn.classList.add('ez-button--primary');\n  confirmBtn.onclick = () => {\n    document.body.removeChild(popup);\n    resolve(true);\n  };\n  return confirmBtn;\n}\nfunction buildCancelBtn(popup, cancelBtnLabel, resolve) {\n  const cancelBtn = document.createElement('ez-button');\n  cancelBtn.label = cancelBtnLabel;\n  cancelBtn.size = 'medium';\n  cancelBtn.onclick = () => {\n    document.body.removeChild(popup);\n    resolve(false);\n  };\n  return cancelBtn;\n}\n\nconst SnkDataUnit = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dataStateChange = createEvent(this, \"dataStateChange\", 3);\n    this.dataUnitReady = createEvent(this, \"dataUnitReady\", 3);\n    this.messagesBuilderUpdated = createEvent(this, \"messagesBuilderUpdated\", 3);\n    this.dataUnitFieldsHidded = createEvent(this, \"dataUnitFieldsHidded\", 7);\n    this.insertionMode = createEvent(this, \"insertionMode\", 3);\n    this.cancelEdition = createEvent(this, \"cancelEdition\", 3);\n    this._onDataUnitResolve = [];\n    this._openedAlert = false;\n    this._fieldsWithRmp = [];\n    this._fieldsWithRmPrecision = [];\n    this._metadataByRow = new Map();\n    this._rowMetadataCache = new Map();\n    this._formFieldsConfig = [];\n    this.REGEX_DATAUNIT_NAME = /dd:\\/\\/(.+?)\\//;\n    this._dataUnitObserver = async (action) => {\n      const duState = await this.buildDataState(action.type);\n      this.dataState = duState;\n      this.messagesBuilder.currentOperation = this.getMessageOperation();\n      switch (action.type) {\n        case Action.DATA_SAVED:\n          await this.handleDataSaved(action);\n          break;\n        case Action.RECORDS_ADDED:\n        case Action.RECORDS_COPIED:\n          this.insertionMode.emit();\n          break;\n        case Action.EDITION_CANCELED:\n          this.cancelEdition.emit();\n          break;\n        case Action.RECORDS_REMOVED:\n          this.handleRecordsRemoved(action);\n          break;\n        case Action.METADATA_LOADED:\n          this.fillFieldsWithRmp(this.dataUnit.metadata);\n          this.fillFieldsWithRmPrecision(this.dataUnit.metadata);\n          break;\n      }\n    };\n    this.fieldsToLink = [];\n    this.dataState = undefined;\n    this.messagesBuilder = undefined;\n    this.dataUnitName = undefined;\n    this.entityName = undefined;\n    this.pageSize = 150;\n    this.dataUnit = undefined;\n    this.beforeSave = undefined;\n    this.afterSave = undefined;\n    this.useCancelConfirm = true;\n    this.ignoreSaveMessage = undefined;\n    this.configName = undefined;\n    this.resourceID = undefined;\n    this.domainMessagesBuilder = undefined;\n  }\n  observePageSize() {\n    if (this.dataUnit) {\n      this.dataUnit.pageSize = this.pageSize;\n    }\n  }\n  observeDataUnitName(newValue, oldValue) {\n    if (oldValue != newValue) {\n      if (this.dataUnit) {\n        this._application.updateDataunitCache(oldValue, this.dataUnitName, this.dataUnit);\n      }\n      else {\n        this.loadDataUnit();\n      }\n    }\n  }\n  observeEntityName(newValue, oldValue) {\n    if (oldValue != newValue) {\n      this.dataUnit = undefined;\n      this.entityName = newValue;\n      this.loadDataUnit();\n    }\n  }\n  observeDataState(newValue, oldValue) {\n    if (ObjectUtils.objectToString(oldValue) != ObjectUtils.objectToString(newValue)) {\n      this.dataStateChange.emit(newValue);\n    }\n  }\n  observeDataUnit() {\n    this.handlerLinkFields();\n    this.dataUnitReady.emit(this.dataUnit);\n  }\n  observeMessagesBuilder(newValue) {\n    if (newValue) {\n      this.messagesBuilderUpdated.emit(newValue);\n    }\n  }\n  onMasterFormConfigChange({ detail }) {\n    var _a;\n    this._formFieldsConfig = (_a = detail === null || detail === void 0 ? void 0 : detail.fields) !== null && _a !== void 0 ? _a : [];\n  }\n  /**\n   * Obtém o dataUnit.\n   */\n  async getDataUnit() {\n    return new Promise((resolve) => {\n      if (this.dataUnit) {\n        resolve(this.dataUnit);\n      }\n      else {\n        this._onDataUnitResolve.push(resolve);\n      }\n    });\n  }\n  /**\n   * Método que retorna a lista de IDs dos registros selecionados.\n   * @returns Retorna a lista de IDs dos registros selecionados.\n   */\n  async getSelectedRecordsIDsInfo() {\n    return getSelectedRecordsIDsInfo(this.dataUnit);\n  }\n  /**\n   * Retorna os campos que possuem a propriedade \"rmp\" (Row Metadata Provider).\n   */\n  async getFieldsWithRmp() {\n    return this._fieldsWithRmp;\n  }\n  /**\n   * Retorna os campos que possuem a propriedade \"rm_precision\" (Row Metadata Precision).\n   */\n  async getFieldsWithRmPrecision() {\n    return this._fieldsWithRmPrecision;\n  }\n  /**\n   * Busca os metadados da linha selecionada.\n   */\n  async getRowMetadata(record) {\n    return this.doGetRowMetadata(record);\n  }\n  async doGetRowMetadata(record) {\n    const selectedRecord = this.dataUnit.getSelectedRecord();\n    if (!record && !selectedRecord) {\n      return;\n    }\n    const currentRecord = record || selectedRecord;\n    const recordId = typeof currentRecord === 'string' ? currentRecord : currentRecord.__record__id__;\n    let rowMetadata = this._metadataByRow.get(recordId);\n    /*\n      Nao fazemos cache de metadataByRow pra registros novos, pois a chave do mesmo\n      muda ao ser salvo, por isso essa tratativa é necessária para que o dataState fique com metadados\n      corretos nao confiando apenas no _metadataByRow\n    */\n    if (this.dataUnit.isNewRecord(recordId) && !rowMetadata) {\n      rowMetadata = await this.handleLoadRowMetadata(selectedRecord);\n    }\n    if (!rowMetadata) {\n      return;\n    }\n    rowMetadata.getProp = this.buildGetPropRowMetadata(rowMetadata);\n    return Object.assign({}, rowMetadata);\n  }\n  buildGetPropRowMetadata(rowMetadata) {\n    return (propPath, fieldName) => {\n      if (propPath === \"rm_precision\") {\n        propPath = this.resolvePrecisionFromMetadata(fieldName);\n      }\n      return ObjectUtils.getProp(rowMetadata, propPath);\n    };\n  }\n  resolvePrecisionFromMetadata(fieldName) {\n    var _a, _b;\n    if (!fieldName) {\n      ApplicationUtils.error(this.getMessage(\"snkDataUnit.fieldNameRequired\"));\n      return;\n    }\n    const rmPrecision = (_b = (_a = this.dataUnit.getField(fieldName)) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.rm_precision;\n    if (!rmPrecision) {\n      return '';\n    }\n    let rmPrecisionPath = rmPrecision.split('.').filter((_, index) => index !== 1).join('.');\n    return rmPrecisionPath;\n  }\n  getCleanOnCopyFields() {\n    var _a;\n    return (_a = this.dataUnit.metadata) === null || _a === void 0 ? void 0 : _a.fields.filter(field => { var _a; return (_a = field.properties) === null || _a === void 0 ? void 0 : _a.cleanOnCopy; }).map(field => field.name);\n  }\n  fillFieldsWithRmp(payload) {\n    payload.fields.forEach((field) => {\n      var _a;\n      if (((_a = field.properties) === null || _a === void 0 ? void 0 : _a.rmp) && !this._fieldsWithRmp.includes(field.name)) {\n        this._fieldsWithRmp.push(field.name);\n      }\n    });\n  }\n  fillFieldsWithRmPrecision(payload) {\n    payload.fields.forEach((field) => {\n      var _a;\n      if (((_a = field.properties) === null || _a === void 0 ? void 0 : _a.rm_precision) && !this._fieldsWithRmPrecision.includes(field.name)) {\n        this._fieldsWithRmPrecision.push(field.name);\n      }\n    });\n  }\n  getCacheName(fieldName, metadataName, fieldValue) {\n    const cacheName = [fieldName, metadataName, fieldValue].join(\"_\");\n    return cacheName;\n  }\n  updateDataStateRmp(newValue) {\n    const newRowMetadata = Object.assign({}, newValue);\n    this.dataState.rowMetadata = newRowMetadata;\n  }\n  saveCacheRmd(record) {\n    const rmd = record.__record__metadata__;\n    const keysRmd = Object.keys(rmd);\n    keysRmd.shift();\n    keysRmd.forEach((fieldName) => {\n      const fieldValue = getRecordValue(record, fieldName);\n      const cacheName = this.getCacheName(fieldName, rmd.provider, fieldValue);\n      this._rowMetadataCache.set(cacheName, Object.assign({}, rmd));\n    });\n  }\n  getMetadataByRow(payload) {\n    var _a;\n    if (!((_a = payload.records) === null || _a === void 0 ? void 0 : _a.length)) {\n      return payload;\n    }\n    if (!this._fieldsWithRmp.length) {\n      const records = payload.records.map((record) => {\n        delete record.__record__metadata__;\n        return record;\n      });\n      return Object.assign(Object.assign({}, payload), { records });\n    }\n    const records = payload.records.map((record) => {\n      if (!record.__record__metadata__) {\n        return record;\n      }\n      this.saveCacheRmd(record);\n      const rowMetadata = Object.assign({}, record.__record__metadata__);\n      rowMetadata.getProp = this.buildGetPropRowMetadata(rowMetadata);\n      this._metadataByRow.set(record.__record__id__, rowMetadata);\n      delete record.__record__metadata__;\n      return record;\n    });\n    return Object.assign(Object.assign({}, payload), { records });\n  }\n  interceptRecordsAdded(action) {\n    if (!this.isAllowed(\"INSERT\")) {\n      ApplicationUtils.info(this.getMessage(\"snkDataUnit.forbiddenInsert\"));\n      return;\n    }\n    return new DataUnitAction(Action.RECORDS_ADDED, this.handleLinksWithParent(action.payload));\n  }\n  interceptRecordsCopied(action) {\n    if (!this.isAllowed(\"CLONE\")) {\n      ApplicationUtils.info(this.getMessage(\"snkDataUnit.forbiddenClone\"));\n      return;\n    }\n    return new DataUnitAction(Action.RECORDS_COPIED, this.handleRecordsCopied(action.payload));\n  }\n  async interceptDataChange(action) {\n    var _a;\n    const recordId = (_a = this.dataUnit.getSelectedRecord()) === null || _a === void 0 ? void 0 : _a.__record__id__;\n    if (this.isAllowed(\"UPDATE\") || this.dataUnit.isNewRecord(recordId)) {\n      return action;\n    }\n    if (this._openedAlert) {\n      await this.dataUnit.cancelEdition();\n      return;\n    }\n    this._openedAlert = true;\n    await this.dataUnit.cancelEdition();\n    await ApplicationUtils.alert(this.getMessage(\"snkDataUnit.forbidden\"), this.getMessage(\"snkDataUnit.forbiddenUpdate\"));\n    this._openedAlert = false;\n  }\n  async interceptSavingData(action) {\n    if (this.dataUnit.isMultipleEdition) {\n      const confirm = await this.confirmMultipleSavingData();\n      if (!confirm)\n        return undefined;\n    }\n    if (!this.beforeSave)\n      return action;\n    const continueAction = this.beforeSave(this.dataUnit);\n    if (continueAction instanceof Promise) {\n      const result = await continueAction;\n      return result ? action : undefined;\n    }\n    return continueAction ? action : undefined;\n  }\n  async confirmMultipleSavingData() {\n    const selectedRecords = this.dataUnit.getSelectionInfo().records;\n    const title = this.getMessage('snkDataUnit.multipleUpdateConfirmationTitle');\n    const message = this.getMessage('snkDataUnit.multipleUpdateConfirmationMessage', { size: selectedRecords.length });\n    const labelBtnCancel = this.getMessage('snkDataUnit.confirm.cancel');\n    const labelBtnConfirm = this.getMessage('snkDataUnit.confirm.updateMultipleConfirm');\n    return await showConfirmMultipleUpdatePopup({\n      title,\n      message,\n      labelBtnConfirm,\n      labelBtnCancel,\n      changingFields: this.getChangingFields(),\n    });\n  }\n  getChangingFields() {\n    const changes = this.dataUnit.buildChangesToSave();\n    if (!(changes === null || changes === void 0 ? void 0 : changes.length))\n      return [];\n    const change = changes[0];\n    const changingFields = Object.keys(change.updatingFields).map(key => this.buildChangingField(key, change[key]));\n    return changingFields;\n  }\n  buildChangingField(key, value) {\n    const fieldLabel = this.dataUnit.getField(key).label;\n    const formattedValue = this.dataUnit.getFormattedValue(key, value);\n    return {\n      label: fieldLabel,\n      value: formattedValue,\n      tabName: this.getFieldTabName(key),\n    };\n  }\n  getFieldTabName(fieldName) {\n    var _a;\n    const tab = (_a = this._formFieldsConfig.find(f => f.name === fieldName)) === null || _a === void 0 ? void 0 : _a.tab;\n    if (!tab)\n      return undefined;\n    if (typeof tab === 'string')\n      return tab;\n    return tab.label;\n  }\n  interceptDataSaved(action) {\n    if (this.afterSave) {\n      this.afterSave(this.dataUnit);\n      return;\n    }\n    return action;\n  }\n  async interceptEditionCanceled(action) {\n    var _a, _b;\n    if (!this.useCancelConfirm || !this.dataState.hasDirtyRecords || ((_a = action.payload) === null || _a === void 0 ? void 0 : _a.fromParent) || ((_b = action.payload) === null || _b === void 0 ? void 0 : _b.silent)) {\n      return action;\n    }\n    const cancelConfirmation = this.getMessage(\"snkDataUnit.cancelConfirmation\");\n    if (cancelConfirmation == undefined) {\n      this.showSuccessMessage(this.getMessage(\"snkDataUnit.cancelInfo\"));\n      return action;\n    }\n    const cancelConfirmationTitle = this.getMessage(\"snkDataUnit.cancelConfirmationTitle\");\n    const confirm = await ApplicationUtils.confirm(cancelConfirmationTitle, cancelConfirmation);\n    if (confirm) {\n      let editionCanceledMessage;\n      if (this.dataUnit.isMultipleEdition) {\n        const selectedRecords = this.dataUnit.getSelectionInfo().records;\n        editionCanceledMessage = this.buildMultipleUpdateMessage(selectedRecords, true);\n      }\n      else {\n        editionCanceledMessage = this.getMessage(\"snkDataUnit.cancelInfo\");\n      }\n      this.showSuccessMessage(editionCanceledMessage);\n    }\n    return confirm ? action : undefined;\n  }\n  async interceptRemovingRecords(action) {\n    var _a, _b, _c;\n    if (!this.isAllowed(\"REMOVE\")) {\n      ApplicationUtils.info(this.getMessage(\"snkDataUnit.forbiddenRemove\"));\n      return;\n    }\n    let multipleSelection = false;\n    let removeConfirmation = !((_a = action.payload) === null || _a === void 0 ? void 0 : _a.silent) && this.getMessage(\"snkDataUnit.removeConfirmation\");\n    const selection = (_b = this.dataUnit) === null || _b === void 0 ? void 0 : _b.getSelectionInfo();\n    if (!((_c = action.payload) === null || _c === void 0 ? void 0 : _c.silent) && (selection === null || selection === void 0 ? void 0 : selection.length) > 1) {\n      removeConfirmation = this.getMessage(\"snkDataUnit.removeAllConfirmation\", { size: selection.length });\n      multipleSelection = true;\n    }\n    if (!removeConfirmation) {\n      return action;\n    }\n    const options = {\n      canClose: false,\n      labelCancel: this.getMessage(`snkDataUnit.confirm.${multipleSelection ? \"no\" : \"cancel\"}`),\n      labelConfirm: this.getMessage(`snkDataUnit.confirm.${multipleSelection ? \"yes\" : \"delete\"}`),\n      btnConfirmDanger: false\n    };\n    const removeConfirmationTitle = this.getMessage(\"snkDataUnit.removeConfirmationTitle\");\n    const confirm = await ApplicationUtils.confirm(removeConfirmationTitle, removeConfirmation, null, DialogType.WARN, options);\n    return confirm ? action : undefined;\n  }\n  interceptDataLoaded(action) {\n    const newPayload = this.getMetadataByRow(action.payload);\n    action = new DataUnitAction(Action.DATA_LOADED, newPayload);\n    return action;\n  }\n  interceptMetadataLoaded(action) {\n    this.fillFieldsWithRmp(action.payload);\n    this.fillFieldsWithRmPrecision(action.payload);\n    return new DataUnitAction(Action.METADATA_LOADED, this.handleDULinksOnMetadataLoaded(action.payload));\n  }\n  async interceptAction(action) {\n    switch (action.type) {\n      case Action.RECORDS_ADDED:\n        return this.interceptRecordsAdded(action);\n      case Action.RECORDS_COPIED:\n        return this.interceptRecordsCopied(action);\n      case Action.DATA_CHANGED:\n        await this.handleLoadRowMetadata(action.payload);\n        return await this.interceptDataChange(action);\n      case Action.CHANGING_DATA:\n        return await this.interceptDataChange(action);\n      case Action.SAVING_DATA:\n        return await this.interceptSavingData(action);\n      case Action.DATA_SAVED:\n        return this.interceptDataSaved(action);\n      case Action.EDITION_CANCELED:\n        return await this.interceptEditionCanceled(action);\n      case Action.REMOVING_RECORDS:\n        return await this.interceptRemovingRecords(action);\n      case Action.DATA_LOADED:\n        return this.interceptDataLoaded(action);\n      case Action.METADATA_LOADED:\n        return this.interceptMetadataLoaded(action);\n      default:\n        return action;\n    }\n  }\n  async handleLoadRowMetadata(record) {\n    if (!record)\n      return;\n    const keysPayload = Object.keys(record);\n    const rmpField = keysPayload.find((field) => this._fieldsWithRmp.includes(field));\n    if (rmpField) {\n      const metadataName = this.dataUnit.getField(rmpField).properties.rmp;\n      const fieldValue = getRecordValue(record, rmpField);\n      return await this.updateRowMetadata({\n        fieldName: rmpField,\n        fieldValue,\n        metadataName,\n        updatedFields: record,\n      });\n    }\n  }\n  async updateRowMetadata({ fieldName, fieldValue, metadataName, updatedFields }) {\n    const cacheName = this.getCacheName(fieldName, metadataName, fieldValue);\n    const cacheValue = this._rowMetadataCache.get(cacheName);\n    if (cacheValue) {\n      this.updateDataStateRmp(cacheValue);\n      return cacheValue;\n    }\n    else {\n      const datasetStrategy = new DatasetStrategy();\n      const response = await datasetStrategy.loadRowMetadata(this, fieldName, metadataName, updatedFields);\n      this.updateDataStateRmp(response._rmd);\n      this._rowMetadataCache.set(cacheName, Object.assign({}, response._rmd));\n      return Object.assign({}, response._rmd);\n    }\n  }\n  handleDULinksOnMetadataLoaded(payload) {\n    const metadata = Object.assign({}, payload);\n    this.processLinks(metadata);\n    return metadata;\n  }\n  handleRecordsCopied(initialRecords) {\n    let records = [...initialRecords];\n    records = this.handleCleanOnCopy(records);\n    return this.handleLinksWithParent(records);\n  }\n  handleLinksWithParent(records) {\n    var _a, _b;\n    const parentDataUnit = (_a = this._parentDataUnit) !== null && _a !== void 0 ? _a : (_b = this.dataUnit) === null || _b === void 0 ? void 0 : _b.getParentDataUnit();\n    if (!parentDataUnit)\n      return records;\n    const parentSelectedRecord = parentDataUnit.getSelectedRecord();\n    const selfInfo = parentDataUnit === null || parentDataUnit === void 0 ? void 0 : parentDataUnit.getChildInfo(this.getCleanDataUnitName());\n    const { links } = selfInfo;\n    if (!links || links.length === 0)\n      return records;\n    return records.map(record => {\n      return this.buildRecordWithLinkedFields(record, links, parentSelectedRecord);\n    });\n  }\n  buildRecordWithLinkedFields(record, links, parentSelectedRecord) {\n    const newRecord = Object.assign({}, record);\n    links.forEach(link => {\n      const convertedParentSelectedRecord = convertType(this.dataUnit.getField(link.target).dataType, parentSelectedRecord[link.source]);\n      newRecord[link.target] = convertedParentSelectedRecord;\n    });\n    return newRecord;\n  }\n  handleCleanOnCopy(records) {\n    const cleanFields = this.getCleanOnCopyFields();\n    if (cleanFields.length > 0) {\n      records = records.map(record => this.buildCopyWithCleanedFields(record, cleanFields));\n    }\n    return records;\n  }\n  buildCopyWithCleanedFields(record, cleanFields) {\n    const newRecord = Object.assign({}, record);\n    cleanFields.forEach(fieldName => delete newRecord[fieldName]);\n    return newRecord;\n  }\n  showSuccessMessage(message) {\n    ApplicationUtils.info(message, { iconName: \"check\" });\n  }\n  isAllowed(flag) {\n    return this._permissions ? this._permissions.isSup || this._permissions[flag] : false;\n  }\n  async buildDataState(actionType) {\n    var _a;\n    const selectionInfo = this.dataUnit.getSelectionInfo();\n    const isStartingInsertionMode = (this.dataUnit.hasDirtyRecords() || this.dataUnit.hasWaitingChanges()) && (selectionInfo === null || selectionInfo === void 0 ? void 0 : selectionInfo.isEmpty());\n    const selectedRecord = this.dataUnit.getSelectedRecord();\n    let rowMetadata = (_a = this.dataState) === null || _a === void 0 ? void 0 : _a.rowMetadata;\n    const allowedOverwrite = [Action.SELECTION_CHANGED, Action.EDITION_CANCELED, Action.NEXT_SELECTED, Action.PREVIOUS_SELECTED];\n    if (selectedRecord && (!rowMetadata || allowedOverwrite.includes(actionType))) {\n      rowMetadata = await this.doGetRowMetadata(selectedRecord);\n    }\n    else if (rowMetadata) {\n      rowMetadata.getProp = this.buildGetPropRowMetadata(rowMetadata);\n    }\n    return new DataStateImpl({\n      insertionMode: this.dataUnit.hasNewRecord(),\n      isStartingInsertionMode,\n      hasNext: this.dataUnit.hasNext(),\n      hasPrevious: this.dataUnit.hasPrevious(),\n      copyMode: this.dataUnit.hasCopiedRecord(),\n      isDirty: this.dataUnit.isDirty(),\n      hasDirtyRecords: this.dataUnit.hasDirtyRecords(),\n      selectedRecords: undefined,\n      selectionInfo,\n      selectedRecord,\n      recordsIsEmpty: this.dataUnit.records.length === 0,\n      metadataByRow: this._metadataByRow,\n      rowMetadata\n    });\n  }\n  async handleDataSaved(action) {\n    var _a, _b, _c;\n    const changes = (_a = action === null || action === void 0 ? void 0 : action.payload) === null || _a === void 0 ? void 0 : _a.changes;\n    const affectedRecords = (_b = action === null || action === void 0 ? void 0 : action.payload) === null || _b === void 0 ? void 0 : _b.records;\n    const newRowMetadata = await this.handleLoadRowMetadata((_c = changes === null || changes === void 0 ? void 0 : changes[0]) === null || _c === void 0 ? void 0 : _c.record);\n    if (newRowMetadata) {\n      newRowMetadata.getProp = this.buildGetPropRowMetadata(newRowMetadata);\n    }\n    const recordId = affectedRecords[0].__record__id__;\n    this._metadataByRow.set(recordId, newRowMetadata);\n    this.dataState = await this.buildDataState();\n    let saveOperation = changes[0]._operation.toLowerCase();\n    if (saveOperation == 'copy') {\n      saveOperation = OperationMap.CLONE;\n    }\n    if (this.canIgnoreOperationMessage(saveOperation))\n      return;\n    let msg = this.buildOperationMessage(saveOperation, affectedRecords);\n    if (msg != undefined) {\n      this.showSuccessMessage(msg);\n    }\n  }\n  canIgnoreOperationMessage(saveOperation) {\n    return this.ignoreSaveMessage && !this.isCloneOrInsertOperation(saveOperation);\n  }\n  isCloneOrInsertOperation(saveOperation) {\n    return [OperationMap.CLONE, OperationMap.INSERT].includes(saveOperation);\n  }\n  buildOperationMessage(saveOperation, records) {\n    if (this.isMultiplesUpdate(saveOperation, records)) {\n      return this.buildMultipleUpdateMessage(records);\n    }\n    return this.getMessage('snkDataUnit.saveInfo', records[0], saveOperation);\n  }\n  buildMultipleUpdateMessage(records, isCancel) {\n    /**\n     * FIXME: No futuro, precisamos pensar em um mecanismo para deixar as mensagens de feedback mais dinâmicas.\n     * Podemo ocorrer cenários onde temos mais de um registro selecionado e também cenários onde a chave primária\n     * de um registro se trata de uma chave composta.\n     */\n    const key = `snkDataUnit.${isCancel ? 'cancelInfo' : 'saveInfo'}`;\n    return this.getMessage(key, { records: records }, OperationMap.UPDATE_MULTIPLES);\n  }\n  isMultiplesUpdate(saveOperation, records) {\n    return saveOperation === OperationMap.UPDATE && records.length > 1;\n  }\n  handleRecordsRemoved(action) {\n    var _a, _b;\n    let removeFinishMsg = this.buildRemoveFinishMessage(action);\n    if (removeFinishMsg != undefined) {\n      this.showSuccessMessage(removeFinishMsg);\n    }\n    const recordsCount = (_b = (_a = this.dataUnit.records) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    const paginationInfo = this.dataUnit.getPaginationInfo();\n    if (paginationInfo) {\n      const page = recordsCount > 0 || paginationInfo.hasMore ? paginationInfo.currentPage : 0;\n      this.dataUnit.gotoPage(page);\n    }\n  }\n  buildRemoveFinishMessage(action) {\n    const records = action.payload.records;\n    if (!records || !records.length)\n      return undefined;\n    if ((records === null || records === void 0 ? void 0 : records.length) > 1)\n      return this.getMessage('snkDataUnit.removeAllInfo', { size: records.length });\n    return this.getMessage('snkDataUnit.removeInfo', records);\n  }\n  /**\n   * Conforme mecanismo de mensagens, é possível customizar as mensagens dos blocos de construção\n   * através de um pequeno modulo na estrutura da aplicação:\n   * - Criar um arquivo no seguinte caminho: /messages/appmessages.msg.js.\n   * Para conhecer os detalhes do módulo, vide o arquivo neste projeto \"/src/lib/message/resources/snk-data-unit.msg.ts\"\n   */\n  getMessage(key, params = undefined, customOperation) {\n    if (!params) {\n      params = this.getMessageParams();\n    }\n    if (customOperation) {\n      this.messagesBuilder.currentOperation = customOperation;\n    }\n    return this.messagesBuilder.getMessage(key, params);\n  }\n  getMessageParams() {\n    //FIXME: Devido ao recurso de multiseleção do dataunit, precisaremos criar um mecanismo para\n    //oferecer todos os registros selecionados para a mensagem, pois mensagens podem ficar incorretas.\n    return this.dataState.selectedRecord;\n  }\n  getMessageOperation() {\n    if (this.dataState.copyMode) {\n      return OperationMap.CLONE;\n    }\n    if (this.dataState.insertionMode || this.dataState.isStartingInsertionMode) {\n      return OperationMap.INSERT;\n    }\n    if (this.dataState.isDirty) {\n      return OperationMap.UPDATE;\n    }\n    return OperationMap.CLEAN;\n  }\n  async getDataUnitParentOrChild() {\n    var _a;\n    const cacheName = this.dataUnitName ? this.dataUnitName : this.entityName;\n    if (this._parentSnkDataUnit) {\n      this._parentDataUnit = await ((_a = this._parentSnkDataUnit) === null || _a === void 0 ? void 0 : _a.getDataUnit());\n      return await this._application.getDataUnit(this.entityName, cacheName, this._parentDataUnit, this.configName, this.resourceID);\n    }\n    else {\n      return await this._application.getDataUnit(this.entityName, cacheName, null, this.configName, this.resourceID);\n    }\n  }\n  updateMetadataWithRMP() {\n    this.fillFieldsWithRmp(this.dataUnit.metadata);\n    this.fillFieldsWithRmPrecision(this.dataUnit.metadata);\n    const dataUnitUpdatedMetadata = this.handleDULinksOnMetadataLoaded(this.dataUnit.metadata);\n    this.dataUnit.metadata = dataUnitUpdatedMetadata;\n  }\n  async loadDataUnit() {\n    var _a, _b;\n    if (this.dataUnit == null && this._application && this.entityName) {\n      this.dataUnit = await this.getDataUnitParentOrChild();\n    }\n    if (this.dataUnit) {\n      this.dataUnit.pageSize = this.pageSize;\n      this.dataUnit.unsubscribe(this._dataUnitObserver);\n      this.dataUnit.subscribe(this._dataUnitObserver);\n      if ((_a = this.dataUnit) === null || _a === void 0 ? void 0 : _a.metadata) {\n        this.updateMetadataWithRMP();\n      }\n      this.dataUnit.addInterceptor(this);\n      if ((_b = this.dataUnit.records) === null || _b === void 0 ? void 0 : _b.length) {\n        const { records } = this.getMetadataByRow(this.dataUnit);\n        this.dataUnit.records = records;\n      }\n      this.dataState = await this.buildDataState();\n      let resolver;\n      while (resolver = this._onDataUnitResolve.pop()) {\n        resolver(this.dataUnit);\n      }\n    }\n  }\n  getParentSnkDataUnit() {\n    let currentElement = this.element;\n    while (currentElement.parentNode) {\n      if (currentElement.parentNode.nodeName === 'SNK-DATA-UNIT') {\n        return currentElement.parentNode;\n      }\n      currentElement = currentElement.parentNode;\n    }\n    return;\n  }\n  handlerLinkFields() {\n    var _a, _b, _c, _d;\n    const parentDU = (_a = this._parentDataUnit) !== null && _a !== void 0 ? _a : (_b = this.dataUnit) === null || _b === void 0 ? void 0 : _b.getParentDataUnit();\n    if (!parentDU)\n      return;\n    const childName = (_c = this.entityName) !== null && _c !== void 0 ? _c : this.getCleanDataUnitName();\n    const child = parentDU.getChildInfo(childName);\n    if (!child)\n      return;\n    const links = (_d = child === null || child === void 0 ? void 0 : child.links) === null || _d === void 0 ? void 0 : _d.map(link => link.target);\n    this.handleDUWithLinks(links);\n  }\n  handleDUWithLinks(fieldsToLink) {\n    this.fieldsToLink = fieldsToLink;\n    const metadata = Object.assign({}, this.dataUnit.metadata);\n    this.processLinks(metadata);\n    this.dataUnit.metadata = metadata;\n    this.dataUnitFieldsHidded.emit();\n  }\n  processLinks(metadata) {\n    var _a;\n    (_a = metadata === null || metadata === void 0 ? void 0 : metadata.fields) === null || _a === void 0 ? void 0 : _a.forEach(field => {\n      var _a;\n      if ((_a = this.fieldsToLink) === null || _a === void 0 ? void 0 : _a.includes(field.name)) {\n        field.visible = false;\n      }\n    });\n  }\n  getCleanDataUnitName() {\n    var _a;\n    const uri = this.dataUnit.name;\n    if (StringUtils.isEmpty(uri))\n      return uri;\n    const matcher = this.REGEX_DATAUNIT_NAME.exec(uri);\n    return (_a = matcher === null || matcher === void 0 ? void 0 : matcher[1]) !== null && _a !== void 0 ? _a : uri;\n  }\n  static getNearestInstance(element) {\n    let parent = element.parentElement;\n    while (parent) {\n      if (parent.tagName.toUpperCase() === \"SNK-DATA-UNIT\") {\n        return parent;\n      }\n      parent = parent.parentElement;\n    }\n  }\n  instanceMessagesBuilder() {\n    var _a;\n    if (this.messagesBuilder) {\n      return;\n    }\n    this.messagesBuilder = new SnkMessageBuilder((_a = this.domainMessagesBuilder) !== null && _a !== void 0 ? _a : this.entityName);\n  }\n  //---------------------------------------------\n  // Lifecycle web component\n  //---------------------------------------------\n  componentWillLoad() {\n    this._application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    this._application.getAllAccess(this.resourceID).then(access => this._permissions = access);\n    this._parentSnkDataUnit = this.getParentSnkDataUnit();\n    this.instanceMessagesBuilder();\n  }\n  disconnectedCallback() {\n    if (this.dataUnit) {\n      this.dataUnit.releaseCallbacks();\n    }\n  }\n  async componentDidLoad() {\n    await this.loadDataUnit();\n    this.handlerLinkFields();\n  }\n  render() {\n    return (h(Host, null));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"pageSize\": [\"observePageSize\"],\n    \"dataUnitName\": [\"observeDataUnitName\"],\n    \"entityName\": [\"observeEntityName\"],\n    \"dataState\": [\"observeDataState\"],\n    \"dataUnit\": [\"observeDataUnit\"],\n    \"messagesBuilder\": [\"observeMessagesBuilder\"]\n  }; }\n};\nclass DataStateImpl {\n  constructor(datastate) {\n    this.copyMode = datastate.copyMode;\n    this.insertionMode = datastate.insertionMode;\n    this.isStartingInsertionMode = datastate.isStartingInsertionMode;\n    this.isDirty = datastate.isDirty;\n    this.hasDirtyRecords = datastate.hasDirtyRecords;\n    this.hasNext = datastate.hasNext;\n    this.hasPrevious = datastate.hasPrevious;\n    this.selectionInfo = datastate.selectionInfo;\n    this.selectedRecord = datastate.selectedRecord;\n    this.recordsIsEmpty = datastate.recordsIsEmpty;\n    this.metadataByRow = datastate.metadataByRow;\n    this.rowMetadata = datastate.rowMetadata;\n  }\n  get selectedRecords() {\n    var _a;\n    console.warn(\"SnkDataUnit: O método `selectedRecords` foi descontinuado. Use o método `selectionInfo`.\");\n    if ((_a = this.selectionInfo) === null || _a === void 0 ? void 0 : _a.isAllRecords()) {\n      throw new Error(\"Erro interno: Impossível obter os registros selecionados. A seleção atual é virtual. Use o atributo `selectionInfo`.\");\n    }\n    return this.selectionInfo.records;\n  }\n}\n\nexport { SnkDataUnit as S };\n"],"names":["NO_TAB_NAME","MAIN_TAB_NAME","showConfirmMultipleUpdatePopup","title","labelBtnConfirm","labelBtnCancel","message","changingFields","resolve","popup","builPopup","contentContainer","buildContentContainer","buildMessage","buildChangesContainer","actionsContainer","buildActionsContainer","buildCancelBtn","buildConfirmBtn","groupChanges","changesMap","change","_a","key","getTabName","tabName","buildChangesDiv","changes","changeLabel","changeDiv","changeLine","changesContainer","messageContent","confirmBtnLabel","confirmBtn","cancelBtnLabel","cancelBtn","SnkDataUnit","hostRef","registerInstance","createEvent","action","duState","Action","newValue","oldValue","ObjectUtils","detail","getSelectedRecordsIDsInfo","record","selectedRecord","currentRecord","recordId","rowMetadata","propPath","fieldName","_b","ApplicationUtils","rmPrecision","_","index","field","payload","metadataName","fieldValue","newRowMetadata","rmd","keysRmd","getRecordValue","cacheName","records","DataUnitAction","continueAction","selectedRecords","value","fieldLabel","formattedValue","tab","f","cancelConfirmation","cancelConfirmationTitle","confirm","editionCanceledMessage","_c","multipleSelection","removeConfirmation","selection","options","removeConfirmationTitle","DialogType","newPayload","rmpField","updatedFields","cacheValue","response","DatasetStrategy","metadata","initialRecords","parentDataUnit","parentSelectedRecord","selfInfo","links","newRecord","link","convertedParentSelectedRecord","convertType","cleanFields","flag","actionType","selectionInfo","isStartingInsertionMode","allowedOverwrite","DataStateImpl","affectedRecords","saveOperation","OperationMap","msg","isCancel","removeFinishMsg","recordsCount","paginationInfo","page","params","customOperation","dataUnitUpdatedMetadata","resolver","currentElement","_d","parentDU","childName","child","fieldsToLink","uri","StringUtils","matcher","element","parent","SnkMessageBuilder","ApplicationContext","access","h","Host","getElement","datastate"],"mappings":"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","x_google_ignoreList":[0]}
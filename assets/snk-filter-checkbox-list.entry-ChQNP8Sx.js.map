{"version":3,"file":"snk-filter-checkbox-list.entry-ChQNP8Sx.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-filter-checkbox-list.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-479e1293.js';\nimport { ElementIDUtils } from '@sankhyalabs/core';\nimport { F as FilterItemType } from './filter-item-type.enum-d45e026f.js';\n\nconst SnkFilterCheckboxList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.valueChanged = createEvent(this, \"valueChanged\", 7);\n    this.config = undefined;\n    this.optionsList = [];\n  }\n  componentDidLoad() {\n    if (this._element) {\n      ElementIDUtils.addIDInfo(this._element, 'filterContentEditor');\n    }\n  }\n  handleToggleCheck(itemChanged, checked) {\n    var _a, _b;\n    let configValueMap = (_a = this.config.value) !== null && _a !== void 0 ? _a : {};\n    configValueMap[itemChanged.name] = checked;\n    this.config = Object.assign(Object.assign({}, this.config), { value: configValueMap });\n    this.valueChanged.emit((_b = this.config) === null || _b === void 0 ? void 0 : _b.value);\n  }\n  renderOptions() {\n    return this.optionsList.map(option => (h(\"ez-check\", { label: option.label, onEzChange: (event) => this.handleToggleCheck(option, event.detail), value: !!this.isChecked(option.name) })));\n  }\n  isChecked(itemName) {\n    var _a;\n    return (_a = this.config.value) === null || _a === void 0 ? void 0 : _a[itemName];\n  }\n  buidOptions() {\n    var _a, _b, _c;\n    const propsOptions = (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.props) === null || _b === void 0 ? void 0 : _b.options) !== null && _c !== void 0 ? _c : [];\n    this.optionsList = [...propsOptions];\n  }\n  componentWillRender() {\n    this.buidOptions();\n  }\n  render() {\n    if (!this.config || this.config.type !== FilterItemType.CHECK_BOX_LIST) {\n      return undefined;\n    }\n    return (h(\"div\", { class: 'ez-flex ez-flex--column' }, this.renderOptions()));\n  }\n  get _element() { return getElement(this); }\n};\n\nexport { SnkFilterCheckboxList as snk_filter_checkbox_list };\n"],"names":["SnkFilterCheckboxList","hostRef","registerInstance","createEvent","ElementIDUtils","itemChanged","checked","_a","_b","configValueMap","option","h","event","itemName","_c","propsOptions","FilterItemType","getElement"],"mappings":"uLAIK,MAACA,EAAwB,KAAM,CAClC,YAAYC,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAC9B,KAAK,aAAeE,EAAY,KAAM,eAAgB,CAAC,EACvD,KAAK,OAAS,OACd,KAAK,YAAc,CAAE,CACzB,CACE,kBAAmB,CACb,KAAK,UACPC,EAAe,UAAU,KAAK,SAAU,qBAAqB,CAEnE,CACE,kBAAkBC,EAAaC,EAAS,CACtC,IAAIC,EAAIC,EACR,IAAIC,GAAkBF,EAAK,KAAK,OAAO,SAAW,MAAQA,IAAO,OAASA,EAAK,CAAE,EACjFE,EAAeJ,EAAY,IAAI,EAAIC,EACnC,KAAK,OAAS,OAAO,OAAO,OAAO,OAAO,GAAI,KAAK,MAAM,EAAG,CAAE,MAAOG,CAAc,CAAE,EACrF,KAAK,aAAa,MAAMD,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,KAAK,CAC3F,CACE,eAAgB,CACd,OAAO,KAAK,YAAY,IAAIE,GAAWC,EAAE,WAAY,CAAE,MAAOD,EAAO,MAAO,WAAaE,GAAU,KAAK,kBAAkBF,EAAQE,EAAM,MAAM,EAAG,MAAO,CAAC,CAAC,KAAK,UAAUF,EAAO,IAAI,CAAC,CAAE,CAAE,CAC7L,CACE,UAAUG,EAAU,CAClB,IAAIN,EACJ,OAAQA,EAAK,KAAK,OAAO,SAAW,MAAQA,IAAO,OAAS,OAASA,EAAGM,CAAQ,CACpF,CACE,aAAc,CACZ,IAAIN,EAAIC,EAAIM,EACZ,MAAMC,GAAgBD,GAAMN,GAAMD,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAW,MAAQC,IAAO,OAAS,OAASA,EAAG,WAAa,MAAQM,IAAO,OAASA,EAAK,CAAE,EACvL,KAAK,YAAc,CAAC,GAAGC,CAAY,CACvC,CACE,qBAAsB,CACpB,KAAK,YAAa,CACtB,CACE,QAAS,CACP,GAAI,GAAC,KAAK,QAAU,KAAK,OAAO,OAASC,EAAe,gBAGxD,OAAQL,EAAE,MAAO,CAAE,MAAO,2BAA6B,KAAK,eAAe,CAC/E,CACE,IAAI,UAAW,CAAE,OAAOM,EAAW,IAAI,CAAE,CAC3C","x_google_ignoreList":[0]}
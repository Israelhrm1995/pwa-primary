import{r as c,c as o,E as l,A as u,h as p,g as d}from"./index-C7RI_ets.js";import{F as f}from"./filter-item-type.enum-d45e026f-B41QHsvD.js";const m=class{constructor(e){c(this,e),this.valueChanged=o(this,"valueChanged",7),this._isSearchPlus=!1,this.config=void 0,this.value=void 0}async ezChangeListener(e){this._isSearchPlus?this.value=await this._searchInput.getValueAsync():this.value=this._searchInput.value,this.valueChanged.emit(this.value)}componentDidLoad(){this._element&&l.addIDInfo(this._element,"filterContentEditor")}doSearch(e,i,t=!1){const s=u.getContextValue("__SNK__APPLICATION__"),n=t?s.executePreparedSearchPlus:s.executePreparedSearch;return new Promise((r,h)=>{n.bind(s)(e,i,this.config.props.searchContext).then(a=>{r(a)}).catch(a=>{h(a)})})}async show(){this._searchInput.setFocus()}getInputItem(){var e;this._isSearchPlus=((e=this.config.props)===null||e===void 0?void 0:e.useSearchPlus)==!0;const i=this._isSearchPlus?"ez-search-plus":"ez-search";return p(i,{id:this.config.id,suppressEmptyOption:!0,value:this.config.value,label:this.config.label,ref:t=>this._searchInput=t,optionLoader:({mode:t,argument:s})=>this.doSearch(t,s,this._isSearchPlus)})}render(){if(!(!this.config||this.config.type!==f.SEARCH))return this.getInputItem()}get _element(){return d(this)}};export{m as snk_filter_search};
//# sourceMappingURL=snk-filter-search.entry-C5hXnT8B.js.map

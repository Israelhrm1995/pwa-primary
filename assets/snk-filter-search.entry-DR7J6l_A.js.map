{"version":3,"file":"snk-filter-search.entry-DR7J6l_A.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-filter-search.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-479e1293.js';\nimport { ElementIDUtils, ApplicationContext } from '@sankhyalabs/core';\nimport { F as FilterItemType } from './filter-item-type.enum-d45e026f.js';\n\nconst SnkFilterSearch = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.valueChanged = createEvent(this, \"valueChanged\", 7);\n    this._isSearchPlus = false;\n    this.config = undefined;\n    this.value = undefined;\n  }\n  /**\n   * Emitido quando acontece a alteração de valor do componente snk-filter-search\n   */\n  async ezChangeListener(_evt) {\n    if (this._isSearchPlus) {\n      this.value = await this._searchInput.getValueAsync();\n    }\n    else {\n      this.value = this._searchInput.value;\n    }\n    this.valueChanged.emit(this.value);\n  }\n  componentDidLoad() {\n    if (this._element) {\n      ElementIDUtils.addIDInfo(this._element, 'filterContentEditor');\n    }\n  }\n  doSearch(mode, argument, isSearchPlus = false) {\n    const application = ApplicationContext.getContextValue(\"__SNK__APPLICATION__\");\n    const loader = isSearchPlus ? application.executePreparedSearchPlus : application.executePreparedSearch;\n    return new Promise((resolve, reject) => {\n      loader.bind(application)(mode, argument, this.config.props.searchContext)\n        .then(result => {\n        resolve(result);\n      }).catch(reason => {\n        reject(reason);\n      });\n    });\n  }\n  /**\n   * Exibe o componente snk-filter-search\n   */\n  async show() {\n    this._searchInput.setFocus();\n  }\n  getInputItem() {\n    var _a;\n    this._isSearchPlus = ((_a = this.config.props) === null || _a === void 0 ? void 0 : _a[\"useSearchPlus\"]) == true;\n    const TagName = this._isSearchPlus ? \"ez-search-plus\" : \"ez-search\";\n    return (h(TagName, { id: this.config.id, suppressEmptyOption: true, value: this.config.value, label: this.config.label, ref: ref => this._searchInput = ref, optionLoader: ({ mode, argument }) => this.doSearch(mode, argument, this._isSearchPlus) }));\n  }\n  render() {\n    if (!this.config || this.config.type !== FilterItemType.SEARCH) {\n      return undefined;\n    }\n    return this.getInputItem();\n  }\n  get _element() { return getElement(this); }\n};\n\nexport { SnkFilterSearch as snk_filter_search };\n"],"names":["SnkFilterSearch","hostRef","registerInstance","createEvent","_evt","ElementIDUtils","mode","argument","isSearchPlus","application","ApplicationContext","loader","resolve","reject","result","reason","_a","TagName","h","ref","FilterItemType","getElement"],"mappings":"4OAIK,MAACA,EAAkB,KAAM,CAC5B,YAAYC,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAC9B,KAAK,aAAeE,EAAY,KAAM,eAAgB,CAAC,EACvD,KAAK,cAAgB,GACrB,KAAK,OAAS,OACd,KAAK,MAAQ,MACjB,CAIE,MAAM,iBAAiBC,EAAM,CACvB,KAAK,cACP,KAAK,MAAQ,MAAM,KAAK,aAAa,cAAe,EAGpD,KAAK,MAAQ,KAAK,aAAa,MAEjC,KAAK,aAAa,KAAK,KAAK,KAAK,CACrC,CACE,kBAAmB,CACb,KAAK,UACPC,EAAe,UAAU,KAAK,SAAU,qBAAqB,CAEnE,CACE,SAASC,EAAMC,EAAUC,EAAe,GAAO,CAC7C,MAAMC,EAAcC,EAAmB,gBAAgB,sBAAsB,EACvEC,EAASH,EAAeC,EAAY,0BAA4BA,EAAY,sBAClF,OAAO,IAAI,QAAQ,CAACG,EAASC,IAAW,CACtCF,EAAO,KAAKF,CAAW,EAAEH,EAAMC,EAAU,KAAK,OAAO,MAAM,aAAa,EACrE,KAAKO,GAAU,CAChBF,EAAQE,CAAM,CACtB,CAAO,EAAE,MAAMC,GAAU,CACjBF,EAAOE,CAAM,CACrB,CAAO,CACP,CAAK,CACL,CAIE,MAAM,MAAO,CACX,KAAK,aAAa,SAAU,CAChC,CACE,cAAe,CACb,IAAIC,EACJ,KAAK,gBAAkBA,EAAK,KAAK,OAAO,SAAW,MAAQA,IAAO,OAAS,OAASA,EAAG,gBAAqB,GAC5G,MAAMC,EAAU,KAAK,cAAgB,iBAAmB,YACxD,OAAQC,EAAED,EAAS,CAAE,GAAI,KAAK,OAAO,GAAI,oBAAqB,GAAM,MAAO,KAAK,OAAO,MAAO,MAAO,KAAK,OAAO,MAAO,IAAKE,GAAO,KAAK,aAAeA,EAAK,aAAc,CAAC,CAAE,KAAAb,EAAM,SAAAC,CAAQ,IAAO,KAAK,SAASD,EAAMC,EAAU,KAAK,aAAa,EAAG,CAC1P,CACE,QAAS,CACP,GAAI,GAAC,KAAK,QAAU,KAAK,OAAO,OAASa,EAAe,QAGxD,OAAO,KAAK,aAAc,CAC9B,CACE,IAAI,UAAW,CAAE,OAAOC,EAAW,IAAI,CAAE,CAC3C","x_google_ignoreList":[0]}
{"version":3,"file":"snk-guides-viewer.entry-BTSyVJEx.js","sources":["../../node_modules/@sankhyalabs/sankhyablocks/dist/esm/snk-guides-viewer-defa2629.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, F as Fragment, g as getElement } from './index-479e1293.js';\nimport { ObjectUtils, StringUtils, Action, KeyboardManager, ElementIDUtils } from '@sankhyalabs/core';\nimport { S as SnkFormConfigManager } from './SnkFormConfigManager-c1cd9dcd.js';\nimport { buildFormMetadata, FormMetadata } from '@sankhyalabs/ezui/dist/collection/utils/form';\nimport { T as TaskbarProcessor } from './taskbar-processor-3436124c.js';\nimport { T as TaskbarElement } from './taskbar-elements-171476d4.js';\nimport { V as VIEW_MODE } from './constants-7b422de0.js';\nimport './DataFetcher-db08cad0.js';\nimport './ISave-da565824.js';\nimport { P as PresentationMode } from './index-b40568ff.js';\nimport '@sankhyalabs/ezui/dist/collection/utils/constants';\nimport '@sankhyalabs/core/dist/dataunit/metadata/UnitMetadata';\nimport './dataunit-fetcher-1b78797a.js';\nimport './filter-item-type.enum-d45e026f.js';\nimport './form-config-fetcher-e623539b.js';\nimport { SelectionMode } from '@sankhyalabs/core/dist/dataunit/DataUnit';\nimport { buildFieldSearch, SHORTCUT_SEARCH_FIELD, LABEL_SEARCH_FIELD } from '@sankhyalabs/ezui/dist/collection/utils';\n\nconst snkGuidesViewerCss = \".sc-snk-guides-viewer-h{--snk-guides-viewer--space-large:var(--space--large, 24px);--snk-guides-viewer--space-small:var(--space--2xs, 8px);--snk-guides-viewer__header--min-height:68px;--snk-guides-viewer__header--z-index:var(--more-visible, 2);--snk-guides-viewer__header--background-color:var(--background--body, #fafcff);--snk-guides-viewer__guide-navigator--width:340px;display:block}snk-form-view.sc-snk-guides-viewer{width:100%}.snk-guides-viewer.sc-snk-guides-viewer{position:relative;padding-left:0px;padding-top:0px;padding-right:var(--snk-guides-viewer--space-large);padding-bottom:var(--snk-guides-viewer--space-large)}.snk-guides-viewer__detail-container.sc-snk-guides-viewer{display:flex;row-gap:24px;flex-direction:column}.snk-guides-viewer__header.sc-snk-guides-viewer{position:sticky;align-items:center;top:0;z-index:var(--snk-guides-viewer__header--z-index);background-color:var(--snk-guides-viewer__header--background-color);min-height:var(--snk-guides-viewer__header--min-height);width:calc(100% + (var(--snk-guides-viewer--space-large) * 2));padding-left:var(--snk-guides-viewer--space-large);padding-right:var(--snk-guides-viewer--space-large);padding-top:var(--snk-guides-viewer--space-large);padding-bottom:var(--snk-guides-viewer--space-small);margin-left:calc(var(--snk-guides-viewer--space-large) * -1);margin-right:calc(var(--snk-guides-viewer--space-large) * -1);margin-bottom:var(--snk-guides-viewer--space-small)}.snk-guides-viewer__header-breadcrumb.sc-snk-guides-viewer{width:25%;display:flex}.snk-guides-viewer__header-taskbar.sc-snk-guides-viewer{width:75%}.snk-guides-viewer__container.sc-snk-guides-viewer{display:grid;grid-template-columns:minmax(0, auto) minmax(0, 100%);height:100%;column-gap:var(--snk-guides-viewer--space-large)}.snk-guides-viewer__guide-navigator.sc-snk-guides-viewer{position:sticky;top:calc(var(--snk-guides-viewer__header--min-height) + var(--snk-guides-viewer--space-small));height:calc(100vh - var(--snk-guides-viewer__header--min-height) - var(--snk-guides-viewer--space-large) - var(--snk-guides-viewer--space-small))}.snk-guides-viewer__guide-navigator[open].sc-snk-guides-viewer{width:var(--snk-guides-viewer__guide-navigator--width);max-width:var(--snk-guides-viewer__guide-navigator--width);min-width:var(--snk-guides-viewer__guide-navigator--width)}.snk-guides-viewer__detail-content.sc-snk-guides-viewer{min-height:100%;align-items:flex-start;align-content:flex-start}\";\n\nconst FORM_NAME_PREFIX = \"__FORM:\";\nconst SnkGuidesViewer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.snkMasterFormConfigChange = createEvent(this, \"snkMasterFormConfigChange\", 7);\n    this.exit = createEvent(this, \"exit\", 7);\n    this.actionClick = createEvent(this, \"actionClick\", 7);\n    this.formItemsReady = createEvent(this, \"formItemsReady\", 7);\n    this._guideBuilders = new Map();\n    this.dataUnit = undefined;\n    this.dataState = undefined;\n    this.configName = undefined;\n    this.entityPath = undefined;\n    this.actionsList = undefined;\n    this.recordsValidator = undefined;\n    this.masterFormConfig = undefined;\n    this.selectedGuide = undefined;\n    this.taskbarManager = undefined;\n    this.messagesBuilder = undefined;\n    this.canEdit = true;\n    this.presentationMode = undefined;\n    this.resourceID = undefined;\n    this.detailTaskbarCustomContainerId = undefined;\n    this.formLegacyConfigName = undefined;\n    this.enableGridInsert = false;\n    this.ignoreReadOnlyFormFields = undefined;\n    this.getCustomTitle = undefined;\n    this._hasToCreateFieldSearch = true;\n    this._breadcrumbItems = [];\n    this._guides = undefined;\n    this._formEditorConfigManager = undefined;\n    this._formEditorDataUnit = undefined;\n    this._fieldToGetFocus = undefined;\n    this._customEditors = undefined;\n    this._customRenders = undefined;\n    this._fieldsProps = {};\n    this._mainForm = undefined;\n  }\n  observeDataUnit() {\n    this.loadGuides(true);\n  }\n  observeDataState(newValue, oldValue) {\n    var _a, _b, _c, _d, _e, _f;\n    const newRecordsIds = (_b = (_a = newValue === null || newValue === void 0 ? void 0 : newValue.selectionInfo) === null || _a === void 0 ? void 0 : _a.recordIds) !== null && _b !== void 0 ? _b : (_c = newValue === null || newValue === void 0 ? void 0 : newValue.selectedRecord) === null || _c === void 0 ? void 0 : _c['__record__id__'];\n    const oldRecordsIds = (_e = (_d = oldValue === null || oldValue === void 0 ? void 0 : oldValue.selectionInfo) === null || _d === void 0 ? void 0 : _d.recordIds) !== null && _e !== void 0 ? _e : (_f = oldValue === null || oldValue === void 0 ? void 0 : oldValue.selectedRecord) === null || _f === void 0 ? void 0 : _f['__record__id__'];\n    if (!ObjectUtils.equals(newRecordsIds, oldRecordsIds)) {\n      this.loadGuides((oldValue === null || oldValue === void 0 ? void 0 : oldValue.insertionMode) != (newValue === null || newValue === void 0 ? void 0 : newValue.insertionMode));\n    }\n  }\n  observeMasterFormConfig() {\n    this.loadGuides(this.noGuideSelected());\n    this.snkMasterFormConfigChange.emit(this.masterFormConfig);\n  }\n  /**\n  * Abre o configurador do formulário\n  * @param detail - Define se a configuração que está sendo carregada é\n  * referente a um form detail.\n  */\n  async showFormConfig(detail = false) {\n    const masterConfig = !detail || this._currentDetail == undefined;\n    this._formEditorConfigManager = masterConfig ? this._configManager : this._currentDetail.formConfigManager;\n    this._formEditorDataUnit = masterConfig ? this.dataUnit : this._currentDetail.dataUnit;\n  }\n  /**\n   * Registra um editor customizado para campos da grade e formulário\n   */\n  async addCustomEditor(fieldName, customEditor) {\n    this._customEditors = Object.assign(Object.assign({}, this._customEditors), { [fieldName]: customEditor });\n  }\n  /**\n   * Registra um render customizado para colunas da grid.\n   */\n  async addGridCustomRender(fieldName, customRender) {\n    this._customRenders = Object.assign(Object.assign({}, this._customRenders), { [fieldName]: customRender });\n  }\n  ;\n  /**\n   * Altera/adiciona uma propriedade nos metadados do campo.\n   */\n  async setFieldProp(fieldName, propName, value) {\n    const newFieldsProps = {\n      [fieldName]: Object.assign(Object.assign({}, this._fieldsProps[fieldName]), { [propName]: value })\n    };\n    this._fieldsProps = Object.assign(Object.assign({}, this._fieldsProps), newFieldsProps);\n  }\n  /**\n   * Atribui o foco para o componente.\n   */\n  async setFocus() {\n    this._container.focus();\n  }\n  exitViewer() {\n    if (!this.enableGridInsert && this.dataUnit.isDirty()) {\n      this.dataUnit.cancelEdition({ after: () => this.exit.emit() });\n    }\n    else {\n      this.exit.emit();\n    }\n  }\n  onActionClick(evt) {\n    if (evt.detail === TaskbarElement.CONFIGURATOR) {\n      if (evt.target.dataset.taskbarOwner != \"master\") {\n        this._snkConfigurator.open();\n        evt.stopImmediatePropagation();\n        evt.stopPropagation();\n      }\n    }\n  }\n  onContentCardChanged(evt) {\n    SnkGuidesViewer.updateContentCard(evt.detail.formName, evt.detail.cardConfig, evt.detail.propertyChanged, this._configManager)\n      .then(() => this.masterFormConfig = this._configManager.getConfig(this.dataUnit));\n  }\n  /**\n   * Conforme mecanismo de mensagens, é possível customizar as mensagens dos blocos de construção\n   * através de um pequeno modulo na estrutura da aplicação:\n   * - Criar um arquivo no seguinte caminho: /messages/appmessages.msg.js.\n   * Para conhecer os detalhes do módulo, vide o arquivo neste projeto \"/src/lib/message/resources/snk-crud.msg.ts\"\n   */\n  getMessage(key) {\n    var _a, _b;\n    if (this.dataUnit.isMultipleEdition) {\n      const selectedRecords = (_b = (_a = this.dataUnit.getSelectionInfo()) === null || _a === void 0 ? void 0 : _a.records) !== null && _b !== void 0 ? _b : [];\n      return `Editando ${selectedRecords.length} registros`;\n    }\n    return this.messagesBuilder.getMessage(key, this.dataUnit.getSelectedRecord());\n  }\n  loadGuides(changeSelection) {\n    if (!this.dataUnit) {\n      return;\n    }\n    if (!this._configManager.isLoaded) {\n      return;\n    }\n    this._masterFormMetadata = buildFormMetadata(this.masterFormConfig, this.dataUnit, true);\n    const allSheets = this._masterFormMetadata.getAllSheets();\n    const currentRecord = this.dataUnit.getSelectedRecord();\n    const disableDetails = this.hasToDisableDetails(currentRecord);\n    const guides = [];\n    Array.from(allSheets.values()).forEach((sheet) => {\n      const item = { id: sheet.name, label: sheet.label };\n      if (this.isDetail(sheet.name) && disableDetails) {\n        item.tooltip = \"Para alterar detalhes é necessário estar com um (e apenas um) registro selecionado.\";\n        item.disabled = true;\n      }\n      guides.push(item);\n    });\n    this._guides = guides;\n    if (this._guideNavigator) {\n      this._guideNavigator.updateItem(this._guides);\n    }\n    if (changeSelection) {\n      this.selectedGuide = this._guides.length > 0 ? this._guides[0] : undefined;\n    }\n  }\n  hasToDisableDetails(currentRecord) {\n    return !currentRecord\n      || this.dataUnit.isNewRecord(currentRecord.__record__id__)\n      || this.dataUnit.isMultipleEdition;\n  }\n  isDetail(formId) {\n    return FormMetadata.getDetailName(formId) != undefined;\n  }\n  updateGuide(guideBuilder) {\n    this._guideBuilders.set(guideBuilder.id, guideBuilder);\n    const guideItem = guideBuilder.buildGuideItem(this._guideBuilders);\n    if (this._guideNavigator) {\n      this._guideNavigator.updateItem(guideItem).then(() => {\n        this._guideNavigator.getCurrentPath().then(breadcrumbs => {\n          this._breadcrumbItems = breadcrumbs;\n        });\n      });\n      this._guides = this._guides.map(guide => {\n        if (guide.id === guideItem.id) {\n          return Object.assign(Object.assign(Object.assign({}, guide), guideItem), (guideItem.children !== undefined ? {} : { children: undefined }));\n        }\n        return guide;\n      });\n    }\n  }\n  getTaskBarId() {\n    var _a;\n    if ((_a = this.dataState) === null || _a === void 0 ? void 0 : _a.isDirty) {\n      return TASKBAR_ID.FINISH_EDITION;\n    }\n    if (this.dataUnit.isMultipleEdition) {\n      return TASKBAR_ID.MUTIPLE_EDITION;\n    }\n    return TASKBAR_ID.REGULAR;\n  }\n  loadTaskbarProcessor() {\n    const taskbarIDs = {};\n    taskbarIDs[TASKBAR_ID.REGULAR] = this.buildBtnsRegularMode();\n    taskbarIDs[TASKBAR_ID.FINISH_EDITION] = [TaskbarElement.CANCEL, TaskbarElement.SAVE, this.handleAddGridMode()];\n    taskbarIDs[TASKBAR_ID.MUTIPLE_EDITION] = [TaskbarElement.CANCEL];\n    this._taskbarProcessor = new TaskbarProcessor(taskbarIDs);\n    this._taskbarProcessor.process(this.getTaskBarId(), this.taskbarManager, this.dataState, this.buildDisabledButtons(), this.buildInvisibleButtons());\n  }\n  buildBtnsRegularMode() {\n    var _a, _b;\n    const btnsRegularMode = [\n      TaskbarElement.ATTACH, TaskbarElement.CLONE, TaskbarElement.REMOVE, TaskbarElement.MORE_OPTIONS,\n      TaskbarElement.ACTIONS_BUTTON, TaskbarElement.DIVIDER, TaskbarElement.GRID_MODE, TaskbarElement.CONFIGURATOR,\n    ];\n    if (((_b = (_a = this.dataState) === null || _a === void 0 ? void 0 : _a.selectionInfo) === null || _b === void 0 ? void 0 : _b.length) <= 1) {\n      btnsRegularMode.unshift(TaskbarElement.PREVIOUS, TaskbarElement.NEXT, TaskbarElement.DIVIDER);\n    }\n    if (this.presentationMode == PresentationMode.SECONDARY) {\n      btnsRegularMode.unshift(TaskbarElement.INSERT);\n    }\n    else {\n      btnsRegularMode.push(TaskbarElement.INSERT);\n    }\n    return btnsRegularMode;\n  }\n  buildDisabledButtons() {\n    var _a, _b, _c, _d, _e, _f;\n    const disabledButtons = [];\n    if (!((_a = this.dataState) === null || _a === void 0 ? void 0 : _a.hasPrevious))\n      disabledButtons.push(TaskbarElement.PREVIOUS);\n    if (!((_b = this.dataState) === null || _b === void 0 ? void 0 : _b.hasNext))\n      disabledButtons.push(TaskbarElement.NEXT);\n    if (((_d = (_c = this.dataState) === null || _c === void 0 ? void 0 : _c.selectionInfo) === null || _d === void 0 ? void 0 : _d.length) > 1)\n      disabledButtons.push(TaskbarElement.CLONE);\n    if ((_f = (_e = this.dataState) === null || _e === void 0 ? void 0 : _e.selectionInfo) === null || _f === void 0 ? void 0 : _f.isAllRecords())\n      disabledButtons.push(TaskbarElement.REMOVE);\n    return disabledButtons;\n  }\n  handleAddGridMode() {\n    return this.enableGridInsert ? TaskbarElement.GRID_MODE : \"\";\n  }\n  buildInvisibleButtons() {\n    const invisibleButtons = [];\n    if (this.dataState && this.dataState.selectionInfo.mode === SelectionMode.ALL_RECORDS)\n      invisibleButtons.push(TaskbarElement.ACTIONS_BUTTON);\n    return invisibleButtons;\n  }\n  static updateContentCard(formName, cardConfig, propertyChanged, configManager) {\n    return configManager.saveCardState(formName, cardConfig, propertyChanged);\n  }\n  static buildFixedForms(params) {\n    var _a;\n    const cardsState = (_a = params.formConfig) === null || _a === void 0 ? void 0 : _a.cardsState;\n    if (cardsState == undefined) {\n      return;\n    }\n    return (h(Fragment, null, Array.from(cardsState.entries())\n      .filter(([formName, cardConfig]) => (cardConfig === null || cardConfig === void 0 ? void 0 : cardConfig.fixed) && formName != params.selectedForm)\n      .sort(([, cardConfigA], [, cardConfigB]) => {\n      const indexA = (cardConfigA === null || cardConfigA === void 0 ? void 0 : cardConfigA.fixSequence) || 0;\n      const indexB = (cardConfigB === null || cardConfigB === void 0 ? void 0 : cardConfigB.fixSequence) || 0;\n      return indexA - indexB;\n    })\n      .map(([formName, cardConfig]) => {\n      var _a, _b;\n      const sheet = params.formMetadata.getSheet(formName);\n      if (sheet == undefined) {\n        return;\n      }\n      return h(\"snk-form-view\", { levelPath: params.levelPath, label: sheet.label, name: formName, fields: sheet.fields, formMetadata: params.formMetadata, dataUnit: params.dataUnit, recordsValidator: params.recordsValidator, contracted: (cardConfig === null || cardConfig === void 0 ? void 0 : cardConfig.presentation) === \"CONTRACTED\", fixed: cardConfig === null || cardConfig === void 0 ? void 0 : cardConfig.fixed, summaryFields: (_b = (_a = params.formConfig) === null || _a === void 0 ? void 0 : _a.summary) === null || _b === void 0 ? void 0 : _b.get(formName), fieldToFocus: params.fieldToFocus, key: formName, onSnkRequestClearFieldToFocus: _ => { var _a; return (_a = params.onRequestClearFieldToFocus) === null || _a === void 0 ? void 0 : _a.call(params); }, customEditors: params.propsCustomEditor, fieldsProps: params.fieldsProps });\n    })));\n  }\n  wrapDetail(levels, content) {\n    if (levels.length === 0) {\n      return content;\n    }\n    const currentLevel = levels.pop();\n    const childEntityName = FormMetadata.getDetailName(currentLevel);\n    if (childEntityName) {\n      return this.wrapDetail(levels, h(\"snk-data-unit\", { dataUnitName: `${this.getDataUnitName(levels, childEntityName)}`, entityName: childEntityName }, content));\n    }\n  }\n  getDataUnitName(levels, entityName) {\n    if (levels.length > 0) {\n      const entityNames = levels.map(level => FormMetadata.getDetailName(level));\n      return `${this.entityPath}/${entityNames.join(\"/\")}/${entityName}`;\n    }\n    return `${this.entityPath}/${entityName}`;\n  }\n  getContent() {\n    var _a, _b, _c, _d, _e;\n    if (!this.selectedGuide) {\n      return;\n    }\n    const guideId = this.selectedGuide.id;\n    let content;\n    const levels = guideId.split(\"::\");\n    const currentLevel = levels.pop();\n    const childEntityName = FormMetadata.getDetailName(currentLevel);\n    let detailId = guideId;\n    if (childEntityName || levels.length > 0) {\n      let formName;\n      let detailBranch;\n      if (guideId.includes(FORM_NAME_PREFIX)) {\n        [detailId, formName] = guideId.split(FORM_NAME_PREFIX);\n        const pathSize = ((_a = this._breadcrumbItems) === null || _a === void 0 ? void 0 : _a.length) || 0;\n        detailBranch = pathSize > 1 ? this._breadcrumbItems[pathSize - 2] : this.selectedGuide;\n      }\n      else {\n        detailBranch = this.selectedGuide;\n      }\n      content = this.wrapDetail(levels, h(\"snk-detail-view\", { ref: (ref) => this._currentDetail = ref, dataUnitName: this.getDataUnitName(levels, childEntityName), onSnkDetailGuidesChange: (evt) => this.updateGuide(evt.detail), entityName: childEntityName, selectedForm: formName, branchGuide: detailBranch, guideItemPath: this._breadcrumbItems, key: `detail${detailId}`, canEdit: this.canEdit, onSnkSwitchGuide: evt => this._guideNavigator.selectGuide(evt.detail), resourceID: this.resourceID, taskbarCustomContainerId: this.detailTaskbarCustomContainerId, customEditors: this._customEditors, customRenders: this._customRenders, presentationMode: this.presentationMode }));\n    }\n    else {\n      const cardId = this.selectedGuide.id;\n      const sheet = this._masterFormMetadata.getSheet(cardId);\n      if (sheet) {\n        const cardConfig = (_c = (_b = this.masterFormConfig) === null || _b === void 0 ? void 0 : _b.cardsState) === null || _c === void 0 ? void 0 : _c.get(cardId);\n        content = h(\"snk-form-view\", { ref: ref => this._mainForm = ref, fixed: cardConfig === null || cardConfig === void 0 ? void 0 : cardConfig.fixed, summaryFields: (_e = (_d = this.masterFormConfig) === null || _d === void 0 ? void 0 : _d.summary) === null || _e === void 0 ? void 0 : _e.get(cardId), name: cardId, label: sheet.label, fields: sheet.fields, dataUnit: this.dataUnit, formMetadata: this._masterFormMetadata, recordsValidator: this.recordsValidator, fieldToFocus: this._fieldToGetFocus, key: guideId, onSnkRequestClearFieldToFocus: _ => this.clearFieldToFocusHandler(), customEditors: this._customEditors, fieldsProps: this._fieldsProps, fieldSearch: this._fieldSearch }, this.presentationMode == PresentationMode.SECONDARY && this.buildTaskBar());\n      }\n    }\n    return content;\n  }\n  onBreadcrumbClickHandler(item) {\n    if ((item === null || item === void 0 ? void 0 : item.id) == undefined) {\n      return;\n    }\n    this._guideNavigator.selectGuide(item.id);\n  }\n  updateSelectedGuideHandler(currentItem) {\n    this._guideHasChanged = this.selectedGuide != currentItem;\n    this.selectedGuide = currentItem;\n    this._guideNavigator.getCurrentPath().then(breadcrumbs => {\n      this._breadcrumbItems = breadcrumbs;\n    });\n    this.resetGuideBadge(currentItem);\n  }\n  changeGuideHandler(guideName) {\n    var _a;\n    (_a = this._guideNavigator) === null || _a === void 0 ? void 0 : _a.selectGuide(guideName);\n  }\n  clearFieldToFocusHandler() {\n    this._fieldToGetFocus = undefined;\n  }\n  resetGuideBadge(selectedGuide) {\n    var _a;\n    this._guides = [...(_a = this._guides) === null || _a === void 0 ? void 0 : _a.map(guide => {\n        if (this.canClearGuideBadge(guide, selectedGuide.id)) {\n          return Object.assign(Object.assign({}, guide), { badge: null });\n        }\n        return guide;\n      })];\n  }\n  canClearGuideBadge(guide, idToCheck) {\n    return (guide.id === idToCheck) || this.isIncludedInChildrenList(guide, idToCheck);\n  }\n  isIncludedInChildrenList(guide, guideId) {\n    return this.hasChildren(guide) && this.getChildrenIdList(guide).includes(guideId);\n  }\n  hasChildren(guide) {\n    return guide.children && Array.isArray(guide.children);\n  }\n  getChildrenIdList(guide) {\n    return (guide.children).map(guideChild => guideChild.id);\n  }\n  getConfigViewMode() {\n    return VIEW_MODE.GRID;\n  }\n  changeConfigViewMode(mode) {\n    if (this._currentDetail) {\n      this._currentDetail.changeViewMode(mode);\n    }\n  }\n  openConfig(mode) {\n    this._snkConfigurator.close();\n    if (this._currentDetail) {\n      if (mode === VIEW_MODE.FORM) {\n        this.showFormConfig(true);\n      }\n      else {\n        this._currentDetail.configGrid();\n      }\n    }\n  }\n  noGuideSelected() {\n    var _a;\n    return this.selectedGuide === undefined || '__main' === ((_a = this.selectedGuide) === null || _a === void 0 ? void 0 : _a.id);\n  }\n  addFormLegacyConfigName() {\n    if (this.formLegacyConfigName) {\n      this._configManager.addFormLegacyConfig(this.formLegacyConfigName);\n    }\n  }\n  setMasterFormConfig(config) {\n    this.masterFormConfig = config;\n  }\n  componentWillLoad() {\n    if (this.resourceID == undefined) {\n      throw new Error(\"Erro interno: resourceID não informado\");\n    }\n    this._configManager = new SnkFormConfigManager(this.configName, this.resourceID, this.setMasterFormConfig.bind(this), this.dataUnit);\n    this.addFormLegacyConfigName();\n    this._configManager.loadConfig();\n  }\n  componentDidRender() {\n    if (!this._guideHasChanged) {\n      return;\n    }\n    if (this._currentDetail) {\n      this._currentDetail.showUp();\n    }\n    else {\n      if (this._mainForm) {\n        this._mainForm.showUp();\n      }\n    }\n    this._guideHasChanged = false;\n  }\n  getFieldsSearch(item) {\n    if (this._fieldSearch == undefined || this._hasToCreateFieldSearch) {\n      this._hasToCreateFieldSearch = false;\n      this._fieldSearch = buildFieldSearch(item, ({ argument }) => this.fieldsOptionLoader(argument), (option) => this.onSelectField(option));\n    }\n    return this._fieldSearch;\n  }\n  fieldsOptionLoader(argument) {\n    return Promise.resolve(this._configManager.getFieldsList(argument)\n      .map(field => ({ value: field.name, label: field.label })));\n  }\n  onSelectField(option) {\n    if (option == undefined) {\n      return;\n    }\n    this._fieldToGetFocus = option.value;\n    const fieldGuideName = this.getGuideName(option.value);\n    if (fieldGuideName !== this.selectedGuide.id) {\n      this.changeGuideHandler(fieldGuideName);\n    }\n  }\n  getActionsList() {\n    var _a;\n    const hardList = [];\n    if (this.taskbarManager != undefined && this.taskbarManager.getMoreOptions != undefined) {\n      return hardList.concat((_a = this.taskbarManager.getMoreOptions(this.getTaskBarId(), this.configName, this.dataState, this.actionsList)) !== null && _a !== void 0 ? _a : []);\n    }\n    return hardList.concat(this.actionsList);\n  }\n  getSettingsListForm() {\n    const hardList = [{\n        value: StringUtils.generateUUID(),\n        label: this.getMessage(\"snkCrud.findColumn\"),\n        disableCloseOnSelect: true,\n        eagerInitialize: true,\n        itemBuilder: (_, item) => this.getFieldsSearch(item)\n      }];\n    return hardList;\n  }\n  buildTaskBar() {\n    var _a;\n    return h(\"div\", { class: `snk-guides-viewer__header-taskbar ${this.presentationMode != PresentationMode.SECONDARY ? 'ez-align--right' : 'ez-padding-bottom--medium'}` }, h(\"snk-taskbar\", { key: \"guideViewerTaskbar\", \"data-element-id\": \"guideViewer\", configName: this.configName, buttons: this._taskbarProcessor.buttons, disabledButtons: this._taskbarProcessor.disabledButtons, customButtons: this._taskbarProcessor.customButtons, actionsList: this.getActionsList(), actionsSettingsList: this.getSettingsListForm(), messagesBuilder: this.messagesBuilder, presentationMode: this.presentationMode, primaryButton: ((_a = this.dataState) === null || _a === void 0 ? void 0 : _a.isDirty) ? TaskbarElement.SAVE : TaskbarElement.INSERT, \"data-taskbar-owner\": \"master\", dataUnit: this.dataUnit, resourceID: this.resourceID, customSlotId: \"GUIDES_VIEWER_TASKBAR_CUSTOM_ELEMENTS\", alignRigth: true }, h(\"slot\", { name: \"GUIDES_VIEWER_TASKBAR_CUSTOM_ELEMENTS\" })));\n  }\n  async dataUnitActionHandler(action) {\n    var _a;\n    switch (action.type) {\n      case Action.EDITION_CANCELED:\n      case Action.DATA_SAVED:\n        if (this.dataUnit.isMultipleEdition) {\n          this.exitViewer();\n          this.dataUnit.isMultipleEdition = false;\n        }\n        break;\n      case Action.FIELD_INVALIDATED:\n        const guideName = this.getGuideName((_a = action.payload) === null || _a === void 0 ? void 0 : _a.fieldName);\n        await this.addErrorBadgeToGuide(guideName);\n        await this.openGuideNavigator(guideName);\n        break;\n      case Action.METADATA_LOADED:\n      case Action.MULTIPLE_EDITION_CHANGED:\n        this.loadGuides(this.noGuideSelected());\n        break;\n    }\n  }\n  async addErrorBadgeToGuide(guideName) {\n    var _a;\n    this._guides = [...(_a = this._guides) === null || _a === void 0 ? void 0 : _a.map(guide => {\n        return Object.assign(Object.assign({}, guide), { badge: this.getBadge(guide, guideName) });\n      })];\n  }\n  async openGuideNavigator(guideName) {\n    if (this.selectedGuide.id !== guideName) {\n      await this._guideNavigator.openGuideNavidator();\n    }\n  }\n  getBadge(guide, tabName) {\n    var _a;\n    if (this.selectedGuide.id === tabName) {\n      return null;\n    }\n    if (tabName === guide.id) {\n      return \"error\";\n    }\n    return (_a = guide.badge) !== null && _a !== void 0 ? _a : null;\n  }\n  getGuideName(fieldName) {\n    var _a;\n    for (const sheet of this._masterFormMetadata.getAllSheets()) {\n      const formFields = (_a = sheet[1]) === null || _a === void 0 ? void 0 : _a.fields;\n      for (const field of formFields) {\n        if (field.name === fieldName) {\n          return sheet[0];\n        }\n      }\n    }\n    return \"\";\n  }\n  getTitle() {\n    var _a, _b;\n    return (_b = (_a = this.getCustomTitle) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : this.getMessage(\"snkCrud.title\");\n  }\n  getTitleTooltip() {\n    if (!this.dataUnit.isMultipleEdition)\n      return;\n    return this.buildRecordIdsArray();\n  }\n  buildRecordIdsArray() {\n    var _a, _b;\n    const selectedRecords = (_b = (_a = this.dataUnit.getSelectionInfo()) === null || _a === void 0 ? void 0 : _a.records) !== null && _b !== void 0 ? _b : [];\n    if (selectedRecords.length === 0) {\n      return \"[]\";\n    }\n    const labels = selectedRecords.map(record => this.messagesBuilder.getMessage(\"snkCrud.title\", record));\n    return `[${labels.join(\", \")}]`;\n  }\n  componentDidLoad() {\n    this.dataUnit.subscribe(this.dataUnitActionHandler.bind(this));\n    this.initKeyboardManager();\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this._keyboardManager) === null || _a === void 0 ? void 0 : _a.unbindAllShortcutKeys();\n  }\n  async initKeyboardManager() {\n    this._keyboardManager = new KeyboardManager({ propagate: false, element: this._element });\n    this._keyboardManager.bind(SHORTCUT_SEARCH_FIELD, async () => {\n      if (!this._mainForm)\n        return;\n      await this._mainForm.showSearchField();\n    }, { description: LABEL_SEARCH_FIELD, element: this._element });\n  }\n  render() {\n    var _a, _b;\n    if (this._formEditorConfigManager != undefined) {\n      return (h(\"snk-form-config\", { ref: ref => this._container = ref, tabindex: -1, dataUnit: this._formEditorDataUnit, messagesBuilder: this.messagesBuilder, configManager: this._formEditorConfigManager, onConfigClose: () => this._formEditorConfigManager = null }));\n    }\n    if (!this.dataUnit || !this._configManager.isLoaded) {\n      return;\n    }\n    this.loadTaskbarProcessor();\n    const showGuides = this._guides && (this._guides.length > 1);\n    return (h(\"section\", { class: \"snk-guides-viewer\", ref: ref => this._container = ref, tabindex: -1 }, h(\"div\", { class: \"ez-row snk-guides-viewer__header\" }, h(\"div\", { class: \"snk-guides-viewer__header-breadcrumb ez-flex--align-items-center ez-flex-item--align-center ez-padding-left--large\", key: \"header\" }, h(\"ez-button\", { onClick: () => this.exitViewer(), title: this.getMessage(\"snkCrud.goBackTitle\"), mode: \"icon\", iconName: \"arrow_back\", class: \"ez-padding-right--medium\", size: \"small\" }), h(\"div\", { class: \"ez-flex ez-flex--column ez-flex-item--auto\" }, h(\"h1\", { class: \"ez-title ez-title--primary ez-title--xlarge\", title: this.getTitleTooltip() }, this.getTitle()), ((_a = this._breadcrumbItems) === null || _a === void 0 ? void 0 : _a.length) > 1 &&\n      h(\"div\", { class: \"ez-margin-top--extra-small\" }, h(\"ez-breadcrumb\", Object.assign({ items: this._breadcrumbItems, onSelectedItem: (evt) => this.onBreadcrumbClickHandler(evt === null || evt === void 0 ? void 0 : evt.detail) }, { [ElementIDUtils.DATA_ELEMENT_ID_ATTRIBUTE_NAME]: `${ElementIDUtils.getInternalIDInfo(\"breadcrumb\")}` }))))), this.presentationMode != PresentationMode.SECONDARY && this.buildTaskBar()), h(\"div\", { class: \"snk-guides-viewer__container\" }, showGuides ?\n      h(\"ez-guide-navigator\", { ref: (ref) => this._guideNavigator = ref, class: \"snk-guides-viewer__guide-navigator\", items: this._guides, selectedId: this.selectedGuide ? this.selectedGuide.id : undefined, onEzSelectionChange: evt => this.updateSelectedGuideHandler(evt.detail) })\n      :\n        h(\"div\", null), h(\"div\", { class: \"snk-guides-viewer__detail-container\" }, SnkGuidesViewer.buildFixedForms({\n      formConfig: this.masterFormConfig,\n      formMetadata: this._masterFormMetadata,\n      selectedForm: (_b = this.selectedGuide) === null || _b === void 0 ? void 0 : _b.id,\n      dataUnit: this.dataUnit,\n      recordsValidator: this.recordsValidator,\n      fieldToFocus: this._fieldToGetFocus,\n      onRequestClearFieldToFocus: this.clearFieldToFocusHandler.bind(this),\n      propsCustomEditor: this._customEditors,\n      fieldsProps: this._fieldsProps\n    }), this.getContent())), h(\"snk-configurator\", { ref: (ref) => this._snkConfigurator = ref, viewMode: this.getConfigViewMode(), onConfigSelected: (evt) => this.changeConfigViewMode(evt.detail), messagesBuilder: this.messagesBuilder, onOpenConfig: (evt) => this.openConfig(evt.detail), resourceID: this.resourceID })));\n  }\n  get _element() { return getElement(this); }\n  static get watchers() { return {\n    \"dataUnit\": [\"observeDataUnit\"],\n    \"dataState\": [\"observeDataState\"],\n    \"masterFormConfig\": [\"observeMasterFormConfig\"]\n  }; }\n};\nvar TASKBAR_ID;\n(function (TASKBAR_ID) {\n  TASKBAR_ID[\"FINISH_EDITION\"] = \"snkGuideViewer.finish_edition\";\n  TASKBAR_ID[\"MUTIPLE_EDITION\"] = \"snkGuideViewer.multiple_edition\";\n  TASKBAR_ID[\"REGULAR\"] = \"snkGuideViewer.regular\";\n})(TASKBAR_ID || (TASKBAR_ID = {}));\nSnkGuidesViewer.style = snkGuidesViewerCss;\n\nexport { SnkGuidesViewer as S };\n"],"names":["snkGuidesViewerCss","FORM_NAME_PREFIX","SnkGuidesViewer","hostRef","registerInstance","createEvent","newValue","oldValue","_a","_b","_c","_d","_e","_f","newRecordsIds","oldRecordsIds","ObjectUtils","detail","masterConfig","fieldName","customEditor","customRender","propName","value","newFieldsProps","evt","TaskbarElement","key","changeSelection","buildFormMetadata","allSheets","currentRecord","disableDetails","guides","sheet","item","formId","FormMetadata","guideBuilder","guideItem","breadcrumbs","guide","TASKBAR_ID","taskbarIDs","TaskbarProcessor","btnsRegularMode","PresentationMode","disabledButtons","invisibleButtons","SelectionMode","formName","cardConfig","propertyChanged","configManager","params","cardsState","h","Fragment","cardConfigA","cardConfigB","indexA","indexB","levels","content","currentLevel","childEntityName","entityName","entityNames","level","guideId","detailId","detailBranch","pathSize","ref","cardId","_","currentItem","guideName","selectedGuide","idToCheck","guideChild","VIEW_MODE","mode","config","SnkFormConfigManager","buildFieldSearch","argument","option","field","fieldGuideName","hardList","StringUtils","action","Action","tabName","formFields","selectedRecords","record","KeyboardManager","SHORTCUT_SEARCH_FIELD","LABEL_SEARCH_FIELD","showGuides","ElementIDUtils","getElement"],"mappings":"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","x_google_ignoreList":[0]}